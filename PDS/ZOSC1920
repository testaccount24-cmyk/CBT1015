/* REXX */
/*******************************************************************/
/*                                                                 */
/* Sicherung wegen Program{nderung                                 */
/* ProgramNAME      : ZOSC1920  (fuer ZOS V12 Nr 920)              */
/* AUSRUF           : Procedure  x=ZOSC1920(ssid,loc,ausw,obj)     */
/* AUTHER           : ULRICH BRAEUER                               */
/* FUNKTION         : AG : Build DDL/HDDL Statements               */
/* Aenderung        : DSNRECON wir bei DDL generierung             */
/*                  : aus performance gruenden auf N gestetzt      */
/*                                                                 */
/* Aufpassen auf rexx_Win mus | in ] geaendert werden              */
/*                                                                 */
/*******************************************************************/

/* To protect against errors: */
SIGNAL ON SYNTAX          /* TURN ON SYNTAX TRAP */
SIGNAL ON HALT            /* TRAP THIS ONLY ON LUW */
SIGNAL OFF FAILURE
SIGNAL OFF ERROR

PARSE SOURCE SRC.1 SRC.2 SRC.3 SRC.4 SRC.5 SRC.6 SRC.7 SRC.8 SRC.9
IF SRC.2 = "SUBROUTINE" Then SUBROUTINE    = 'Y'
 Else                        SUBROUTINE    = 'N'
ispf_env = SRC.8
parse Upper version rexxType level date

ENV        = "WIN"
ENV        = "TSO"
IF SRC.1 <> "TSO" & Substr(rexxType, 1, 11) = "REXX-OOREXX" Then Do
   ENV = "WIN"
 End

USER       = USERID()
SYSCATS    = "SYSCAT"
SYSIBMS    = "SYSIBM"
SYSIBMA    = "SYSIBMADM"
SYSPROCA   = "SYSPROC"
CURRULE    = "STD"
RECLEN     = 4096
STMTLEN    = 4096
TRACKS     = 60
DSNRECON   = "N"
SYSUID     = ""
SYSPWD     = ""
DDLSPUFI   = "N"
SpufiLen   = 72   /* Laenge ausgabe SPUFI COMPATIBILITAET  */
Worklisttype = 1  /* Standart fuer Worklist               */
WLTYPE     = Worklisttype
ARELTBT    = 0


IF UDBTRACE = 'ON' THEN TRACE R
ELSE                    TRACE

area.0     = 0
stmt       = ''
ddl        = ""
ddltext    = ""
HEADER     = "YES"

ssid       = arg(1)            /* DB2 SSID            */
location   = arg(2)            /* location to connect */
auswahl    = arg(3)            /* TS,TB,VW,IX,...     */
object     = arg(4)            /* Name des Object     */
table      = arg(5)            /* alle Objekte fuer TB*/
object3    = arg(6)            /* alle Objekte fuer TB*/
object4    = arg(7)            /* alle Objekte fuer TB*/
object5    = arg(8)            /* alle Objekte fuer TB*/
tablespace = arg(9)            /* alle objekte fuer TS*/
database   = arg(10)           /* alle objekte fuer DB*/
lcmd       = arg(11)           /* Command DDL oder HDDL */
lnr        = arg(12)           /* Laufende Nummer (ausgabe) */
ALLOCMODE  = arg(13)           /* SHR / MOD             */
ISPFILE    = arg(14)           /* SHR / MOD             */
db2vers    = arg(15)           /* SHR / MOD             */
db2catl    = arg(16)           /* SHR / MOD             */

RUN_ENV = "ONLINE"
Select
  WHEN ENV = "WIN" THEN DO
       RUN_ENV = "BATCH"
       call RxFuncAdd 'SysLoadFuncs', 'rexxutil', 'SysLoadFuncs'
       call sysloadfuncs

       parse version rexxType .
       parse source platform .

       if platform == 'AIX/6000' & rexxType == 'REXXSAA' then do
          rcy = SysAddFuncPkg("db2rexx")
        End
       Else Do
          if Rxfuncquery('SQLDBS') <> 0 then
             rcy = rxfuncadd('SQLDBS', 'db2ar', 'SQLDBS')
          if Rxfuncquery('SQLDB2') <> 0 then
             rcy = rxfuncadd('SQLDB2','db2ar','SQLDB2')
          if Rxfuncquery('SQLEXEC') <> 0 then
             rcy = rxfuncadd('SQLEXEC','db2ar','SQLEXEC')
        End
       PARSE UPPER ARG Parms
       PARSE ARG  Parmso
       auswahl      = ""
       object       = ""
       table        = ""
       object3      = ""
       object4      = ""
       object5      = ""
       tablespace   = ""
       database     = ""
       Grant        = ""
       Call Get_Parms
   END
  WHEN ispf_env = 'ISPF' THEN Do
       CALL CHK_DD_STMT
       FOUND = POS("SYSTSIN", DDLISTE, 1)
       IF FOUND > 0 THEN DO
          RUN_ENV = "BATCH"
          X          = MSG('OFF')
          DSNRECON   = "N"

          ADDRESS ISPEXEC 'VPUT (SYSUID)   PROFILE'
          ADDRESS ISPEXEC 'VPUT (SYSPWD)   PROFILE'
          ADDRESS ISPEXEC 'VPUT (UDBTRACE) PROFILE'
          ADDRESS ISPEXEC 'VPUT (SYSIBMS)  PROFILE'
          ADDRESS ISPEXEC 'VPUT (SYSCATS)  PROFILE'
          ADDRESS ISPEXEC 'VPUT (SYSIBMA)  PROFILE'
          ADDRESS ISPEXEC 'VPUT (SYSPROCA) PROFILE'
          ADDRESS ISPEXEC 'VPUT (CURSQLID) PROFILE'
          ADDRESS ISPEXEC 'VPUT ('STRIP(SSID)'SQID) PROFILE'
          ADDRESS ISPEXEC 'VPUT (RECLEN)   PROFILE'
          ADDRESS ISPEXEC 'VPUT (STMTLEN)  PROFILE'
          ADDRESS ISPEXEC 'VPUT (TRACKS)   PROFILE'
          ADDRESS ISPEXEC 'VPUT (DSNRECON) PROFILE'
          ADDRESS ISPEXEC 'VPUT (DDLSPUFI) PROFILE'
          ADDRESS ISPEXEC 'VPUT (CURRULE ) PROFILE'
          ADDRESS ISPEXEC 'VPUT (WLTYPE  ) PROFILE'
        END
        else do
          RUN_ENV = "ONLINE"
          X          = MSG('OFF')
          ADDRESS ISPEXEC 'VGET (SYSUID)   PROFILE'
          ADDRESS ISPEXEC 'VGET (SYSPWD)   PROFILE'
          ADDRESS ISPEXEC 'VGET (UDBTRACE) PROFILE'
          ADDRESS ISPEXEC 'VGET (SYSIBMS)  PROFILE'
          ADDRESS ISPEXEC 'VGET (SYSCATS)  PROFILE'
          ADDRESS ISPEXEC 'VGET (SYSIBMA)  PROFILE'
          ADDRESS ISPEXEC 'VGET (SYSPROCA) PROFILE'
          ADDRESS ISPEXEC 'VGET (CURSQLID) PROFILE'
          ADDRESS ISPEXEC 'VGET ('STRIP(SSID)'SQID) PROFILE'
          ADDRESS ISPEXEC 'VGET (RECLEN)   PROFILE'
          ADDRESS ISPEXEC 'VGET (STMTLEN)  PROFILE'
          ADDRESS ISPEXEC 'VGET (TRACKS)   PROFILE'
          ADDRESS ISPEXEC 'VGET (DSNRECON) PROFILE'
          ADDRESS ISPEXEC 'VGET (DDLSPUFI) PROFILE'
          ADDRESS ISPEXEC 'VGET (CURRULE ) PROFILE'
          ADDRESS ISPEXEC 'VGET (WLTYPE  ) PROFILE'
        End
       ADDRESS TSO
       "DROPBUF"
       "MAKEBUF"
    End
   WHEN ispf_env = 'MVS' THEN Do
        RUN_ENV = "BATCH"
        ADDRESS MVS
    End

  OTHERWISE DO
        RUN_ENV = "BATCH"
   END
 END

If ENV <> "WIN"       ,
 & RUN_ENV = "BATCH"   Then Do
   G_DATABASE        =  "N"        /*  DB /                         */
   G_Tablespace      =  "N"        /*  DB / SC                      */
   G_Table           =  "N"        /*  DB / SC                      */
   G_Index           =  "N"        /*  DB / SC                      */
   G_Comment         =  "N"        /*  DB / SC                      */
   G_Auxtable        =  "N"        /*  DB / SC                      */
   G_View            =  "N"        /*  DB / SC                      */
   G_PrimaryKey      =  "N"        /*  DB / SC                      */
   G_ForeignKey      =  "N"        /*  DB / SC                      */
   G_Trigger         =  "N"        /*  DB / SC                      */
   G_SProc           =  "N"        /*  DB / SC                      */
   G_Synonym         =  "N"        /*  DB / SC                      */
   G_Permission      =  "N"        /*  DB / SC                      */
   G_Variable        =  "N"        /*  DB / SC                      */
   G_GrantTable      =  "N"        /*  DB / SC                      */
   G_GrantView       =  "N"        /*  DB / SC                      */
   G_GrantSQ         =  "N"        /*  DB / SC                      */
   G_GrantRT         =  "N"        /*  DB / SC                      */
   G_Sequence        =  "N"        /*     / SC                      */
   G_Alias           =  "N"        /*     / SC                      */
   G_Variable        =  "N"        /*     / SC                      */
   G_Datatype        =  "N"        /*     / SC                      */

   CALL GET_PARM
   IF RC = 0 THEN DO I = 1 TO RXPARMS.0
      if Strip(RXPARMS.I)        = ''   Then Iterate
      if SUBSTR(RXPARMS.I, 1, 2) = '--' Then Iterate
      PARM  = TRANSLATE(RXPARMS.I, '_', '-')
      INTERPRET  PARM
      say parm
      if WORD(PARM,1) = "SSID" Then Do
         DB2_SSID = SSID
         SAY "DB2_SSID=" DB2_SSID
       End
    END
    IF TRACE = 'ON' THEN    TRACE R
    ELSE                    TRACE
 End


DB2_SSID = SSID

If WLTYPE = 1 | WLTYPE = 2 Then Worklisttype = WLTYPE
 Else                           Worklisttype = 1


red   = '01'x                         /* Assign colors to       */
blue  = '02'x                         /*   Attribute bytes      */
green = '03'x                         /*   found in the data    */
white = '04'x
in1   = '05'x
in2   = '06'x
in3   = '07'x
uid   = '08'x
pwd   = '09'x
endin = '3a'x
keyw  = '3b'x
keytab.0 = 5
keytab.1 = in1
keytab.2 = in2
keytab.3 = in3
keytab.4 = uid
keytab.5 = pwd
maxlines = 0                          /* set max number of lines*/
dyndata  = ''                         /* initialize data        */
cmddata  = ''                         /* initialize data        */
curline  = 1
WL       = ""                         /* SUCHEN MIT LIKE        */
Show_Panel      = "N"                 /* Panel nur f}r HDDL DB/SC */

STMT_Schritte   = 100              /* Schritte der Worklist    */
STMT_Nummer     = 0                /* Statement Nummer fuer restart */

select
  When auswahl = "KT" Then Auswahl = "IX"
  OTHERWISE NOP
 End

Select
  When lcmd = "HDDL"     Then Do
       lcmd = "HDDL"
   end
  When lcmd = "DDLE"     Then Do
       Show_Panel = "Y"           /* Panel nur f}r HDDL DB/SC */
       Call Auswahl_DDLE
       If auswahl = 'SC' ,
        | auswahl = 'DB' ,
        | auswahl = 'TS' ,
        | auswahl = 'TB' Then Do
          lcmd = "HDDL"
        end
        Else Do
          lcmd = "DDL"
        end
   end
  When lcmd = "COPY" Then Do
       lcmd = "COPY"
   end
  Otherwise do
       lcmd = "DDL"
   end
 End

CT = lcmd auswahl    /* Setzen Calltype fuer AC2 */

OAuswahl = auswahl
if OAuswahl = "SC" | OAuswahl = "DB" then do
   DDLTEXT    = "-- START : " DATE() TIME() "-NL"
 End

If ENV = "WIN"   THEN SSID_CURRENT_SQLID = USER
ELSE  SSID_CURRENT_SQLID = value(STRIP(SSID)"SQID")

IF Run_ENV = "BATCH"  Then SSID_CURRENT_SQLID = CURSQLID
If length(SSID_CURRENT_SQLID) > 0 then do
   CURSQLID = SSID_CURRENT_SQLID
 End

IF CURSQLID   = "NONE" THEN CURSQLID = ""

DB2_LOC      = auswahl
DB2_CREATOR1 = ""
DB2_NAME1    = ""
select
  When Run_ENV = "ONLINE" Then Do
       IF POS('.', object) > 0 THEN
          PARSE VALUE object WITH DB2_CREATOR1 '.' DB2_NAME1
        ELSE DB2_NAME1 = object
   End
  When Run_ENV = "BATCH"  Then Do
       IF POS('.', object) > 0 THEN Do
          PARSE VALUE object WITH DB2_CREATOR1 '.' DB2_NAME1
          If auswahl = "SC" Then Do
             DB2_CREATOR1 =  DB2_NAME1
             DB2_NAME1    =  ""
           End
        End
        ELSE Do
          DB2_NAME1   = object
          If auswahl  = "SC" Then Do
             DB2_CREATOR1 =  DB2_NAME1
             DB2_NAME1    =  ""
           End
         End
   End
  OTHERWISE DO
       IF POS('.', object) > 0 THEN
          PARSE VALUE object WITH DB2_CREATOR1 '.' DB2_NAME1
        ELSE DB2_NAME1 = object
   End
 End


DSNRECON_SAVE = DSNRECON
If Run_Env = "BATCH" Then DSNRECON = "Y"
If ENV <> "WIN"  Then do
   If DSNRECON = "Y"  Then do
      DSNRECON = "N"
      If ispf_env <> "MVS" Then Do
         ADDRESS ISPEXEC 'VPUT (DSNRECON) PROFILE'
       End
      Call Load_DSNREXX
      If RUN_ENV = "BATCH"  Then Call DB2V12_Modlevel
    End
End

RXDB2_SSID        = DB2_SSID
RXDB2_GETSTEM     = 'EINGABE.'
RXDB2_PUTSTEM     = 'AUSGABE.'
RXDB2_MAXROWS     = 0
RXDB2_IGNORE_SQLERR = 'N'

If ENV = "TSO"  ,
 & RUN_ENV = "ONLINE"  Then Do
   call Alloc_file
 End

Anzahl_Objecte = 0
Max_Objecte    = 2
Max_Objecte    = 9999

If auswahl  = "TG" ,
 | auswahl  = "FN" ,
 | auswahl  = "PR" ,
 | auswahl  = "RT" Then do
   sqlterm = "#"
 End
else do
   sqlterm = ";"
 End

If ENV = "WIN" Then do
   Select
    When auswahl   = "RT" Then do
      table = Object
   Object = "%"
     End
    Otherwise NOP
   End
 End


If Length(location) > 0 Then  OK = Connect_Location(location)

DROP Auswahl_liste.
DROP SGListe.
DROP DBListe.
DROP TSListe.
Auswahl_liste.0 = 0
SGListe.0       = 0
DBListe.0       = 0
TSListe.0       = 0

Select
  when lcmd    = 'COPY'      ,
     & (  auswahl = 'TBA'  ,
        | auswahl = 'DBA'  ,
        | auswahl = 'VARA' ,
        | auswahl = 'UA'   ,
        | auswahl = 'RA'   ,
        | auswahl = 'RTA'  ,
        | auswahl = 'SCA'  ,
        | auswahl = 'SEA'  ,
        | auswahl = 'PLA'  ,
        | auswahl = 'PGA'  ,
        | auswahl = 'COA'  ,
        | auswahl = 'PRGA' ,
        ) Then Do
               parse value object with grantor "." grantee
               object = "*." || grantee
               save_object = object
               object1     = grantee

               Call Auswahl_COPY_auth

               If A_DBA        = "Y" Then Do
                  table   = save_object    ; object      = "" ;
                  auswahl = 'DBA'          ; CALL GEN_DDL ;
                End

               If A_SCA        = "Y" Then Do
                  table   = save_object    ; object      = "" ;
                  auswahl = 'SCA'          ; CALL GEN_DDL ;
                End

               If A_UA         = "Y" Then Do
                  object  = save_object    ; table       = "" ;
                  auswahl = 'UA'           ; CALL GEN_DDL ;
                End

               If A_RA         = "Y" Then Do
                  object  = save_object    ; table       = "" ;
                  auswahl = 'RA'           ; CALL GEN_DDL ;
                End

               If A_SEA        = "Y" Then Do
                  table   = save_object    ; object      = "" ;
                  auswahl = 'SEA'          ; CALL GEN_DDL ;
                End

               If A_VARA       = "Y" Then Do
                  table   = save_object    ; object      = "" ;
                  auswahl = 'VARA'         ; CALL GEN_DDL ;
                End

               If A_RTA        = "Y" Then Do
                  table   = save_object    ; object      = "" ;
                  auswahl = 'RTA'          ; CALL GEN_DDL ;
                End

               If A_PLA        = "Y" Then Do
                  table   = save_object    ; object      = "" ;
                  auswahl = 'PLA'          ; CALL GEN_DDL ;
                End

               If A_PGA        = "Y" Then Do
                  table   = save_object    ; object      = "" ;
                  auswahl = 'PGA'          ; CALL GEN_DDL ;
                End

               If A_TBA        = "Y" Then Do
                  table   = save_object    ; object      = "" ;
                  auswahl = 'TBA'          ; CALL GEN_DDL ;
                End

/*
       auswahl = 'COA'          ; CALL GEN_DDL ;
       auswahl = 'PRGA'         ; CALL GEN_DDL ;
*/
               object  = save_object
   End
  when lcmd = "DDL"     Then    CALL GEN_DDL
  when lcmd = "HDDL"    Then    Do
       Select
          When  auswahl = "SC" Then do
                Show_Panel = "Y"
                Info_anzeige = "N"
                Call Auswahl_SC
                StartZeit = Date() TIME()
                Call LESEN_SC
                CALL GEN_HDDL_SC
           end
          When  auswahl = "DB" Then do
                Show_Panel = "Y"
                Info_anzeige = "N"
                Call Auswahl_DB
                StartZeit = Date() TIME()
                DB2_CREATOR1 = DB2_NAME1
                DB2_NAME1    = ""
                Call LESEN_DB
                CALL GEN_HDDL_DB
                CALL GEN_HDDL_TS
           end
          When  auswahl = "TS" Then do
                Info_anzeige = "N"
                Call LESEN_DB
                CALL GEN_HDDL_TS
           end
          When  auswahl = "TB" Then do
                Auswahl_liste.0 = 1
                Auswahl_liste.1 = object
                CALL GEN_HDDL

                auswahl = "PK"
                object  =  Auswahl_liste.1
                Call GEN_DDL

                auswahl = "FK"
                object  =  Auswahl_liste.1
                Call GEN_DDL
           end
          When  auswahl = "IX" Then do
                CALL GEN_DDL

                auswahl = "PK"
                obo     = object
                tbo     = table
                object  = table
                table   = ""
                Call GEN_DDL
                object  = obo
                table   = tbo

           end
          When  auswahl = "RT" Then do
                Grant   = "YES"
                CALL GEN_SPROC_DDL
                Grant   = "NO"
           end
          When  auswahl = "SE" Then do
                Call GEN_DDL
                auswahl = "SEA"
                Call GEN_DDL
           end
          Otherwise   Do
               Grant   = "YES"
               Call GEN_DDL
               Grant   = "YES"
           End
        end
    end
  Otherwise   DDLTEXT = ""
 End

Do QUEUED()
   Parse pull Text
   parse value text with OBJ_Type object
   object = Strip(object)

   select
     When OBJ_Type = "TB" Then do
          auswahl  = "TBA"
          CALL Lesen_daten_DDL
          DDLTEXT  = DDLTEXT "-NL"
      End
     When OBJ_Type = "VW" Then do
          auswahl  = "TBA"
          CALL Lesen_daten_DDL
          DDLTEXT  = DDLTEXT "-NL"
      End
     When OBJ_Type = "RT" Then do
          auswahl  = "RTA"
          CALL Lesen_daten_DDL
          DDLTEXT  = DDLTEXT "-NL"
      End
     Otherwise NOP
    End
 End

DSNRECON      = DSNRECON_SAVE
If ENV <> "WIN"  & ispf_env <> "MVS" Then Do
   ADDRESS ISPEXEC 'VPUT (DSNRECON) PROFILE'
 End

If Length(location) > 0 & DSNRECON <> "Y" Then do
   OK = DisConnect_Location(location)
 End
If DSNRECON = "Y" & ENV <> "WIN"  Then Do
   Call UNLoad_DSNREXX
 End

DDLTEXT = DDLTEXT "-NL COMMIT -NR"
if OAuswahl = "SC" | OAuswahl = "DB" then do
   DDLTEXT = DDLTEXT || "-- Start : " StartZeit "-NL"
   DDLTEXT = DDLTEXT || "-- END   : " DATE() TIME() "-NL"
 end

If RUN_ENV  = "ONLINE" Then Do
   call Anzeigen_daten
   IF ENV = "TSO" Then do
      ADDRESS "TSO" "FREE FI(SELDD)"
      ok   = ZOSC1911(SSID,     ,
                      LOCATION,  ,
                      EINGABE,   ,
                      OBJECT1,   ,
                      DSNAME,    ,
                      LNR   )

      ADDRESS "TSO" "DROPBUF"
   END
 End
 ELSE DO
   call Anzeigen_daten
   If ENV <> "WIN"  Then Do
      "DROPBUF"
    End
   RETURN
 End

Return Stmt

GEN_DDL:
   CALL Lesen_daten_DDL
   IF LENGTH(DDLTEXT) = 0 THEN RETURN ''
   DDLTEXT  = DDLTEXT "-NL"

Return

GEN_HDDL_SC:


TDIFF  = 0
WL       = "EQ"              /* SUCHEN MIT LIKE NEIN  */
If Datatype_Val <> "N" Then DO
   start_zeit = time()
   Anzahl_Objecte = 0
   Do awi = 1 To Ausgabe.0
      Select
       when Ausgabe.awi.KENNZ = 'DT'    Then Nop
       Otherwise    Iterate
       End
      Auswahl = "DT"
      Object  = Strip(Ausgabe.awi.DBNAME) || "." || ,
                Strip(Ausgabe.awi.TSNAME)

      Call GEN_DDL
   End
   tdiff = time_diff(start_zeit, time() );
 End
ADT     = Datatype_Val
ADTT    = tdiff
ADTOK   = "OK"; Info_anzeige = "YES";Call Auswahl_SC;

If Variable_Val <> "N" Then DO
   start_zeit = time()
  Anzahl_Objecte = 0
  Do awi = 1 To Ausgabe.0
     Select
      when Ausgabe.awi.KENNZ = 'VAR'  Then Nop
      Otherwise    Iterate
      End
     Auswahl = "VAR"
     Object  = Strip(Ausgabe.awi.DBNAME) || "." || ,
               Strip(Ausgabe.awi.TSNAME)

     Call GEN_DDL
   End
   tdiff = time_diff(start_zeit, time() );
 End
ADVAR   = Variable_Val
AVART   = tdiff
AVAROK  = "OK"; Info_anzeige = "YES";Call Auswahl_SC;

If Database_Val   <> "N" Then DO
   start_zeit = time()
   Anzahl_Objecte = 0
   DB_ODB = ""
   DB_OTS = ""
   Do awi = 1 To Ausgabe.0
      Select
       when Ausgabe.awi.KENNZ = 'DB'  Then NOP
       Otherwise    Iterate
       End

      If DB_ODB = Ausgabe.awi.DBNAME Then Do
         Iterate
       End

      Auswahl = "DB"
      Object  = "*." || Strip(Ausgabe.awi.DBNAME)

      Call GEN_DDL

      DB_ODB = Ausgabe.awi.DBNAME
    End
    tdiff = time_diff(start_zeit, time() );
 End
ADB     = Database_Val
ADBT    = TDIFF
ADBOK   = "OK"; Info_anzeige = "YES";Call Auswahl_SC;

If Tablespace_Val   <> "N" Then DO
   start_zeit = time()
  Anzahl_Objecte = 0
  TS_ODB = ""
  TS_OTS = ""
  Do awi = 1 To Ausgabe.0
     Select
      when Ausgabe.awi.KENNZ = 'TS'  Then NOP
      Otherwise    Iterate
      End

     If TS_ODB = Ausgabe.awi.DBNAME ,
      & TS_OTS = Ausgabe.awi.TSNAME Then DO
        Iterate
      End

     Auswahl = "TS"
     Object  = Strip(Ausgabe.awi.DBNAME) || "." || ,
               Strip(Ausgabe.awi.TSNAME)

     Call GEN_DDL

     TS_ODB = Ausgabe.awi.DBNAME
     TS_OTS = Ausgabe.awi.TSNAME
   End
   tdiff = time_diff(start_zeit, time() );
 End
ATS     = Tablespace_Val
ATST    = TDIFF
ATSOK   = "OK"; Info_anzeige = "YES";Call Auswahl_SC;

If Tablespace_Val   <> "N" Then DO
   start_zeit = time()
  Anzahl_Objecte = 0
  TS_ODB = ""
  TS_OTS = ""
  Do awi = 1 To Ausgabe.0
     Select
      when Ausgabe.awi.KENNZ = 'REL' ,
         & Auxtable_Val  <> "N"      Then NOP
      Otherwise    Iterate
      End

     If TS_ODB = Ausgabe.awi.DBNAME ,
      & TS_OTS = Ausgabe.awi.TSNAME Then DO
        Iterate
      End

     Auswahl = "TS"
     Object  = Strip(Ausgabe.awi.DBNAME) || "." || ,
               Strip(Ausgabe.awi.TSNAME)

     Call GEN_DDL

     TS_ODB = Ausgabe.awi.DBNAME
     TS_OTS = Ausgabe.awi.TSNAME
   End
   tdiff = time_diff(start_zeit, time() );
 End
AREL    = Tablespace_Val
ARELT   = TDIFF
ARELOK  = "OK"; Info_anzeige = "YES";Call Auswahl_SC;

If Table_Val        <> "N" Then Do
   start_zeit = time()
  Anzahl_Objecte = 0
  Do awi = 1 To Ausgabe.0
     Select
      when Ausgabe.awi.KENNZ = 'TB'  Then NOP
      Otherwise    Iterate
      End
     Auswahl = "TB"
     Object  = Strip(Ausgabe.awi.Creator) || "." || ,
               Strip(Ausgabe.awi.NAME)

     Call GEN_HDDL_TB_OBJ
   End
   tdiff = time_diff(start_zeit, time() );
 End
ATB     = Table_Val
ATBT    = TDIFF
ATBOK   = "OK"; Info_anzeige = "YES";Call Auswahl_SC;

TDIFF   = 0
If Auxtable_Val     <> "N" Then Do
   start_zeit = time()
  tbval_save = Table_Val
  ixval_save = Index_Val
  Table_Val  = "J"
  Index_Val  = "J"
  Anzahl_Objecte = 0
  Do awi = 1 To Ausgabe.0
     Select
      when Ausgabe.awi.KENNZ = 'REL' Then NOP
      Otherwise    Iterate
      End
     object  = ""
     table   = ""
     Auswahl = "TB"
     Object  = Strip(Ausgabe.awi.Creator) || "." || ,
               Strip(Ausgabe.awi.NAME)
/*   Call GEN_HDDL_TS_OBJ   */
     Call GEN_DDL
     Auswahl = "IX"
     object  = ""
     table   = Strip(Ausgabe.awi.Creator) || "." || ,
               Strip(Ausgabe.awi.NAME)

      Call GEN_DDL
   End
  Table_Val  = tbval_save
  Index_Val  = ixval_save
  tdiff = time_diff(start_zeit, time() );
 End
ARELTBT   = ARELTBT + TDIFF
ARELTBOK  = "OK"; Info_anzeige = "YES";Call Auswahl_SC;

If Index_Val        <> "N" Then Do
   start_zeit = time()
   Anzahl_Objecte = 0
   table   = ""
   Object  = ""
   Do awi = 1 To Ausgabe.0
      Select
       when Ausgabe.awi.KENNZ = 'TB'  Then NOP
       Otherwise    Iterate
       End
      Auswahl = "IX"
      Object  = Strip(Ausgabe.awi.Creator) || "." || ,
                Strip(Ausgabe.awi.NAME)
      object  = ""
      table   = Strip(Ausgabe.awi.Creator) || "." || ,
                Strip(Ausgabe.awi.NAME)

      Call GEN_DDL
    End
   tdiff = time_diff(start_zeit, time() );
   table   = ""
   Object  = ""
 End
AIX     = Index_Val
AIXT    = TDIFF
AIXOK   = "OK"; Info_anzeige = "YES";Call Auswahl_SC;

If Comment_Val     <> "N" Then DO
   start_zeit = time()
  table = ""
  Anzahl_Objecte = 0
  Do awi = 1 To Ausgabe.0
     Select
      when Ausgabe.awi.KENNZ = 'TC'  Then NOP
      Otherwise    Iterate
      End
     Auswahl = "TC"
     Object  = Strip(Ausgabe.awi.Creator) || "." || ,
               Strip(Ausgabe.awi.NAME)

     Call GEN_DDL
   End
  tdiff = time_diff(start_zeit, time() );
 End
ATC     = Comment_Val
ATCT    = TDIFF
ATCOK   = "OK"; Info_anzeige = "YES";Call Auswahl_SC;

If SProc_Val        <> "N" Then DO
   start_zeit = time()
  table = ""
  Anzahl_Objecte = 0
  Do awi = 1 To Ausgabe.0
     Select
      when Ausgabe.awi.KENNZ = 'RT'  Then Nop
      Otherwise    Iterate
      End
     Auswahl = "RT"
     Object  = Strip(Ausgabe.awi.DBNAME)
     Table   = Strip(Ausgabe.awi.Creator) || "." || ,
               Strip(Ausgabe.awi.NAME)

     Select
       WHEN GrantRT_Val = "Y" Then    Grant = "YES"
       WHEN GrantRT_Val = "J" Then    Grant = "YES"
       Otherwise                      Grant = "NO"
      End

     Call GEN_SPROC_DDL
     Grant = "NO"
   End
  tdiff = time_diff(start_zeit, time() );
 End
ASP     = SProc_Val
ASPT    = TDIFF
ASPOK   = "OK"; Info_anzeige = "YES";Call Auswahl_SC;

If Trigger_Val      <> "N" Then Do
   start_zeit = time()
  table = ""
  Anzahl_Objecte = 0
  Do awi = 1 To Ausgabe.0
     Select
      when Ausgabe.awi.KENNZ = 'TG'  Then Nop
      Otherwise    Iterate
      End
     Auswahl = "TG"
     Object  = Strip(Ausgabe.awi.DBNAME) || "." || ,
               Strip(Ausgabe.awi.TSNAME)

     Call GEN_SPROC_DDL
   End
  tdiff = time_diff(start_zeit, time() );
 End
ATG     = Trigger_Val
ATGT    = TDIFF
ATGOK   = "OK"; Info_anzeige = "YES";Call Auswahl_SC;

If View_Val         <> "N" Then DO
   start_zeit = time()
  Anzahl_Objecte = 0
  Do awi = 1 To Ausgabe.0
     Select
      when Ausgabe.awi.KENNZ = 'VW'  Then Nop
      Otherwise    Iterate
      End
     Auswahl = "VW"
     Object  = Strip(Ausgabe.awi.DBNAME) || "." || ,
               Strip(Ausgabe.awi.TSNAME)

     If GrantView_Val <> "N" Then Grant    = "YES"
     Call GEN_DDL
     Grant    = ""

   End
  tdiff = time_diff(start_zeit, time() );
 End
AVW     = View_Val
AVWT    = TDIFF
TDIFF   = 0
AVWOK   = "OK"; Info_anzeige = "YES";Call Auswahl_SC;

If View_Val         <> "N" Then DO
  Anzahl_Objecte = 0
  Do awi = 1 To Ausgabe.0
     Select
      when Ausgabe.awi.KENNZ = 'MQT'  Then Nop
      Otherwise    Iterate
      End
     Auswahl = 'MQT'
     table   = ""
     Object  = Strip(Ausgabe.awi.CREATOR) || "." || ,
               Strip(Ausgabe.awi.NAME)

     If GrantView_Val <> "N" Then Grant    = "YES"
     Call GEN_DDL
     Grant    = ""
     /* CREATE INDEX FOR MQT */
     Auswahl = "IX"
     Object  = ""
     table   = Strip(Ausgabe.awi.CREATOR) || "." || ,
               Strip(Ausgabe.awi.NAME)

     Call GEN_DDL
   End
  Object  = ""
  table   = ""
  tdiff   = time_diff(start_zeit, time() );
 End
AVW     = View_Val
AVWT    = AVWT + TDIFF
AVWOK   = "OK"; Info_anzeige = "YES";Call Auswahl_SC;

If PrimaryKey_Val   <> "N" Then DO
   start_zeit = time()
  table = ""
  Anzahl_Objecte = 0
  Do awi = 1 To Ausgabe.0
     Select
      when Ausgabe.awi.KENNZ = 'PK'  Then Nop
      Otherwise    Iterate
      End
     Auswahl = "PK"
     Object  = Strip(Ausgabe.awi.DBNAME) || "." || ,
               Strip(Ausgabe.awi.TSNAME)

     Call GEN_DDL
   End
  tdiff = time_diff(start_zeit, time() );
 End
APK     = PrimaryKey_Val
APKT    = TDIFF
APKOK   = "OK"; Info_anzeige = "YES";Call Auswahl_SC;

If ForeignKey_Val   <> "N" Then DO
   start_zeit = time()
  table = ""
  Anzahl_Objecte = 0
  Do awi = 1 To Ausgabe.0
     Select
      when Ausgabe.awi.KENNZ = 'FK'  Then Nop
      Otherwise    Iterate
      End
     Auswahl = "FK"
     Object  = Strip(Ausgabe.awi.DBNAME) || "." || ,
               Strip(Ausgabe.awi.TSNAME)
     Object3 = "*." || Strip(Ausgabe.awi.Creator)

     Call GEN_DDL
   End
  tdiff = time_diff(start_zeit, time() );
 end
AFK     = ForeignKey_Val
AFKT    = TDIFF
AFKOK   = "OK"; Info_anzeige = "YES";Call Auswahl_SC;

If Alias_Val        <> "N" Then DO
   start_zeit = time()
  Object3 = ""
  Anzahl_Objecte = 0
  Max_Objecte    = 20
  Do awi = 1 To Ausgabe.0
     Select
      when Ausgabe.awi.KENNZ = 'AL'  Then Nop
      Otherwise    Iterate
      End
     Auswahl = "AL"
     Object  = Strip(Ausgabe.awi.DBNAME) || "." || ,
               Strip(Ausgabe.awi.TSNAME)

     Call GEN_DDL
   End
  tdiff = time_diff(start_zeit, time() );
 End
AAL     = Alias_Val
AALT    = TDIFF
AALOK   = "OK"; Info_anzeige = "YES";Call Auswahl_SC;

If Synonym_Val      <> "N" Then DO
   start_zeit = time()
  Anzahl_Objecte = 0
  Do awi = 1 To Ausgabe.0
     Select
      when Ausgabe.awi.KENNZ = 'SY'  Then Nop
      Otherwise    Iterate
      End
     Auswahl = "SY"
     Object  = Strip(Ausgabe.awi.DBNAME) || "." || ,
               Strip(Ausgabe.awi.TSNAME)

     Call GEN_DDL
   End
  tdiff = time_diff(start_zeit, time() );
 End
ASY     = Synonym_Val
ASYT    = TDIFF
ASYOK   = "OK"; Info_anzeige = "YES";Call Auswahl_SC;

If Sequence_Val     <> "N" Then DO
   start_zeit = time()
  Anzahl_Objecte = 0
  Do awi = 1 To Ausgabe.0
     Select
      when Ausgabe.awi.KENNZ = "SE"  Then Nop
      Otherwise    Iterate
      End
     Object  = Strip(Ausgabe.awi.DBNAME) || "." || ,
               Strip(Ausgabe.awi.TSNAME)

     Auswahl = "SE"
     Call GEN_DDL

     If GrantSQ_val <> "N" Then DO
        Auswahl = "SEA"
        Call GEN_DDL
      End
   End
  tdiff = time_diff(start_zeit, time() );
 End
ASE     = Sequence_Val
ASET    = TDIFF
ASEOK   = "OK"; Info_anzeige = "YES";Call Auswahl_SC;

If Permission_Val <> "N" Then DO
   start_zeit = time()
  Anzahl_Objecte = 0
  Do awi = 1 To Ausgabe.0
     Select
      when Ausgabe.awi.KENNZ = 'PERM'  Then Nop
      Otherwise    Iterate
      End
     Auswahl = "PERM"
     Object  = Strip(Ausgabe.awi.DBNAME) || "." || ,
               Strip(Ausgabe.awi.TSNAME)

     Call GEN_DDL
   End
  tdiff = time_diff(start_zeit, time() );
 End
APERM   = Permission_Val
APERMT  = TDIFF
APERMOK = "OK"; Info_anzeige = "YES";Call Auswahl_SC;

If Table_Val        <> "N" Then Do
   start_zeit = time()
  Anzahl_Objecte = 0
  Do awi = 1 To Ausgabe.0
     Select
      when Ausgabe.awi.KENNZ = 'ALTER'  Then Nop
      Otherwise    Iterate
      End
     Auswahl = "TBALTER"
     Object  = Strip(Ausgabe.awi.Creator) || "." || ,
               Strip(Ausgabe.awi.NAME)

     Call GEN_DDL
   End
  tdiff = time_diff(start_zeit, time() );
 End

Return

GEN_HDDL_DB:
DB_ODB = ""
WL     = "EQ"              /* SUCHEN MIT LIKE NEIN  */
If Database_Val     <> "N" Then DO
   start_zeit = time()
  Do DBI = 1 to Ausgabe.0
     Select
     /*
      when Ausgabe.DBi.KENNZ = 'TS'  Then Nop
      when Ausgabe.DBi.KENNZ = 'REL' Then NOP
     */
      when Ausgabe.DBi.KENNZ = 'DB'  Then Nop
      Otherwise    Iterate
      End
     Auswahl = "DB"
     If DB_ODB = Ausgabe.DBi.DBNAME Then Do
        Iterate
      End
     DB_ODB = Ausgabe.DBi.DBNAME
     Object = "*." || Ausgabe.DBi.DBNAME
     Call GEN_DDL
     Anzahl_Objecte = Anzahl_Objecte + 1
     if Anzahl_Objecte > Max_Objecte Then Do
        call Anzeigen_daten
        Anzahl_Objecte = 0
      End
   End
  tdiff = time_diff(start_zeit, time() );
 End

Return

GEN_HDDL_TS:

TS_ODB = ""
TS_OTS = ""

TDIFF  = 0
ADB     = Database_Val
ADBT  = TDIFF
ADBOK = "OK"; Info_anzeige = "YES";Call Auswahl_DB;
If Tablespace_Val   <> "N" Then DO
   start_zeit = time()
  Do TSI = 1 to Ausgabe.0
     Select
      when Ausgabe.TSi.KENNZ = 'TS'  Then Nop
      Otherwise    Iterate
      End
     Auswahl = "TS"
     If TS_ODB = Ausgabe.TSi.DBNAME ,
      & TS_OTS = Ausgabe.TSi.TSNAME Then DO
        Iterate
      End

     Object = Ausgabe.TSi.DBNAME || "." || Ausgabe.TSi.TSNAME

     Call GEN_DDL
     Anzahl_Objecte = Anzahl_Objecte + 1
     if Anzahl_Objecte > Max_Objecte Then Do
        call Anzeigen_daten
        Anzahl_Objecte = 0
      End

     TS_ODB = Ausgabe.TSi.DBNAME
     TS_OTS = Ausgabe.TSi.TSNAME
   End
  tdiff = time_diff(start_zeit, time() );
 End


ATS     = Tablespace_Val
ATST  = TDIFF
ATSOK = "OK"; Info_anzeige = "YES";Call Auswahl_DB;
If Tablespace_Val   <> "N" Then DO
   start_zeit = time()
  Do TSI = 1 to Ausgabe.0
     Select
      when Ausgabe.TSi.KENNZ = 'REL' Then NOP
      Otherwise    Iterate
      End
     Auswahl = "TS"
     If TS_ODB = Ausgabe.TSi.DBNAME ,
      & TS_OTS = Ausgabe.TSi.TSNAME Then DO
        Iterate
      End

     Object = Ausgabe.TSi.DBNAME || "." || Ausgabe.TSi.TSNAME

     Call GEN_DDL
     Anzahl_Objecte = Anzahl_Objecte + 1
     if Anzahl_Objecte > Max_Objecte Then Do
        call Anzeigen_daten
        Anzahl_Objecte = 0
      End

     TS_ODB = Ausgabe.TSi.DBNAME
     TS_OTS = Ausgabe.TSi.TSNAME
   End
  tdiff = time_diff(start_zeit, time() );
 End
AREL    = Tablespace_Val
ARELT  = TDIFF
ARELOK = "OK"; Info_anzeige = "YES";Call Auswahl_DB;


If Table_Val        <> "N" Then Do
   start_zeit = time()
  Anzahl_Objecte = 0
  Do awi = 1 To Ausgabe.0
     Select
      when Ausgabe.awi.KENNZ = 'TB'  Then Nop
      Otherwise    Iterate
      End
     Auswahl = "TB"
     Object  = Strip(Ausgabe.awi.Creator) || "." || ,
               Strip(Ausgabe.awi.NAME)

     Call GEN_HDDL_TB_OBJ
   End
  tdiff = time_diff(start_zeit, time() );
 End

ATB     = Table_Val
ATBT  = TDIFF
ATBOK = "OK"; Info_anzeige = "YES";Call Auswahl_DB;
tdiff = 0
If Auxtable_Val     <> "N" Then DO
   start_zeit = time()
  Anzahl_Objecte = 0
  Do awi = 1 To Ausgabe.0
     Select
      when Ausgabe.awi.KENNZ = 'REL' Then NOP
      Otherwise    Iterate
      End
/*   ALT
     Auswahl = "TB"
     Object  = Strip(Ausgabe.awi.Creator) || "." || ,
               Strip(Ausgabe.awi.NAME)

     Call GEN_HDDL_TS_OBJ
*/
/*   NEU  */
     object  = ""
     table   = ""
     Auswahl = "TB"
     Object  = Strip(Ausgabe.awi.Creator) || "." || ,
               Strip(Ausgabe.awi.NAME)

     Call GEN_DDL
     Auswahl = "IX"
     object  = ""
     table   = Strip(Ausgabe.awi.Creator) || "." || ,
               Strip(Ausgabe.awi.NAME)

      Call GEN_DDL
   End
  tdiff = time_diff(start_zeit, time() );
 End
ARELTB   = Auxtable_Val
ARELTBT  = ARELT + TDIFF
ARELTBOK = "OK"; Info_anzeige = "YES";Call Auswahl_DB;

If Index_Val        <> "N" Then Do
   start_zeit = time()
   table  = ""
   object = ""
   Anzahl_Objecte = 0
   Do awi = 1 To Ausgabe.0
      Select
       when Ausgabe.awi.KENNZ = 'TB'  Then NOP
       Otherwise    Iterate
       End
      Auswahl = "IX"
      table   = Strip(Ausgabe.awi.Creator) || "." || ,
                Strip(Ausgabe.awi.NAME)

      Call GEN_DDL
    End
   tdiff = time_diff(start_zeit, time() );
   table = ""
 End
AIX     = Index_Val
AIXT  = TDIFF
AIXOK = "OK"; Info_anzeige = "YES";Call Auswahl_DB;

If Comment_Val     <> "N" Then DO
   start_zeit = time()
  table = ""
  Anzahl_Objecte = 0
  Do awi = 1 To Ausgabe.0
     Select
      when Ausgabe.awi.KENNZ = 'TC'  Then NOP
      Otherwise    Iterate
      End
     Auswahl = "TC"
     Object  = Strip(Ausgabe.awi.Creator) || "." || ,
               Strip(Ausgabe.awi.NAME)
     Call GEN_DDL
   End
  tdiff = time_diff(start_zeit, time() );
 End
ATC     = Comment_Val
ATCT  = TDIFF
ATCOK = "OK"; Info_anzeige = "YES";Call Auswahl_DB;

If View_Val         <> "N" Then DO
   start_zeit = time()
  Anzahl_Objecte = 0
  table = ""
  Do awi = 1 To Ausgabe.0
     Select
      when Ausgabe.awi.KENNZ = 'VW'  Then Nop
      Otherwise    Iterate
      End
     Auswahl = "VW"
     Object  = Strip(Ausgabe.awi.DBNAME) || "." || ,
               Strip(Ausgabe.awi.TSNAME)

     If GrantView_Val <> "N" Then Grant    = "YES"
     Call GEN_DDL
     Grant    = ""
   End
  tdiff = time_diff(start_zeit, time() );
 End
AVW     = View_Val
AVWT    = tdiff
tdiff   = 0
AVWOK = "OK"; Info_anzeige = "YES";Call Auswahl_DB;

If View_Val         <> "N" Then DO
  Anzahl_Objecte = 0
  table = ""
  Do awi = 1 To Ausgabe.0
     Select
      when Ausgabe.awi.KENNZ = 'MQT' Then Nop
      Otherwise    Iterate
      End
     Auswahl = "MQT"
     table   = ""
     Object  = Strip(Ausgabe.awi.CREATOR) || "." || ,
               Strip(Ausgabe.awi.NAME)

     If GrantView_Val <> "N" Then Grant    = "YES"
     Call GEN_DDL
     Grant    = ""
     /* CREATE INDEX FOR MQT */
     Auswahl = "IX"
     Object  = ""
     table   = Strip(Ausgabe.awi.CREATOR) || "." || ,
               Strip(Ausgabe.awi.NAME)

     Call GEN_DDL
   End
  Object  = ""
  table   = ""
  tdiff = time_diff(start_zeit, time() );
 End
AVW     = View_Val
AVWT  = AVWT + TDIFF
AVWOK = "OK"; Info_anzeige = "YES";Call Auswahl_DB;

If PrimaryKey_Val   <> "N" Then DO
   start_zeit = time()
  table = ""
  Anzahl_Objecte = 0
  Do awi = 1 To Ausgabe.0
     Select
      when Ausgabe.awi.KENNZ = 'PK'  Then Nop
      Otherwise    Iterate
      End
     Auswahl = "PK"
     Object  = Strip(Ausgabe.awi.DBNAME) || "." || ,
               Strip(Ausgabe.awi.TSNAME)

     Call GEN_DDL
   End
  tdiff = time_diff(start_zeit, time() );
 End
APK     = PrimaryKey_Val
APKT  = TDIFF
APKOK = "OK"; Info_anzeige = "YES";Call Auswahl_DB;

If ForeignKey_Val   <> "N" Then DO
   start_zeit = time()
  table = ""
  Anzahl_Objecte = 0
  Do awi = 1 To Ausgabe.0
     Select
      when Ausgabe.awi.KENNZ = 'FK'  Then Nop
      Otherwise    Iterate
      End
     Auswahl = "FK"
     Object  = Strip(Ausgabe.awi.DBNAME) || "." || ,
               Strip(Ausgabe.awi.TSNAME)
     Object3 = "*." || Strip(Ausgabe.awi.Creator)

     Call GEN_DDL
   End
  tdiff = time_diff(start_zeit, time() );
 end
AFK     = ForeignKey_Val
AFKT  = TDIFF
AFKOK = "OK"; Info_anzeige = "YES";Call Auswahl_DB;

If Trigger_Val      <> "N" Then DO
   start_zeit = time()
  table = ""
  Anzahl_Objecte = 0
  Do awi = 1 To Ausgabe.0
     Select
      when Ausgabe.awi.KENNZ = 'TG'  Then Nop
      Otherwise    Iterate
      End
     Auswahl = "TG"
     Object  = Strip(Ausgabe.awi.DBNAME) || "." || ,
               Strip(Ausgabe.awi.TSNAME)

     Call GEN_SPROC_DDL
   End
  tdiff = time_diff(start_zeit, time() );
 End
ATG     = Trigger_Val
ATGT  = TDIFF
ATGOK = "OK"; Info_anzeige = "YES";Call Auswahl_DB;

If SProc_Val        <> "N" Then DO
   start_zeit = time()
   Anzahl_Objecte = 0
   table = ""
   Do awi = 1 To Ausgabe.0
      Select
       when Ausgabe.awi.KENNZ = 'RT'  Then Nop
       Otherwise    Iterate
       End
      Auswahl = "RT"
      table    = ""
      Object  = Strip(Ausgabe.awi.DBNAME)
      Table   = Strip(Ausgabe.awi.Creator) || "." || ,
                Strip(Ausgabe.awi.NAME)

      object3 = ""

      If GrantRT_Val <> "N" Then   Grant = "YES"
      Else                         Grant = "NO"

      Call GEN_SPROC_DDL
      Grant = "NO"
    End
  tdiff = time_diff(start_zeit, time() );
  End
ASP     = SProc_Val
ASPT  = TDIFF
ASPOK = "OK"; Info_anzeige = "YES";Call Auswahl_DB;

If Synonym_Val      <> "N" Then DO
   start_zeit = time()
   Anzahl_Objecte = 0
   table = ""
   Do awi = 1 To Ausgabe.0
      Select
       when Ausgabe.awi.KENNZ = 'SY'  Then Nop
       Otherwise    Iterate
       End
      Auswahl = "SY"
      Object  = Strip(Ausgabe.awi.DBNAME) || "." || ,
                Strip(Ausgabe.awi.TSNAME)

      Call GEN_DDL
    End
  tdiff = time_diff(start_zeit, time() );
 End
ASY     = Synonym_Val
ASYT  = TDIFF
ASYOK = "OK"; Info_anzeige = "YES";Call Auswahl_DB;

If Table_Val        <> "N" Then Do
   start_zeit = time()
  Anzahl_Objecte = 0
  table = ""
  Do awi = 1 To Ausgabe.0
     Select
      when Ausgabe.awi.KENNZ = 'ALTER'  Then Nop
      Otherwise    Iterate
      End
     Auswahl = "TBALTER"
     Object  = Strip(Ausgabe.awi.Creator) || "." || ,
               Strip(Ausgabe.awi.NAME)

     Call GEN_DDL
   End
  tdiff = time_diff(start_zeit, time() );
 End

If Permission_Val <> "N" Then DO
   start_zeit = time()
   Anzahl_Objecte = 0
   Table   = ""
  Do awi = 1 To Ausgabe.0
     Select
      when Ausgabe.awi.KENNZ = 'PERM'  Then Nop
      Otherwise    Iterate
      End
     Auswahl = "PERM"
     Table   = ""
     Object  = Strip(Ausgabe.awi.DBNAME) || "." || ,
               Strip(Ausgabe.awi.TSNAME)

     Call GEN_DDL
   End
  tdiff = time_diff(start_zeit, time() );
 End
APERM   = Permission_Val
APERMT  = TDIFF
APERMOK = "OK"; Info_anzeige = "YES";Call Auswahl_DB;

Return

GEN_HDDL_TS_OBJ:

   Grant = ""
   Anzahl_Objecte = Anzahl_Objecte + 1
   if Anzahl_Objecte > Max_Objecte Then Do
      call Anzeigen_daten
      Anzahl_Objecte = 0
    End


If Table_Val       <> "N" Then Do
   if auswahl = "TB" Then table    = object
   If GrantTable_Val  <> "N" Then Grant   = "YES"
   auswahl = "TB"
   Call GEN_DDL
   IF LENGTH(DDLTEXT) = 0 THEN RETURN ''
   Grant    = ""
   object   = ""
 End

If Comment_Val     <> "N" Then DO
   auswahl  = "TC"
   Call GEN_DDL
 End

If Index_Val       <> "N" Then DO
   auswahl  = "IX"
   Call GEN_DDL
 End


Return

GEN_HDDL_TB_OBJ:

   Grant = ""
   Anzahl_Objecte = Anzahl_Objecte + 1
   if Anzahl_Objecte > Max_Objecte Then Do
      call Anzeigen_daten
      Anzahl_Objecte = 0
    End


If Table_Val       <> "N" Then Do
   If GrantTable_Val  <> "N" Then Grant   = "YES"
   auswahl = "TB"
   Call GEN_DDL
   IF LENGTH(DDLTEXT) = 0 THEN RETURN ''
   Grant    = ""
   object   = ""
 End


Return

GEN_SPROC_DDL:

   DDLX     = DDLTEXT
   DDLTEXT  = ""
   CALL Lesen_daten_DDL
   If Length(Strip(DDLTEXT)) > 0 Then do
      DDLTEXT  = "--SQLTERM=# -NL" || DDLTEXT
      DDLTEXT  = DDLTEXT "-NL"
      DDLTEXT  = DDLTEXT || "-NL" || "--SQLTERM=; -NL"
    End
   DDLTEXT  = DDLX || DDLTEXT
   DDLX     = ""

Return


GEN_HDDL:

   Grant = ""
   Anzahl_Objecte = Anzahl_Objecte + 1
   if Anzahl_Objecte > Max_Objecte Then Do
      call Anzeigen_daten
      Anzahl_Objecte = 0
      /*
      auswahl = "RECONNECT"
      call Lesen_daten_DDL
      */
    End
   if auswahl = "TB" Then table    = object
   If GrantTable_Val <>  "N" Then Grant   = "YES"
   auswahl = "TB"
   Call GEN_DDL
   IF LENGTH(DDLTEXT) = 0 THEN RETURN ''
   Grant    = ""
   object   = ""

   auswahl  = "TC"
   Call GEN_DDL

   auswahl  = "IX"
   Call GEN_DDL

   If Ausgabe.awi.KENNZ = 'REL' Then do
      /* BEI XML ODER BLOB TABLE KEINE WEITERE VERARBEITUNG */
      Return
    End

   If GrantView_Val  <>  "N" Then Grant   = "YES"
   auswahl  = "VW"
   Call GEN_DDL
   Grant    = ""
   DDLTEXT  = DDLTEXT "-NL"
   Grant   = "NO"

   auswahl  = "TG"
   Call GEN_SPROC_DDL

   If GrantSproc_Val  <>  "N" Then Grant   = "YES"
   auswahl  = "RT"
   object3  = table
   table    = ""
   object   = ""
   Call GEN_SPROC_DDL
   table    = object3
   object   = object3
   object3  = ""
   Grant   = "NO"

   auswahl  = "AL"
   Call GEN_DDL

   auswahl  = "SY"
   Call GEN_DDL

Return


LESEN_DB:

 WHERELIST = ""
 CALL MAKE_WHERELIST "VW.DBNAME", DB2_CREATOR1
 CALL MAKE_WHERELIST "VW.TSNAME", DB2_NAME1
 CALL MAKE_WHERELIST "", "VW.TYPE  IN('V' )"
 WHERELISTV = WHERELIST

 WHERELIST = ""
 CALL MAKE_WHERELIST "MQ.DBNAME", DB2_CREATOR1
 CALL MAKE_WHERELIST "MQ.TSNAME", DB2_NAME1
 CALL MAKE_WHERELIST "", "MQ.TYPE  IN('M' )"
 WHERELISTM = WHERELIST

 WHERELIST = ""
 CALL MAKE_WHERELIST "DB.NAME", DB2_CREATOR1
 WHERELISTDB = WHERELIST

 WHERELIST = ""
 CALL MAKE_WHERELIST "TS.DBNAME", DB2_CREATOR1
 CALL MAKE_WHERELIST "TS.NAME", DB2_NAME1
 if auswahl = "TS" THEN DO
    TSTYPE = "' ', 'G', 'L', 'O', 'P', 'R'"
  End
 Else do
    TSTYPE = "' ', 'G', 'L', 'R'"
  End
 CALL MAKE_WHERELIST "", "TS.TYPE  IN("TSTYPE")"
 WHERELIST2 = WHERELIST

 WHERELIST = ""
 CALL MAKE_WHERELIST "TB.DBNAME", DB2_CREATOR1
 CALL MAKE_WHERELIST "TB.TSNAME", DB2_NAME1
 if auswahl = "TS" THEN DO
    TTYPE = "'T', 'C', 'G', 'H', 'P', 'R', 'X', 'M' "
  End
 Else do
    TTYPE = "'T', 'C', 'G', 'H', 'R', 'M' "
  End
 CALL MAKE_WHERELIST "", "TB.TYPE  IN("TTYPE")"
 WHERELISTTS = WHERELIST

 WHERELIST = ""
 CALL MAKE_WHERELIST "TB.DBNAME", DB2_CREATOR1
 CALL MAKE_WHERELIST "TB.TSNAME", DB2_NAME1
 if auswahl = "TS" THEN DO
    TTYPE = "'T', 'C', 'G', 'H', 'P', 'R', 'X' "
  End
 Else do
    TTYPE = "'T', 'C', 'G', 'H', 'R'      "
  End
 CALL MAKE_WHERELIST "", "TB.TYPE  IN("TTYPE")"
 WHERELIST1 = WHERELIST

 WHERELIST = ""
 CALL MAKE_WHERELIST "TB.DBNAME", DB2_CREATOR1
 CALL MAKE_WHERELIST "TB.TSNAME", DB2_NAME1
 CALL MAKE_WHERELIST "", "TB.TYPE  IN('T'    )"
 CALL MAKE_WHERELIST "", "TB.VERSIONING_TABLE <> ''  "
 WHERELISTAV  = WHERELIST

 WHERELIST = ""
 CALL MAKE_WHERELIST "TB.DBNAME", DB2_CREATOR1
 CALL MAKE_WHERELIST "TB.TSNAME", DB2_NAME1
 CALL MAKE_WHERELIST "", "TB.TYPE  IN('T'    )"
 CALL MAKE_WHERELIST "", "TB.ARCHIVING_TABLE  <> ''  "
 WHERELISTAA  = WHERELIST

 WHERELIST = ""
 CALL MAKE_WHERELIST "TB.DBNAME", DB2_CREATOR1
 CALL MAKE_WHERELIST "TB.TSNAME", DB2_NAME1
 CALL MAKE_WHERELIST "", "TB.TYPE  IN('T'    )"
 CALL MAKE_WHERELIST "", "TB.ARCHIVING_TABLE  <> ''  "
 WHERELISTAA  = WHERELIST

 WHERELIST = ""
 CALL MAKE_WHERELIST "TB.DBNAME", DB2_CREATOR1
 CALL MAKE_WHERELIST "TB.TSNAME", DB2_NAME1
 if auswahl = "TS" THEN DO
    TTYPE = "'T', 'C', 'G', 'H', 'P', 'R', 'X'"
  End
 Else do
    TTYPE = "'T', 'C', 'G', 'H', 'R', 'X'"
  End
 CALL MAKE_WHERELIST "", "TB.TYPE  IN("TTYPE")"
 CALL MAKE_WHERELIST "", " ( LENGTH(TRIM(REMARKS))   > 0    " ,
                     "OR     LENGTH(TRIM(LABEL))     > 0             ",
                     "OR  EXISTS (SELECT 1                           ",
                     "            FROM "SYSIBMS".SYSCOLUMNS CO       ",
                     "            WHERE TB.CREATOR = CO.TBCREATOR    ",
                     "              AND TB.NAME    = CO.TBNAME       ",
                     "              AND (   LENGTH(TRIM(REMARKS)) > 0",
                     "                   OR LENGTH(TRIM(LABEL)) > 0  ",
                     "                  )                            ",
                     "           )                                   ",
                     "     )                                         ",
                     ""

 WHERELISTTC = WHERELIST

 EINGABE.0  = 1
 EINGABE.1  = "SELECT DISTINCT KENNZ ",
              "     , DBNAME   ",
              "     , TSNAME   ",
              "     , CREATOR  ",
              "     , NAME     ",
              "     , CREATEDTS",
              "FROM TABLE (                        ",
              "SELECT 'DB'              AS KENNZ   ",
              "     , STRIP(DB.NAME  )  AS DBNAME  ",
              "     , STRIP(DB.CREATOR) AS TSNAME  ",
              "     , STRIP(DB.NAME  )  AS CREATOR ",
              "     , STRIP(DB.CREATOR) AS NAME    ",
              "     , DB.CREATEDTS      AS CREATEDTS" ,
              "FROM "SYSIBMS".SYSDATABASE   DB     ",
              WHERELISTDB ,
              "UNION ALL                           ",
              "SELECT 'TS'              AS KENNZ   ",
              "     , STRIP(TB.DBNAME)  AS DBNAME  ",
              "     , STRIP(TB.TSNAME)  AS TSNAME  ",
              "     , STRIP(TB.CREATOR) AS CREATOR ",
              "     , STRIP(TB.NAME   ) AS NAME    ",
              "     , TB.CREATEDTS      AS CREATEDTS" ,
              "FROM "SYSIBMS".SYSTABLES     TB",
              WHERELISTTS ,
              "UNION ALL                           ",
              "SELECT 'TB'              AS KENNZ   ",
              "     , STRIP(TB.DBNAME)  AS DBNAME  ",
              "     , STRIP(TB.TSNAME)  AS TSNAME  ",
              "     , STRIP(TB.CREATOR) AS CREATOR ",
              "     , STRIP(TB.NAME   ) AS NAME    ",
              "     , TB.CREATEDTS      AS CREATEDTS" ,
              "FROM "SYSIBMS".SYSTABLES     TB",
              WHERELIST1 ,
              "UNION ALL                           ",
              "SELECT 'IX'              AS KENNZ   ",
              "     , STRIP(IX.TBCREATOR)  AS DBNAME  ",
              "     , STRIP(IX.TBNAME)  AS TSNAME  ",
              "     , STRIP(IX.CREATOR) AS CREATOR ",
              "     , STRIP(IX.NAME   ) AS NAME    ",
              "     , IX.CREATEDTS      AS CREATEDTS" ,
              "FROM "SYSIBMS".SYSINDEXES    IX",
              "INNER JOIN "SYSIBMS".SYSTABLES  TB  ",
              "ON  IX.TBCREATOR = TB.CREATOR       ",
              "AND IX.TBNAME    = TB.NAME          ",
              WHERELIST1 ,
              "UNION ALL                           ",
              "SELECT 'TC'              AS KENNZ   ",
              "     , STRIP(TB.DBNAME)  AS DBNAME  ",
              "     , STRIP(TB.TSNAME)  AS TSNAME  ",
              "     , STRIP(TB.CREATOR) AS CREATOR ",
              "     , STRIP(TB.NAME   ) AS NAME    ",
              "     , TB.CREATEDTS      AS CREATEDTS" ,
              "FROM "SYSIBMS".SYSTABLES     TB",
              WHERELISTTC ,
              "UNION ALL                           ",
              "SELECT 'REL'             AS KENNZ   ",
              "     , STRIP(RT.DBNAME)  AS DBNAME  ",
              "     , STRIP(RT.TSNAME)  AS TSNAME  ",
              "     , STRIP(AR.AUXTBOWNER) AS CREATOR ",
              "     , STRIP(AR.AUXTBNAME ) AS NAME    ",
              "     , TB.CREATEDTS        AS CREATEDTS" ,
              "FROM "SYSIBMS".SYSTABLES     TB     ",
              "INNER JOIN "SYSIBMS".SYSAUXRELS  AR ",
              "ON    TB.CREATOR  = AR.TBOWNER      ",
              "AND   TB.NAME     = AR.TBNAME       ",
              "INNER JOIN "SYSIBMS".SYSTABLES   RT ",
              "ON    AR.AUXTBOWNER  = RT.CREATOR      ",
              "AND   AR.AUXTBNAME   = RT.NAME         ",
              WHERELIST1 ,
              "UNION ALL                           ",
              "SELECT 'SY'              AS KENNZ   ",
              "     , STRIP(SY.CREATOR) AS DBNAME  ",
              "     , STRIP(SY.NAME)    AS TSNAME  ",
              "     , STRIP(TB.CREATOR) AS CREATOR ",
              "     , STRIP(TB.NAME)    AS NAME    ",
              "     , SY.CREATEDTS      AS CREATEDTS" ,
              "FROM "SYSIBMS".SYSSYNONYMS SY       ",
              "INNER JOIN "SYSIBMS".SYSTABLES   TB ",
              "ON    TB.CREATOR  = SY.TBCREATOR    ",
              "AND   TB.NAME     = SY.TBNAME       ",
              WHERELIST1 ,
              "UNION ALL                           ",
              "SELECT DISTINCT 'TG'     AS KENNZ   ",
              "     , STRIP(TG.SCHEMA)  AS DBNAME  ",
              "     , STRIP(TG.NAME)    AS TSNAME  ",
              "     , STRIP(TB.CREATOR) AS CREATOR ",
              "     , STRIP(TB.NAME)    AS NAME    ",
              "     , TG.CREATEDTS      AS CREATEDTS" ,
              "FROM "SYSIBMS".SYSTRIGGERS TG       ",
              "INNER JOIN "SYSIBMS".SYSTABLES   TB ",
              "ON    TB.CREATOR  = TG.TBOWNER      ",
              "AND   TB.NAME     = TG.TBNAME       ",
              WHERELIST1 ,
              "UNION ALL                           ",
              "SELECT DISTINCT 'RT'     AS KENNZ   ",
              "     , STRIP(RT.SPECIFICNAME) AS DBNAME ",
              "     , ''                AS TSNAME  ",
              "     , STRIP(RT.SCHEMA)  AS CREATOR ",
              "     , STRIP(RT.NAME)    AS NAME    ",
              "     , RT.CREATEDTS      AS CREATEDTS" ,
              "FROM "SYSIBMS".SYSTABLES  TB        ",
              "INNER JOIN "SYSIBMS".SYSPACKDEP PD  ",
              "ON    TB.CREATOR  = PD.BQUALIFIER   ",
              "AND   TB.NAME     = PD.BNAME        ",
              "AND   PD.BTYPE IN ('A', 'S', 'V', 'T', 'I', 'P', 'R')",
              "INNER JOIN "SYSIBMS".SYSROUTINES RT  " ,
              "ON    PD.DCOLLID    = RT.SCHEMA     ",
              "AND   PD.DNAME      = RT.NAME       ",
              WHERELIST1 ,
              "UNION ALL                           ",
              "SELECT DISTINCT 'RT'     AS KENNZ   ",
              "     , STRIP(RT.SPECIFICNAME) AS DBNAME ",
              "     , ''                AS TSNAME  ",
              "     , STRIP(RT.SCHEMA)  AS CREATOR ",
              "     , STRIP(RT.NAME)    AS NAME    ",
              "     , RT.CREATEDTS      AS CREATEDTS" ,
              "FROM "SYSIBMS".SYSTABLES  TB        ",
              "INNER JOIN "SYSIBMS".SYSPACKDEP PD  ",
              "ON    TB.DBNAME   = PD.BQUALIFIER   ",
              "AND   TB.TSNAME   = PD.BNAME        ",
              "AND   PD.BTYPE IN ('A', 'S', 'V', 'T', 'I', 'P', 'R')",
              "INNER JOIN "SYSIBMS".SYSROUTINES RT  " ,
              "ON    PD.DCOLLID    = RT.SCHEMA     ",
              "AND   PD.DNAME      = RT.NAME       ",
              WHERELIST1 ,
              "UNION ALL                           ",
              "SELECT DISTINCT 'VW'      AS KENNZ   ",
              "     , STRIP(VW.CREATOR)  AS DBNAME  ",
              "     , STRIP(VW.NAME)     AS TSNAME  ",
              "     , ''                 AS CREATOR ",
              "     , ''                 AS NAME    ",
              "     , VW.CREATEDTS       AS CREATEDTS" ,
              "FROM "SYSIBMS".SYSTABLES  VW        ",
              WHERELISTV ,
              "UNION ALL                           ",
              "SELECT 'MQT'              AS KENNZ   ",
              "     , STRIP(MQ.DBNAME)   AS DBNAME  ",
              "     , STRIP(MQ.TSNAME)   AS TSNAME  ",
              "     , STRIP(MQ.CREATOR)  AS CREATOR ",
              "     , STRIP(MQ.NAME)     AS NAME    ",
              "     , MQ.CREATEDTS       AS CREATEDTS" ,
              "FROM "SYSIBMS".SYSTABLES  MQ        ",
              WHERELISTM ,
              "UNION ALL                             ",
              "SELECT DISTINCT 'FK'       AS KENNZ   ",
              "      , FK.CREATOR         AS DBNAME  ",
              "      , FK.TBNAME          AS TSNAME  ",
              "      , FK.RELNAME         AS CREATOR ",
              "      , ''                 AS NAME    ",
              "      , FK.TIMESTAMP       AS CREATEDTS" ,
              "FROM "SYSIBMS".SYSRELS      FK        ",
              "INNER JOIN "SYSIBMS".SYSTABLES TB     ",
              "ON    FK.CREATOR    = TB.CREATOR      ",
              "AND   FK.TBNAME     = TB.NAME         ",
              "INNER JOIN "SYSIBMS".SYSTABLESPACE TS ",
              "ON    TB.DBNAME     = TS.DBNAME       ",
              "AND   TB.TSNAME     = TS.NAME         ",
              WHERELIST1 ,
              "UNION ALL                             ",
              "SELECT DISTINCT 'PK'       AS KENNZ   ",
              "      , PK.TBCREATOR       AS DBNAME  ",
              "      , PK.TBNAME          AS TSNAME  ",
              "      , ''                 AS CREATOR ",
              "      , ''                 AS NAME    ",
              "      , PK.CREATEDTS       AS CREATEDTS" ,
              "FROM "SYSIBMS".SYSTABCONST  PK        ",
              "INNER JOIN "SYSIBMS".SYSTABLES TB     ",
              "ON    PK.TBCREATOR  = TB.CREATOR      ",
              "AND   PK.TBNAME     = TB.NAME         ",
              "INNER JOIN "SYSIBMS".SYSTABLESPACE TS ",
              "ON    TB.DBNAME     = TS.DBNAME       ",
              "AND   TB.TSNAME     = TS.NAME         ",
              WHERELIST1 ,
              "UNION ALL                             ",
              "SELECT DISTINCT 'PERM'     AS KENNZ   ",
              "      , PERM.SCHEMA        AS DBNAME  ",
              "      , PERM.NAME          AS TSNAME  ",
              "      , ''                 AS CREATOR ",
              "      , ''                 AS NAME    ",
              "      , PERM.CREATEDTS     AS CREATEDTS" ,
              "FROM "SYSIBMS".SYSCONTROLS PERM       ",
              "INNER JOIN "SYSIBMS".SYSTABLES TB     ",
              "ON    PERM.TBSCHEMA = TB.CREATOR      ",
              "AND   PERM.TBNAME   = TB.NAME         ",
              "INNER JOIN "SYSIBMS".SYSTABLESPACE TS ",
              "ON    TB.DBNAME     = TS.DBNAME       ",
              "AND   TB.TSNAME     = TS.NAME         ",
              "AND   PERM.IMPLICIT = 'N'             ",
              WHERELIST1 ,
              "UNION ALL                             ",
              "SELECT 'ALTER'           AS KENNZ   ",
              "     , STRIP(TB.DBNAME)  AS DBNAME  ",
              "     , STRIP(TB.TSNAME)  AS TSNAME  ",
              "     , STRIP(TB.CREATOR) AS CREATOR ",
              "     , STRIP(TB.NAME   ) AS NAME    ",
              "     , TB.CREATEDTS      AS CREATEDTS" ,
              "FROM "SYSIBMS".SYSTABLES     TB  ",
              WHERELISTAV  ,
              "UNION ALL                             ",
              "SELECT 'ALTER'           AS KENNZ   ",
              "     , STRIP(TB.DBNAME)  AS DBNAME  ",
              "     , STRIP(TB.TSNAME)  AS TSNAME  ",
              "     , STRIP(TB.CREATOR) AS CREATOR ",
              "     , STRIP(TB.NAME   ) AS NAME    ",
              "     , TB.CREATEDTS      AS CREATEDTS" ,
              "FROM "SYSIBMS".SYSTABLES     TB  ",
              WHERELISTAA  ,
              " ) T1  "                            ,
              " ORDER BY KENNZ, CREATEDTS "       ,
              " "

 CALL EXECUTE_SQL

Return

LESEN_SC:

 WHERELIST = ""
 CALL MAKE_WHERELIST "TB.CREATOR", DB2_CREATOR1
 CALL MAKE_WHERELIST "TB.NAME", DB2_NAME1
 CALL MAKE_WHERELIST "", "TB.TYPE  IN('T', 'C', 'G', 'H', 'R', 'M')"
 WHERELISTTS = WHERELIST

 WHERELIST = ""
 CALL MAKE_WHERELIST "TB.CREATOR", DB2_CREATOR1
 CALL MAKE_WHERELIST "TB.NAME", DB2_NAME1
 CALL MAKE_WHERELIST "", "TB.TYPE  IN('T', 'C', 'G', 'H', 'R')"
 WHERELIST1 = WHERELIST

 WHERELIST = ""
 CALL MAKE_WHERELIST "VW.CREATOR", DB2_CREATOR1
 CALL MAKE_WHERELIST "VW.NAME", DB2_NAME1
 CALL MAKE_WHERELIST "", "VW.TYPE  IN('V') "
 WHERELISTV = WHERELIST

 WHERELIST = ""
 CALL MAKE_WHERELIST "MQ.CREATOR", DB2_CREATOR1
 CALL MAKE_WHERELIST "MQ.NAME", DB2_NAME1
 CALL MAKE_WHERELIST "", "MQ.TYPE  IN('M' )"
 WHERELISTM = WHERELIST

 WHERELIST = ""
 CALL MAKE_WHERELIST "TB.CREATOR", DB2_CREATOR1
 CALL MAKE_WHERELIST "TB.NAME", DB2_NAME1
 CALL MAKE_WHERELIST "", "TB.TYPE  IN('A')"
 WHERELISTA = WHERELIST

 WHERELIST = ""
 CALL MAKE_WHERELIST "TB.CREATOR", DB2_CREATOR1
 CALL MAKE_WHERELIST "TB.NAME" , DB2_NAME1
 CALL MAKE_WHERELIST "", "TB.VERSIONING_TABLE <> '' "
 CALL MAKE_WHERELIST "TB.TYPE", 'T'
 WHERELISTAV  = WHERELIST

 WHERELIST = ""
 CALL MAKE_WHERELIST "TB.CREATOR", DB2_CREATOR1
 CALL MAKE_WHERELIST "TB.NAME" , DB2_NAME1
 CALL MAKE_WHERELIST "", "TB.ARCHIVING_TABLE  <> '' "
 CALL MAKE_WHERELIST "TB.TYPE", 'T'
 WHERELISTAA  = WHERELIST

 WHERELIST = ""
 CALL MAKE_WHERELIST "TB.CREATOR", DB2_CREATOR1
 CALL MAKE_WHERELIST "TB.NAME", DB2_NAME1
 if auswahl = "TS" THEN DO
    TTYPE = "'T', 'C', 'G', 'H', 'P', 'R', 'X'"
  End
 Else do
    TTYPE = "'T', 'C', 'G', 'H', 'R', 'X'"
  End
 CALL MAKE_WHERELIST "", "TB.TYPE  IN("TTYPE")"
 CALL MAKE_WHERELIST "", " ( LENGTH(TRIM(REMARKS))   > 0    " ,
                     "OR     LENGTH(TRIM(LABEL))     > 0             ",
                     "OR  EXISTS (SELECT 1 FROM "SYSIBMS".SYSCOLUMNS CO ",
                     "            WHERE TB.CREATOR = CO.TBCREATOR    ",
                     "              AND TB.NAME    = CO.TBNAME       ",
                     "              AND (   LENGTH(TRIM(REMARKS)) > 0",
                     "                   OR LENGTH(TRIM(LABEL)) > 0  ",
                     "                  )                            ",
                     "           )                                   ",
                     "     )                                         ",
                     ""
 WHERELISTTC = WHERELIST

 WHERELIST   = ""
 TTYPE = "'T', 'C', 'G', 'H', 'P', 'R', 'X', 'M'"
 CALL MAKE_WHERELIST "TB.CREATOR", DB2_CREATOR1
 CALL MAKE_WHERELIST "TB.NAME", DB2_NAME1
 CALL MAKE_WHERELIST "", "TB.DBNAME = DB.NAME "
 CALL MAKE_WHERELIST "", "TB.DBNAME NOT LIKE 'DSNDB%' "
 CALL MAKE_WHERELIST "", "TB.TYPE  IN("TTYPE")"
 Wherelistxx = Wherelist
 WHERELIST   = ""
 WHERELIST   = "Where EXISTS ( SELECT 1 FROM "SYSIBMS".SYSTABLES TB " ,
               WHERELISTXX  ,
               " ) "        ,
               ""

 WHERELISTDB = WHERELIST


 EINGABE.0  = 1
 EINGABE.1  = "SELECT DISTINCT KENNZ ",
              "     , DBNAME   ",
              "     , TSNAME   ",
              "     , CREATOR  ",
              "     , NAME     ",
              "     , CREATEDTS",
              "FROM TABLE (                                          ",
              "SELECT 'DB'              AS KENNZ   ",
              "     , STRIP(DB.NAME  )  AS DBNAME  ",
              "     , STRIP(DB.CREATOR) AS TSNAME  ",
              "     , STRIP(DB.NAME  )  AS CREATOR ",
              "     , STRIP(DB.CREATOR) AS NAME    ",
              "     , DB.CREATEDTS      AS CREATEDTS" ,
              "FROM "SYSIBMS".SYSDATABASE   DB     ",
              WHERELISTDB ,
              "UNION ALL                           ",
              "SELECT DISTINCT 'TS'     AS KENNZ   ",
              "     , STRIP(TB.DBNAME)  AS DBNAME  ",
              "     , STRIP(TB.TSNAME)  AS TSNAME  ",
              "     , STRIP(TB.CREATOR) AS CREATOR ",
              "     , STRIP(TB.NAME   ) AS NAME    ",
              "     , TB.CREATEDTS      AS CREATEDTS" ,
              "FROM "SYSIBMS".SYSTABLES     TB",
              WHERELISTTS ,
              "UNION ALL                           ",
              "SELECT DISTINCT 'TB'     AS KENNZ   ",
              "     , STRIP(TB.DBNAME)  AS DBNAME  ",
              "     , STRIP(TB.TSNAME)  AS TSNAME  ",
              "     , STRIP(TB.CREATOR) AS CREATOR ",
              "     , STRIP(TB.NAME   ) AS NAME    ",
              "     , TB.CREATEDTS      AS CREATEDTS" ,
              "FROM "SYSIBMS".SYSTABLES     TB",
              WHERELIST1 ,
              "UNION ALL                           ",
              "SELECT DISTINCT 'TC'     AS KENNZ   ",
              "     , STRIP(TB.DBNAME)  AS DBNAME  ",
              "     , STRIP(TB.TSNAME)  AS TSNAME  ",
              "     , STRIP(TB.CREATOR) AS CREATOR ",
              "     , STRIP(TB.NAME   ) AS NAME    ",
              "     , TB.CREATEDTS      AS CREATEDTS" ,
              "FROM "SYSIBMS".SYSTABLES     TB",
              WHERELISTTC ,
              "UNION ALL                           ",
              "SELECT DISTINCT 'IX'     AS KENNZ   ",
              "     , STRIP(IX.DBNAME)  AS DBNAME  ",
              "     , STRIP(IX.INDEXSPACE) AS TSNAME  ",
              "     , STRIP(IX.CREATOR) AS CREATOR ",
              "     , STRIP(IX.NAME   ) AS NAME    ",
              "     , IX.CREATEDTS      AS CREATEDTS" ,
              "FROM "SYSIBMS".SYSINDEXES    IX",
              "INNER JOIN "SYSIBMS".SYSTABLES  TB  ",
              "ON  IX.TBCREATOR = TB.CREATOR       ",
              "AND IX.TBNAME    = TB.NAME          ",
              WHERELIST1 ,
              "UNION ALL                           ",
              "SELECT DISTINCT 'REL'    AS KENNZ   ",
              "     , STRIP(RT.DBNAME)  AS DBNAME  ",
              "     , STRIP(RT.TSNAME)  AS TSNAME  ",
              "     , STRIP(AR.AUXTBOWNER) AS CREATOR ",
              "     , STRIP(AR.AUXTBNAME ) AS NAME    ",
              "     , TB.CREATEDTS         AS CREATEDTS" ,
              "FROM "SYSIBMS".SYSTABLES     TB     ",
              "INNER JOIN "SYSIBMS".SYSAUXRELS  AR ",
              "ON    TB.CREATOR  = AR.TBOWNER      ",
              "AND   TB.NAME     = AR.TBNAME       ",
              "INNER JOIN "SYSIBMS".SYSTABLES   RT ",
              "ON    AR.AUXTBOWNER  = RT.CREATOR      ",
              "AND   AR.AUXTBNAME   = RT.NAME         ",
              WHERELIST1 ,
              "UNION ALL                           ",
              "SELECT DISTINCT 'SY'     AS KENNZ   ",
              "     , STRIP(SY.CREATOR) AS DBNAME  ",
              "     , STRIP(SY.NAME)    AS TSNAME  ",
              "     , STRIP(TB.CREATOR) AS CREATOR ",
              "     , STRIP(TB.NAME)    AS NAME    ",
              "     , SY.CREATEDTS      AS CREATEDTS" ,
              "FROM "SYSIBMS".SYSSYNONYMS SY       ",
              "INNER JOIN "SYSIBMS".SYSTABLES   TB ",
              "ON    TB.CREATOR  = SY.TBCREATOR    ",
              "AND   TB.NAME     = SY.TBNAME       ",
              WHERELIST1 ,
              "UNION ALL                           ",
              "SELECT DISTINCT 'AL'     AS KENNZ   ",
              "     , STRIP(TB.CREATOR) AS DBNAME  ",
              "     , STRIP(TB.NAME)    AS TSNAME  ",
              "     , STRIP(TB.TBCREATOR) AS CREATOR ",
              "     , STRIP(TB.TBNAME)    AS NAME    ",
              "     , TB.CREATEDTS      AS CREATEDTS" ,
              "FROM "SYSIBMS".SYSTABLES   TB       ",
              WHERELISTA ,
              "UNION ALL                           ",
              "SELECT DISTINCT 'TG'     AS KENNZ   ",
              "     , STRIP(TG.SCHEMA)  AS DBNAME  ",
              "     , STRIP(TG.NAME)    AS TSNAME  ",
              "     , STRIP(TB.CREATOR) AS CREATOR ",
              "     , STRIP(TB.NAME)    AS NAME    ",
              "     , TG.CREATEDTS      AS CREATEDTS" ,
              "FROM "SYSIBMS".SYSTRIGGERS TG       ",
              "INNER JOIN "SYSIBMS".SYSTABLES   TB ",
              "ON    TB.CREATOR  = TG.TBOWNER      ",
              "AND   TB.NAME     = TG.TBNAME       ",
              WHERELIST1 ,
              "UNION ALL                           ",
              "SELECT DISTINCT 'VW'      AS KENNZ   ",
              "     , STRIP(VW.CREATOR)  AS DBNAME  ",
              "     , STRIP(VW.NAME)     AS TSNAME  ",
              "     , ''                 AS CREATOR ",
              "     , ''                 AS NAME    ",
              "     , VW.CREATEDTS       AS CREATEDTS" ,
              "FROM "SYSIBMS".SYSTABLES  VW       ",
              WHERELISTV ,
              "UNION ALL                           ",
              "SELECT 'MQT'              AS KENNZ   ",
              "     , STRIP(MQ.DBNAME)   AS DBNAME  ",
              "     , STRIP(MQ.TSNAME)   AS TSNAME  ",
              "     , STRIP(MQ.CREATOR)  AS CREATOR ",
              "     , STRIP(MQ.NAME)     AS NAME    ",
              "     , MQ.CREATEDTS       AS CREATEDTS" ,
              "FROM "SYSIBMS".SYSTABLES  MQ        ",
              WHERELISTM ,
              "UNION ALL                           ",
              "SELECT DISTINCT 'RT'      AS KENNZ   ",
              "     , SPECIFICNAME       AS DBNAME  ",
              "     , ''                 AS TSNAME  ",
              "     , SCHEMA             AS CREATOR ",
              "     , NAME               AS NAME    ",
              "     , RT.CREATEDTS       AS CREATEDTS" ,
              "FROM "SYSIBMS".SYSROUTINES RT       ",
              "WHERE SCHEMA = '"DB2_CREATOR1"'     ",
              "UNION ALL                           ",
              "SELECT DISTINCT 'SE'      AS KENNZ   ",
              "     , SCHEMA             AS DBNAME  ",
              "     , NAME               AS TSNAME  ",
              "     , SCHEMA             AS CREATOR ",
              "     , NAME               AS NAME    ",
              "     , SE.CREATEDTS       AS CREATEDTS" ,
              "FROM "SYSIBMS".SYSSEQUENCES SE      ",
              "WHERE SCHEMA  = '"DB2_CREATOR1"'    ",
              "AND   SEQTYPE IN ('S' )             ",
              "UNION ALL                           ",
              "SELECT DISTINCT 'SE'      AS KENNZ   ",
              "     , SCHEMA             AS DBNAME  ",
              "     , NAME               AS TSNAME  ",
              "     , SCHEMA             AS CREATOR ",
              "     , NAME               AS NAME    ",
              "     , SE.CREATEDTS       AS CREATEDTS" ,
              "FROM "SYSIBMS".SYSSEQUENCES SE      ",
              "WHERE SEQSCHEMA  = '"DB2_CREATOR1"'  ",
              "AND   SEQTYPE IN ('A')               ",
              "UNION ALL                            ",
              "SELECT DISTINCT 'FK'      AS KENNZ   ",
              "     , CREATOR            AS DBNAME  ",
              "     , TBNAME             AS TSNAME  ",
              "     , RELNAME            AS CREATOR ",
              "     , ''                 AS NAME    ",
              "     , FK.TIMESTAMP      AS CREATEDTS" ,
              "FROM "SYSIBMS".SYSRELS      FK      ",
              "WHERE CREATOR = '"DB2_CREATOR1"'    ",
              "UNION ALL                           ",
              "SELECT DISTINCT 'PK'      AS KENNZ  ",
              "     , TBCREATOR          AS DBNAME  ",
              "     , TBNAME             AS TSNAME  ",
              "     , ''                 AS CREATOR ",
              "     , ''                 AS NAME    ",
              "     , PK.CREATEDTS      AS CREATEDTS" ,
              "FROM "SYSIBMS".SYSTABCONST  PK       ",
              "WHERE TBCREATOR = '"DB2_CREATOR1"'   ",
              "UNION ALL                           ",
              "SELECT DISTINCT 'PERM'    AS KENNZ ",
              "     , SCHEMA             AS DBNAME  ",
              "     , NAME               AS TSNAME  ",
              "     , ''                 AS CREATOR ",
              "     , ''                 AS NAME    ",
              "     , PERM.CREATEDTS     AS CREATEDTS" ,
              "FROM "SYSIBMS".SYSCONTROLS  PERM     ",
              "WHERE TBSCHEMA  = '"DB2_CREATOR1"'   ",
              "AND   PERM.IMPLICIT = 'N'            ",
              "UNION ALL                           ",
              "SELECT DISTINCT 'VAR'     AS KENNZ ",
              "     , SCHEMA             AS DBNAME  ",
              "     , NAME               AS TSNAME  ",
              "     , ''                 AS CREATOR ",
              "     , ''                 AS NAME    ",
              "     , VAR.CREATEDTS      AS CREATEDTS" ,
              "FROM "SYSIBMS".SYSVARIABLES VAR      ",
              "WHERE SCHEMA  = '"DB2_CREATOR1"'   ",
              "UNION ALL                           ",
              "SELECT DISTINCT 'DT'      AS KENNZ ",
              "     , SCHEMA             AS DBNAME  ",
              "     , NAME               AS TSNAME  ",
              "     , ''                 AS CREATOR ",
              "     , ''                 AS NAME    ",
              "     , DT.CREATEDTS      AS CREATEDTS" ,
              "FROM "SYSIBMS".SYSDATATYPES DT       ",
              "WHERE SCHEMA  = '"DB2_CREATOR1"'   ",
              "UNION ALL                           ",
              "SELECT DISTINCT 'ALTER'  AS KENNZ   ",
              "     , STRIP(TB.DBNAME)  AS DBNAME  ",
              "     , STRIP(TB.TSNAME)  AS TSNAME  ",
              "     , STRIP(TB.CREATOR) AS CREATOR ",
              "     , STRIP(TB.NAME   ) AS NAME    ",
              "     , TB.CREATEDTS      AS CREATEDTS" ,
              "FROM "SYSIBMS".SYSTABLES     TB",
              WHERELISTAV ,
              "UNION ALL                           ",
              "SELECT DISTINCT 'ALTER'  AS KENNZ   ",
              "     , STRIP(TB.DBNAME)  AS DBNAME  ",
              "     , STRIP(TB.TSNAME)  AS TSNAME  ",
              "     , STRIP(TB.CREATOR) AS CREATOR ",
              "     , STRIP(TB.NAME   ) AS NAME    ",
              "     , TB.CREATEDTS      AS CREATEDTS" ,
              "FROM "SYSIBMS".SYSTABLES     TB",
              WHERELISTAA ,
              " ) T1  "                            ,
              " ORDER BY KENNZ, CREATEDTS "       ,
              " "

 CALL EXECUTE_SQL

Return

Lesen_daten_DDL:

LOC = LOCATION
FK  = auswahl
OB  = object
TB  = table
ob3 = object3
ob4 = object4
ob5 = object5
TS  = tablespace
DB  = database
GR  = Grant

If ENV = "WIN" Then do
   newq = RXQUEUE('Create',"ZOSC1AC2U")
   oq   = RXQUEUE('Set',newq)
   queue "SYSCATS   = " "'" || SYSCATS   || "'"
   queue "SYSIBMS   = " "'" || SYSIBMS   || "'"
   queue "SYSIBMA   = " "'" || SYSIBMA   || "'"
   queue "SYSPROCA  = " "'" || SYSPROCA  || "'"
   queue "SYSUID    = " "'" || SYSUID    || "'"
   queue "SYSPWD    = " "'" || SYSPWD    || "'"
   loc  = ''
 End


RETWERT = ZOSC1AC2(SSID,   ,           /* SSID       */
                   LOC,    ,           /* LOCATION   */
                   FK,     ,           /* FUKTION    */
                   OB,     ,           /* OBJECT     */
                   TB,     ,           /* TABLE      */
                   OB3,    ,           /* OBJECT     */
                   OB4,    ,           /* OBJECT     */
                   OB5,    ,           /* OBJECT     */
                   TS,     ,           /* TABLESPACE */
                   DB,     ,           /* DATABASE   */
                   GR,     ,           /* Grant      */
                   CT,     ,           /* CALLTYPE   */
                   DB2vers,,           /* DB2 Level  */
                   DB2CatL,,           /* DB2 CATALOG*/
                   WL     ,,           /* SUCHEN WHERE MIT LIKE ? */
                  )

IF RETWERT = 100 THEN EXIT 100   /* MANUELLE UNTERBRECHUNG escape */
DDLTEXT = DDLTEXT RETWERT
If ENV = "WIN" Then do
   call RXQUEUE 'Delete',newq
   call RXQUEUE 'Set',oq
 End

DDLTEXT = STRIP(DDLTEXT, 'T')
IF LENGTH(DDLTEXT) = 0 THEN RETURN
return DDLTEXT

Lesen_daten:

LOC  = LOCATION
FK   = AUSWKZ
OB   = object
OB2  = Object2
OB3  = Object3
OB4  = Object4
OB5  = Object5
TS   = Tablespace
DB   = DATABASE
SG   = STGROUP
LOBJ = ListObject
WL   = ""

DDLTEXT = ""
DDLTEXT = DDLTEXT ZOSC1AC3(SSID,   ,           /* SSID    */
                           EDIT_SQL,,          /* Edit SQL */
                           LOC,    ,           /* LOCATION */
                           LNR,    ,           /* TABLENR */
                           TABNR,  ,           /* TABLENR */
                           FK,     ,           /* FUKTION */
                           OB,     ,           /* OBJECT  */
                           OB2,    ,           /* TABLE   */
                           OB3,    ,           /* TABLE   */
                           OB4,    ,           /* TABLE   */
                           OB5,    ,           /* TABLE   */
                           TS,     ,           /* TABLESPACE */
                           DB,     ,           /* DATABASE   */
                           SG,     ,           /* STORAGEGROUP */
                           LOBJ,   ,           /* List Object*/
                           ISPFILE,,           /* ISPFILE    */
                           DB2vers,,           /* db2 version   */
                           DB2CatL,,           /* db2 Catalog Level */
                           WL      ,           /* Like Suchen oder = */
                           )

DDLTEXT = STRIP(DDLTEXT)

IF LENGTH(DDLTEXT) = 0 THEN DO
   RETURN 8
 End

DO FOREVER
   PARSE VALUE DDLTEXT WITH LZEILE  '-NR' REST
   IF SUBSTR(LZEILE, 1, 4) = "*UZ*" THEN DO
      UZeile = substr(LZeile, 5)
    end
   IF REST = '' THEN LEAVE
   DDLTEXT = REST
 END

return

Anzeigen_daten:

DROP LISTE.
LISTE.0 = 0
DO FOREVER
   LISTE.0 = LISTE.0 + 1
   IND = LISTE.0
   PARSE VALUE DDLTEXT WITH LISTE.IND '-NR' REST
   IF REST = '' THEN LEAVE
   DDLTEXT = REST
 END

Drop SL.
SL.0 = 0
If HEADER = "YES" Then do
   OK = NextSl(Left("--WORKLIST TYPE "Worklisttype, 72) )
   OK = NextSl(Left("--WORKLIST RESTART "right('0', 15, '0') , 72) )
   OK = NextSl(Left("--SQLTERM=;", 72) )
   OK = NextSl(Left("--SPROCPARSER=,", 72) )
   OK = NextSl(Left(" ", 72) )
   OK = Nextsl("--STMT " right('0' , 15, '0') )
   OK = NextSl(Left(" ", 72) )
   OK = NextSl(Left("SET CURRENT RULES = '"CURRULE"' ;", 72) )
   If Length(CURSQLID) > 0 Then Do
      OK = NExtsl(Left("SET CURRENT SQLID = '"CURSQLID"'  ;", 72) )
      OK = Nextsl(Left(" ", 72) )
    End
    If sqlterm <> ";" Then do
       OK = NextSl(Left("--SQLTERM=" || sqlterm,   72) )
     End
 end

STRIP_TO_SPUFI = "N"
DO IND = 1 TO LISTE.0
   IF STRIP(LISTE.IND) = '' THEN ITERATE
   DDLTEXT = LISTE.IND
   STMT_Nummer = STMT_Nummer + STMT_Schritte
   If WLTYPE = 2 Then Do
      Ok = Nextsl("--STMT " right(STMT_Nummer, 15, '0') )
    End
   DO FOREVER
      PARSE VALUE DDLTEXT WITH ZEILE  '-NL' REST
      DDLTEXT = REST
      if length(zeile) = 0 Then Zeile = "   "
/*    If Length(Strip(Zeile)) = 0 then Iterate  */
      OK = NEXTSL(ZEILE)
      If substr(Strip(sl.sli), 1, 10) = "--SQLTERM=" Then do
         Parse value(sl.sli) with test "=" sqlterm .
         sqlterm = Strip(Sqlterm)
       end

      If DDLSPUFI = "Y" & Length(Strip(sl.sli, "T")) > SpufiLen Then do
         STRIP_TO_SPUFI = "Y"
       End

      IF REST = '' THEN do
         If Strip(sl.sli) <> ""  ,
          & substr(Strip(sl.sli), 1, 10) <> "--SQLTERM=" Then do
            If Length(Strip(sl.sli)) > 60 Then Do
               sl.0 = sl.0 + 1;sli = sl.0;sl.sli = ZEILE ;
               sl.sli = sqlterm
             End
            Else Do
               sl.0 = sl.0 + 1;sli = sl.0;sl.sli = "   " || sqlterm ;
             End
          End
         leave
       end
    END
 END

max_blanks = 6
blank_such = LEFT(' ',max_blanks,' ')


Do i = 1 to SL.0
   blz = 0
   drop azline
   azline = ""
   sl.i = Strip( sl.i, 'T', ' ' )
   If Length(sl.i) < 72 Then SL.i = Left(SL.i, 72)
   if sl.i = "" Then SL.i = " "
   IF POS(blank_such, sl.i) < 1 THEN Iterate
   hkon = 'N'
   Do bli = 1 to length(sl.i)
      if substr(sl.i, bli, 1) = "'" & hkon = 'Y' Then hkon = 'N'
      if substr(sl.i, bli, 1) = "'" & hkon = 'N' Then hkon = 'Y'
      if substr(sl.i, bli, 1) = " " Then Do
         Blz = Blz + 1
       End
      Else Do
         Blz = 0
       End
      If hkon = 'Y' Then Do
         Blz = 0
       End
      if blz > max_blanks Then Iterate
      azline = azline || substr(sl.i, bli, 1)
    End
   If length(azline) < 72 Then sl.i = Substr(azline, 1, 72)
   Else                        sl.i = azline
 End

If STRIP_TO_SPUFI = "Y"  Then Do
   Drop SlN.
   SlN.0 = 0
   Do sli = 1 to sl.0
      Sln.0 = sln.0 + 1; Slin  = sln.0 ;
      If Length(Strip(Sl.sli, "T"))  > SpufiLen Then do
         Do while Length(sl.sli) > 0
            sln.slin = Substr(sl.sli, 1,  SpufiLen)
            sl.sli   = Substr(sl.sli, SpufiLen + 1)
            If length(sl.sli) < 1 then Leave
            Sln.0 = sln.0 + 1; Slin  = sln.0 ;
          End
       End
      Else Do
         sln.slin = sl.sli
       End
    End

   /* Daten wieder nach sl. stellen */
   sl.0 = sln.0
   Do sli = 1 to sln.0
      If length(sln.sli) < 72 Then Do
         sln.sli = Substr(sln.sli, 1, 72)
       end
      sl.sli = sln.sli
    End
 End

call Write_file

DROP SL.
SL.0 = 0
DROP DDLTEXT
DDLTEXT = ""

return

Alloc_file:
DSNAME = ZOSC1900("ZOSC1","DSNAME", "STMT", LNR)
LRECL   = RECLEN
LRECL   = STMTLEN

ADDRESS "TSO" "FREE FI(SELDD)"
IF LISTDSI(DSNAME) = 0 THEN ADDRESS "TSO" "DELETE "DSNAME
ADDRESS "TSO" "ALLOC F(SELDD) DA("DSNAME") NEW CATALOG " ,
      "SPACE("TRACKS","TRACKS") TRACKS " ,
      "RECFM(F B)                      " ,
      "LRECL("LRECL") UNIT(SYSDA)"

ADDRESS "TSO" "FREE FI(SELDD)"
ADDRESS "TSO" "ALLOC F(SELDD) DA("DSNAME") MOD"

If RC <> 0 Then do
   SAY RC  ERRORTEXT(RC)
   SAY RC  "TSO" "ALLOC F(SELDD) DA("DSNAME") MOD CATALOG ",
             "SPACE("TRACKS","TRACKS") TRACKS ",
             "LRECL("LRECL") UNIT(SYSDA)"
   EXIT 8
 End


return

Write_file:


Select
  When  ENV = "WIN" Then do
        Do i = 1 to sl.0
           say sl.i
         end

   End
  When RUN_ENV = "BATCH" Then Do
       "EXECIO "SL.0" DISKW OUTDD (STEM SL. FINIS"
       say "OUTPUT="sl.0 "ROWS" sl.1 sl.2
       If RC <> 0 Then do
          SAY RC  ERRORTEXT(RC)
          say RC  "TSO" "EXECIO "SL.0" DISKW OUTDD (STEM SL. FINIS"
          EXIT  8
        End
   End
  Otherwise Do
        ADDRESS "TSO" "EXECIO "SL.0" DISKW SELDD (STEM SL. FINIS"
        If RC <> 0 Then do
           SAY RC  "Fehler "ERRORTEXT(RC)
           say RC  "TSO" "EXECIO "SL.0" DISKW SELDD (STEM SL. FINIS"
           If RC <> 1 Then EXIT  8
         End
   End
 End



HEADER = "NO"

return

Connect_Location:

 If Length(Strip(arg(1))) = 0 Then Return 0
 If Length(SYSUID) > 0 & Length(SYSPWD) > 0 Then do
     If ENV = "WIN" Then do
        SQLTEXT = " CONNECT TO" ARG(1) "USER "USER" USING "PASSWD
      End
     Else Do
        SQLTEXT = " CONNECT TO "ARG(1) "USER :SYSUID USING :SYSPWD "
      End
  End
 ELSE Do
     SQLTEXT = " CONNECT TO "ARG(1)
  End
 Call EXECUTE_SQL_TEXT
 IF SQLCODE <  0 THEN DO
    sqlc = sqlcode
    MSGTXT = 'Error in CONNECT TO ' || arg(1) ||,
             ' SQLCODE: ' || SQLCODE
    SAY MSGTXT
    call SQL_ERROR
  END

 parse value sqlerrp with DB_ENV 4 DB_Vers 6 DB_Rel 8 DB_Mod
Return SQLCODE

DisConnect_Location:

 If Length(Strip(arg(1))) = 0 Then Return 0
 If ENV = "WIN" Then Do
    SQLTEXT = " CONNECT RESET "
    Call EXECUTE_SQL_TEXT
    Return sqlcode
  End

 SQLTEXT =  "RELEASE " ARG(1)
 Call EXECUTE_SQL_TEXT
 SQLTEXT =  "COMMIT  "
 Call EXECUTE_SQL_TEXT
 SQLTEXT = " CONNECT RESET "
 Call EXECUTE_SQL_TEXT
 sqlc = sqlcode
 IF SQLCODE <  0 THEN DO
    sqlc = sqlcode
    MSGTXT = 'Error in DISCONNECT ' || arg(1) ||,
             ' SQLCODE: ' || SQLCODE
    SAY MSGTXT
    call SQL_ERROR
  END
Return SQLCODE

EXECUTE_SQL:

If Datatype(CNR) <> "NUM" Then CNR = 1
If Datatype(SNR) <> "NUM" Then SNR = CNR
DO STI = 1 TO EINGABE.0
   SQLSTMT = VALUE(SPACE(RXDB2_GETSTEM, 0) || STI)
   SQLSTMT = SPACE(SQLSTMT, 1)
   IF WORD(SQLSTMT, 1) = "CONNECT" & WORD(SQLSTMT, 2) = "TO" THEN DO
      SQLTEXT =  " "SQLSTMT
      Call EXECUTE_SQL_TEXT
      IF SQLCODE <> 0 THEN DO
         SAY "Error in "SQLSTMT "SQLCODE: " || SQLCODE
       END
      ITERATE
    END

   SQLTEXT =         " CLOSE C"CNR" "
   Call EXECUTE_SQL_TEXT
   SQLTEXT =  " DECLARE              C"CNR" CURSOR FOR S"SNR
   Call EXECUTE_SQL_TEXT
   IF SQLCODE <> 0 THEN DO
      SAY "A2 DECLARE     SQLCODE="SQLCODE
      SAY SQLSTMT
      call SQL_ERROR
    END

   If ENV = TSO Then do
       PREP_ATTR =   "CONCENTRATE STATEMENTS WITH LITERALS  "
       SQLTEXT = " PREPARE S"SNR "INTO :OUTSQLDA " ,
                 " ATTRIBUTES :PREP_ATTR " ,
                 " FROM :SQLSTMT" ,
                 ""
     End
     Else Do
       SQLTEXT = " PREPARE S"SNR "INTO :OUTSQLDA " ,
                 " FROM :SQLSTMT" ,
                 ""
     End
   Call EXECUTE_SQL_TEXT
   IF SQLCODE <> 0 THEN DO
      SAY "A2 PREPARE     SQLCODE="SQLCODE
      SAY SQLSTMT
      call SQL_ERROR
    END
   SQLTEXT =  " DESCRIBE S"SNR" INTO :OUTSQLDA"
   Call EXECUTE_SQL_TEXT
   IF SQLCODE <> 0 THEN DO
      SAY "A2 DESCRIBE    SQLCODE="SQLCODE
      SAY SQLSTMT
      call SQL_ERROR
    END
   SQLTEXT =  " OPEN C"CNR""
   Call EXECUTE_SQL_TEXT
   IF SQLCODE <> 0 THEN DO
      SAY "A2 OPEN        SQLCODE="SQLCODE
      SAY SQLSTMT
      call SQL_ERROR
    END
   IVAL = VALUE(SPACE(RXDB2_PUTSTEM, 0) || 0) "= 0"
   INTERPRET  IVAL
   DO WHILE SQLCODE = 0
      SQLTEXT =  " FETCH C"CNR" USING DESCRIPTOR :OUTSQLDA"
      Call EXECUTE_SQL_TEXT
      IF SQLCODE <> 0 THEN LEAVE
      IVAL = "I = " VALUE(SPACE(RXDB2_PUTSTEM, 0) || 0) "+ 1"
      INTERPRET  IVAL
      IVAL = SPACE(RXDB2_PUTSTEM, 0) || 0  " = I"
      INTERPRET  IVAL
      DO CI = 1 TO OUTSQLDA.SQLD
         /* AUSGABE.1.DBNAME = "DSNDB07"   */
         IVAL = VALUE(SPACE(RXDB2_PUTSTEM, 0) || I) || "." ||  ,
                SPACE(OUTSQLDA.CI.SQLNAME, 0)
         INTERPRET IVAL"=OUTSQLDA.CI.SQLDATA"
       END
    END
 END

RETURN

EXECUTE_SQL_TEXT:
 Select
    When ENV = 'TSO' Then Do
         ADDRESS DSNREXX "EXECSQL "SQLTEXT
         Select
           When rc =  -2168 Then do
                SQLCODE    = -99999
                SQLERRMC   = "Returncode war " RC
            End
           Otherwise nop
          End
     End
    When ENV = 'WIN' Then Do
         CALL SQLEXEC SQLTEXT
         SQLCODE    = SQLCA.SQLCODE
         SQLERRMC   = SqlMsg
     End
    Otherwise NOP
  End
Return

SQL_ERROR:

If ENV = "WIN" Then do
   say
   say '**** SQL returned the following : '
   say '     STEP        = ' STEP
   say '     SQLCODE     = ' sqlca.Sqlcode
   say '     Message   = ' SqlMsg
   say
   Return
 End

SQLC = D2X(SQLCODE,8)
SQLC = X2C(SQLC)


SQL_ERRD = ""
Do I = 1 To 6
   SQL_ERRD = SQL_ERRD||D2C(SQLERRD.I,4)
End
SQL_WARN = ""
Do I = 0 To 10
   SQL_WARN = SQL_WARN||LEFT(SQLWARN.I,1)
End

MSG_LEN = 80
SQLCA = 'SQLCA   '
SQLCA = SQLCA || X2C(00000088)
SQLCA = SQLCA || SQLC
SQLCA = SQLCA || D2C(70,2)
SQLCA = SQLCA || 'DSN     '
SQLCA = SQLCA || LEFT(SQLERRMC,70)
SQLCA = SQLCA || LEFT(SQLERRP,8)
SQLCA = SQLCA || SQL_ERRD
SQLCA = SQLCA || SQL_WARN
SQLCA = SQLCA || LEFT(SQLSTATE,5)
TIAR_MSG = D2C(MSG_LEN * 12,2) || COPIES(' ',MSG_LEN * 12)
TEXT_LEN = D2C(MSG_LEN,4)
ADDRESS ATTCHPGM 'DSNTIAR SQLCA TIAR_MSG TEXT_LEN'

If RC < 5 Then,
   Do
   If RC = 4 Then Say "DSNTIAR RC=4 Message Area Truncated"
   S_POS = 3              /* Bypass the length bytes in Message Area */
   Do I = 1 to 12         /* Loop through all lines of message */
      MSG_TEXT = Substr(tiar_msg,S_POS,MSG_LEN) /* Pick out text */
      MSG_TEXT = Strip(MSG_TEXT,T," ") /* Remove trailing blanks */
      If MSG_TEXT > " " Then Say MSG_TEXT /* Echo msg to terminal */
      Else Iterate /* Some msg lines are blank, skip */
      S_POS = S_POS + MSG_LEN /* Skip to next "line" of MSG data */
   End I
End
Else Do
   Say "Call to DSNTIAR - Failed. RC=" RC
   Say 'SQLCODE ='SQLCODE; Say 'SQLERRM ='SQLERRMC
   Say 'SQLERRP ='SQLERRP; Say 'SQLSTATE='SQLSTATE
   XX = "SQLERRD ="
   Do I = 1 to 6 ; XX = XX||SQLERRD.I||',';End;Say XX
   XX = "SQLWARN ="
   Do I = 0 to 10; XX = XX||SQLWARN.I||',';End;Say XX
End

RETURN

MAKE_WHERELIST: PROCEDURE EXPOSE WHERELIST

COLUMNNAME = ARG(1)
ARGUMENT   = ARG(2)
ARGTYPE    = ARG(3)

IF LENGTH(STRIP(ARGUMENT)) = 0 THEN RETURN
ARGUMENT   = TRANSLATE(ARGUMENT, '%', '*')

IF TRANSLATE(WORD(WHERELIST, 1) ) = "WHERE" THEN ANDKZ = "AND"
 ELSE ANDKZ = "WHERE"

IF LENGTH(STRIP(COLUMNNAME)) = 0 ,
 & LENGTH(STRIP(ARGUMENT)) > 0 THEN DO
   WHERELIST = WHERELIST ANDKZ ARGUMENT
   RETURN
 END

IF LENGTH(STRIP(ARGUMENT)) = 0 THEN RETURN

If ARGTYPE = "NUM" Then do
   IF POS('%', ARGUMENT) > 0 THEN DO
      WHERELIST = WHERELIST ANDKZ COLUMNNAME "LIKE "ARGUMENT
    END
   Else Do
      WHERELIST = WHERELIST ANDKZ COLUMNNAME "= "ARGUMENT
    END
 End
Else Do
   IF POS('%', ARGUMENT) > 0 ,
    | POS('_', ARGUMENT) > 0 THEN DO
      WHERELIST = WHERELIST ANDKZ COLUMNNAME "LIKE '"ARGUMENT"'"
    END
   Else Do
      WHERELIST = WHERELIST ANDKZ COLUMNNAME "= '"ARGUMENT"'"
    END
 End

RETURN

Load_DSNREXX:
"SUBCOM DSNREXX"
IF RC THEN   S_RC = RXSUBCOM('ADD','DSNREXX','DSNREXX')

ADDRESS DSNREXX "CONNECT "DB2_SSID
IF SQLCODE <  0 THEN Do
   say "CONNECT   SQLCODE ="SQLCODE "<"DB2_SSID">"
   say "          SQLSTATE="SQLSTATE
 End

Return

UNLoad_DSNREXX:

"SUBCOM DSNREXX"
If RC = 0 Then do
   ADDRESS DSNREXX "DISCONNECT"
   S_RC = RXSUBCOM('DELETE','DSNREXX','DSNREXX')
 End

Return

Auswahl_SC:

IF ENV = "WIN" Then Do
   Call Auswahl_SC_WIN
   Return
 End

IF RUN_ENV = "BATCH" Then Do
   Call Auswahl_SC_Batch
   Return
 End

If Info_anzeige <> "YES" Then Do
   SAVE_Object  = Object
   ADB     = "N"
   ASP     = "J"
   ASE     = "J"
   ATS     = "J"
   ATB     = "J"
   AIX     = "J"
   ATC     = "J"
   AREL    = "J"
   ARELTB  = "J"
   AVW     = "J"
   APK     = "J"
   AFK     = "J"
   ATG     = "J"
   AAL     = "J"
   ASY     = "J"
   APERM   = "J"
   AVAR    = "J"
   ADT     = "J"
   ATBA    = "N"
   AVWA    = "N"
   ASQA    = "N"
   ARTA    = "N"
   ADBOK   = "NO"
   ASPOK   = "NO"
   ASEOK   = "NO"
   ATSOK   = "NO"
   ATBOK   = "NO"
   AIXOK   = "NO"
   ATCOK   = "NO"
   ARELOK  = "NO"
   ARELTBOK= "NO"
   AVWOK   = "NO"
   APKOK   = "NO"
   AFKOK   = "NO"
   ATGOK   = "NO"
   AALOK   = "NO"
   ASYOK   = "NO"
   APERMOK = "NO"
   AVAROK  = "NO"
   ADTOK   = "NO"
   ADBT    = 0
   ASPT    = 0
   ASET    = 0
   ATST    = 0
   ATBT    = 0
   AIXT    = 0
   ATCT    = 0
   ARELT   = 0
   ARELTBT = 0
   AVWT    = 0
   APKT    = 0
   AFKT    = 0
   ATGT    = 0
   AALT    = 0
   ASYT    = 0
   APERMT  = 0
   AVART   = 0
   ADTT    = 0
 End
 Else Do
   Object  = save_Object
   If GrantTable_Val <> ATBA Then ATBA = GrantTable_Val
   If GrantView_Val  <> AVWA Then AVWA = GrantView_Val
   If GrantSQ_Val    <> ASQA Then ASQA = GrantSQ_Val
   If GrantRT_Val    <> ARTA Then ARTA = GrantRT_Val
 End

area.0  = 26
area.1  = white"HDDL Schema        "Object
area.2  = white"  DDL  select with J/N                       "
area.3  = white"                                             "
area.4  = white"       "keyw"DATABASE   "in1 || ADB  || endin ,
 "FERTIG : " ADBOK ADBT "Sekunden"
area.5  = white"       "keyw"Tablespace "in1 || ATS  || endin ,
 "FERTIG : " ATSOK ATST "Sekunden"
area.6  = white"       "keyw"AuxtableTS "in1 || AREL || endin ,
 "FERTIG : " ARELOK ARELT "Sekunden"
area.7  = white"       "keyw"Table      "in1 || ATB  || endin ,
 "FERTIG : " ATBOK ATBT "Sekunden"
area.8  = white"       "keyw"Auxtable   "in1 || ARELTB || endin ,
 "FERTIG : " ARELTBOK ARELTBT "Sekunden"
area.9  = white"       "keyw"Index      "in1 || AIX  || endin ,
 "FERTIG : " AIXOK AIXT "Sekunden"
area.10 = white"       "keyw"Comment    "in1 || ATC  || endin ,
 "FERTIG : " ATCOK ATCT "Sekunden"
area.11 = white"       "keyw"View / MQT "in1 || AVW  || endin ,
 "FERTIG : " AVWOK AVWT "Sekunden"
area.12 = white"       "keyw"PrimaryKey "in1 || APK  || endin ,
 "FERTIG : " APKOK APKT "Sekunden"
area.13 = white"       "keyw"ForeignKey "in1 || AFK  || endin ,
 "FERTIG : " AFKOK AFKT "Sekunden"
area.14 = white"       "keyw"Trigger    "in1 || ATG  || endin ,
 "FERTIG : " ATGOK ATGT "Sekunden"
area.15 = white"       "keyw"SProc      "in1 || ASP  || endin ,
 "FERTIG : " ASPOK ASPT "Sekunden"
area.16 = white"       "keyw"Sequence   "in1 || ASE  || endin ,
 "FERTIG : " ASEOK ASET "Sekunden"
area.17 = white"       "keyw"Alias      "in1 || AAL  || endin ,
 "FERTIG : " AALOK AALT "Sekunden"
area.18 = white"       "keyw"Synonym    "in1 || ASY  || endin ,
 "FERTIG : " ASYOK ASYT "Sekunden"
area.19 = white"       "keyw"Permission "in1 || APERM|| endin ,
 "FERTIG : " APERMOK APERMT "Sekunden"
area.20 = white"       "keyw"Variable   "in1 || AVAR || endin ,
 "FERTIG : " AVAROK AVART "Sekunden"
area.21 = white"       "keyw"Datatype   "in1 || ADT  || endin ,
 "FERTIG : " ADTOK ADTT "Sekunden"
area.22 = white"       "keyw"GrantTable "in1 || ATBA || endin
area.23 = white"       "keyw"GrantView  "in1 || AVWA || endin
area.24 = white"       "keyw"GrantSQ    "in1 || ASQA || endin
area.25 = white"       "keyw"GrantRT    "in1 || ARTA || endin
area.26 = white" "

Call Anzeige_Dyn_Panel

Return

Auswahl_DB:

IF ENV = "WIN" Then Do
   Call Auswahl_DB_WIN
   Return
 End

IF RUN_ENV = "BATCH" Then Do
   Call Auswahl_DB_Batch
   Return
 End

If Info_anzeige <> "YES" Then Do
   SAVE_Object  = Object
   ADB     = "J"
   ATS     = "J"
   ATB     = "J"
   AIX     = "J"
   ATC     = "J"
   AREL    = "J"
   ARELTB  = "J"
   AVW     = "J"
   APK     = "J"
   AFK     = "J"
   ATG     = "J"
   ASY     = "J"
   ASP     = "J"
   APERM   = "J"
   ATBA    = "N"
   AVWA    = "N"
   ASQA    = "N"
   ARTA    = "N"
   ADBOK   = "NO"
   ATSOK   = "NO"
   ATBOK   = "NO"
   AIXOK   = "NO"
   ATCOK   = "NO"
   ARELOK  = "NO"
   ARELTBOK= "NO"
   AVWOK   = "NO"
   APKOK   = "NO"
   AFKOK   = "NO"
   ATGOK   = "NO"
   ASYOK   = "NO"
   ASPOK   = "NO"
   APERMOK = "NO"
   ADBT    = 0
   ATST    = 0
   ATBT    = 0
   AIXT    = 0
   ATCT    = 0
   ARELT   = 0
   ARELTBT = 0
   AVWT    = 0
   APKT    = 0
   AFKT    = 0
   ATGT    = 0
   ASYT    = 0
   ASPT    = 0
   APERMT  = 0
 End
 Else Do
   If GrantTable_Val <> ATBA Then ATBA = GrantTable_Val
   If GrantView_Val  <> AVWA Then AVWA = GrantView_Val
   If GrantRT_Val    <> ARTA Then ARTA = GrantRT_Val
   Object  = save_Object
 End

area.0  = 22
area.1  = white"HDDL Database      "Object
area.2  = white"  DDL  select with J/N                       "
area.3  = white"                                             "
area.4  = white"       "keyw"Database   "in1 || ADB  || endin,
 "FERTIG : " ADBOK ADBT "Sekunden"
area.5  = white"       "keyw"Tablespace "in1 || ATS  || endin,
 "FERTIG : " ATSOK ATST "Sekunden"
area.6  = white"       "keyw"AuxtableTS "in1 || AREL || endin,
 "FERTIG : " ARELOK ARELT "Sekunden"
area.7  = white"       "keyw"Table      "in1 || ATB  || endin,
 "FERTIG : " ATBOK ATBT "Sekunden"
area.8  = white"       "keyw"Auxtable   "in1 || AREL || endin,
 "FERTIG : " ARELTBOK ARELTBT "Sekunden"
area.9  = white"       "keyw"Index      "in1 || AIX  || endin,
 "FERTIG : " AIXOK AIXT "Sekunden"
area.10 = white"       "keyw"Comment    "in1 || ATC  || endin,
 "FERTIG : " ATCOK ATCT "Sekunden"
area.11 = white"       "keyw"View / MQT "in1 || AVW  || endin,
 "FERTIG : " AVWOK AVWT "Sekunden"
area.12 = white"       "keyw"PrimaryKey "in1 || APK  || endin,
 "FERTIG : " APKOK APKT "Sekunden"
area.13 = white"       "keyw"ForeignKey "in1 || AFK  || endin,
 "FERTIG : " AFKOK AFKT "Sekunden"
area.14 = white"       "keyw"Trigger    "in1 || ATG  || endin,
 "FERTIG : " ATGOK ATGT "Sekunden"
area.15 = white"       "keyw"Synonym    "in1 || ASY  || endin,
 "FERTIG : " ASYOK ASYT "Sekunden"
area.16 = white"       "keyw"Permission "in1 || APERM|| endin,
 "FERTIG : " APERMOK APERMT "Sekunden"
area.17 = white"       "keyw"SProc      "in1 || ASP  || endin,
 "FERTIG : " ASPOK ASPT "Sekunden"
area.18 = white"       "keyw"GrantTable "in1 || ATBA || endin,
""
area.19 = white"       "keyw"GrantView  "in1 || AVWA || endin,
""
area.20 = white"       "keyw"GrantRT    "in1 || ARTA || endin,
""
area.21 = white" "
area.22 = white" "

Call Anzeige_Dyn_Panel


Return

Auswahl_SC_Batch:

DATABASE_Val    = "N"
TABLESPACE_VAL  = "N"
TABLE_VAL       = "N"
INDEX_VAL       = "N"
COMMENT_VAL     = "N"
AUXTABLE_VAL    = "N"
VIEW_VAL        = "N"
PRIMARYKEY_VAL  = "N"
FOREIGNKEY_VAL  = "N"
TRIGGER_VAL     = "N"
SPROC_VAL       = "N"
GRANTTABLE_VAL  = "N"
GRANTVIEW_VAL   = "N"
GRANTSQ_VAL     = "N"
GRANTRT_VAL     = "N"
SEQUENCE_VAL    = "N"
ALIAS_VAL       = "N"
SYNONYM_VAL     = "N"
PERMISSION_VAL  = "N"
VARIABLE_VAL    = "N"
DATATYPE_VAL    = "N"


If G_DATABASE   =  "Y" Then DATABASE_Val    = "Y"    /*  DB         */
IF G_TABLESPACE =  "Y" THEN TABLESPACE_VAL  = "Y"    /*  DB / SC    */
IF G_TABLE      =  "Y" THEN TABLE_VAL       = "Y"    /*  DB / SC    */
IF G_INDEX      =  "Y" THEN INDEX_VAL       = "Y"    /*  DB / SC    */
IF G_COMMENT    =  "Y" THEN COMMENT_VAL     = "Y"    /*  DB / SC    */
IF G_AUXTABLE   =  "Y" THEN AUXTABLE_VAL    = "Y"    /*  DB / SC    */
IF G_VIEW       =  "Y" THEN VIEW_VAL        = "Y"    /*  DB / SC    */
IF G_PRIMARYKEY =  "Y" THEN PRIMARYKEY_VAL  = "Y"    /*  DB / SC    */
IF G_FOREIGNKEY =  "Y" THEN FOREIGNKEY_VAL  = "Y"    /*  DB / SC    */
IF G_TRIGGER    =  "Y" THEN TRIGGER_VAL     = "Y"    /*  DB / SC    */
IF G_SPROC      =  "Y" THEN SPROC_VAL       = "Y"    /*  DB / SC    */
IF G_GRANTTABLE =  "Y" THEN GRANTTABLE_VAL  = "Y"    /*  DB / SC    */
IF G_GRANTVIEW  =  "Y" THEN GRANTVIEW_VAL   = "Y"    /*  DB / SC    */
IF G_GRANTSQ    =  "Y" THEN GRANTSQ_VAL     = "Y"    /*  DB / SC    */
IF G_GRANTRT    =  "Y" THEN GRANTRT_VAL     = "Y"    /*  DB / SC    */
IF G_SEQUENCE   =  "Y" THEN SEQUENCE_VAL    = "Y"    /*     / SC    */
IF G_ALIAS      =  "Y" THEN ALIAS_VAL       = "Y"    /*     / SC    */
IF G_SYNONYM    =  "Y" THEN SYNONYM_VAL     = "Y"    /*  DB / SC    */
IF G_PERMISSION =  "Y" THEN PERMISSION_VAL  = "Y"    /*  DB / SC    */
IF G_VARIABLE   =  "Y" THEN VARIABLE_VAL    = "Y"    /*     / SC    */
IF G_DATATYPE   =  "Y" THEN DATATYPE_VAL    = "Y"    /*     / SC    */


Return

Auswahl_DB_Batch:

DATABASE_Val    = "N"
TABLESPACE_VAL  = "N"
TABLE_VAL       = "N"
INDEX_VAL       = "N"
COMMENT_VAL     = "N"
AUXTABLE_VAL    = "N"
VIEW_VAL        = "N"
PRIMARYKEY_VAL  = "N"
FOREIGNKEY_VAL  = "N"
TRIGGER_VAL     = "N"
SPROC_VAL       = "N"
GRANTTABLE_VAL  = "N"
GRANTVIEW_VAL   = "N"
GRANTSQ_VAL     = "N"
GRANTRT_VAL     = "N"
SEQUENCE_VAL    = "N"
ALIAS_VAL       = "N"
SYNONYM_VAL     = "N"
PERMISSION_VAL  = "N"
VARIABLE_VAL    = "N"
DATATYPE_VAL    = "N"


If G_DATABASE   =  "Y" Then DATABASE_Val    = "Y"    /*  DB / SC    */
IF G_TABLESPACE =  "Y" THEN TABLESPACE_VAL  = "Y"    /*  DB / SC    */
IF G_TABLE      =  "Y" THEN TABLE_VAL       = "Y"    /*  DB / SC    */
IF G_INDEX      =  "Y" THEN INDEX_VAL       = "Y"    /*  DB / SC    */
IF G_COMMENT    =  "Y" THEN COMMENT_VAL     = "Y"    /*  DB / SC    */
IF G_AUXTABLE   =  "Y" THEN AUXTABLE_VAL    = "Y"    /*  DB / SC    */
IF G_VIEW       =  "Y" THEN VIEW_VAL        = "Y"    /*  DB / SC    */
IF G_PRIMARYKEY =  "Y" THEN PRIMARYKEY_VAL  = "Y"    /*  DB / SC    */
IF G_FOREIGNKEY =  "Y" THEN FOREIGNKEY_VAL  = "Y"    /*  DB / SC    */
IF G_TRIGGER    =  "Y" THEN TRIGGER_VAL     = "Y"    /*  DB / SC    */
IF G_SPROC      =  "Y" THEN SPROC_VAL       = "Y"    /*  DB / SC    */
IF G_GRANTTABLE =  "Y" THEN GRANTTABLE_VAL  = "Y"    /*  DB / SC    */
IF G_GRANTVIEW  =  "Y" THEN GRANTVIEW_VAL   = "Y"    /*  DB / SC    */
IF G_GRANTSQ    =  "Y" THEN GRANTSQ_VAL     = "Y"    /*  DB / SC    */
IF G_GRANTRT    =  "Y" THEN GRANTRT_VAL     = "Y"    /*  DB / SC    */
IF G_PERMISSION =  "Y" THEN PERMISSION_VAL  = "Y"    /*  DB / SC    */
IF G_SYNONYM    =  "Y" THEN SYNONYM_VAL     = "Y"    /*  DB / SC    */

IF G_SEQUENCE   =  "Y" THEN SEQUENCE_VAL    = "N"    /*     / SC    */
IF G_ALIAS      =  "Y" THEN ALIAS_VAL       = "N"    /*     / SC    */
IF G_VARIABLE   =  "Y" THEN VARIABLE_VAL    = "N"    /*     / SC    */
IF G_DATATYPE   =  "Y" THEN DATATYPE_VAL    = "N"    /*     / SC    */

Return


Auswahl_SC_WIN:

DATABASE_Val    = "Y"
TABLESPACE_VAL  = "Y"
TABLE_VAL       = "Y"
INDEX_VAL       = "Y"
COMMENT_VAL     = "Y"
AUXTABLE_VAL    = "Y"
VIEW_VAL        = "Y"
PRIMARYKEY_VAL  = "Y"
FOREIGNKEY_VAL  = "Y"
TRIGGER_VAL     = "Y"
SPROC_VAL       = "Y"
GRANTTABLE_VAL  = "Y"
GRANTVIEW_VAL   = "Y"
GRANTSQ_VAL     = "Y"
GRANTRT_VAL     = "Y"
SEQUENCE_VAL    = "Y"
ALIAS_VAL       = "Y"
SYNONYM_VAL     = "Y"
PERMISSION_VAL  = "Y"
VARIABLE_VAL    = "Y"
DATATYPE_VAL    = "Y"


Return

Auswahl_DB_WIN:

DATABASE_Val    = "Y"
TABLESPACE_VAL  = "Y"
TABLE_VAL       = "Y"
INDEX_VAL       = "Y"
COMMENT_VAL     = "Y"
AUXTABLE_VAL    = "Y"
VIEW_VAL        = "Y"
PRIMARYKEY_VAL  = "Y"
FOREIGNKEY_VAL  = "Y"
TRIGGER_VAL     = "Y"
SPROC_VAL       = "Y"
GRANTTABLE_VAL  = "Y"
GRANTVIEW_VAL   = "Y"
GRANTSQ_VAL     = "Y"
GRANTRT_VAL     = "Y"
SEQUENCE_VAL    = "Y"
ALIAS_VAL       = "Y"
SYNONYM_VAL     = "Y"
PERMISSION_VAL  = "Y"
VARIABLE_VAL    = "Y"
DATATYPE_VAL    = "Y"


Return


Auswahl_DDLE:

ausw =  left(auswahl     , 10, ' ' )
obj1 =  left(object      , 50, ' ' )
obj2 =  left(table       , 50, ' ' )
obj3 =  left(object3     , 50, ' ' )
obj4 =  left(object4     , 50, ' ' )
obj5 =  left(object5     , 50, ' ' )
obj6 =  left(tablespace  , 50, ' ' )
obj7 =  left(database    , 50, ' ' )


area.0  = 13
area.1  = white"DDLE Database      "Object
area.2  = white"  DDLE  Dynamic change selection            "
area.3  = white"                                            "
area.4  = white"       "keyw"auswahl    "in1 || ausw || endin
area.5  = white"                                            "
area.6  = white"       "keyw"object     "in1 || obj1 || endin
area.7  = white"       "keyw"table      "in1 || obj2 || endin
area.8  = white"       "keyw"object3    "in1 || obj3 || endin
area.9  = white"       "keyw"object4    "in1 || obj4 || endin
area.10 = white"       "keyw"object5    "in1 || obj5 || endin
area.11 = white"       "keyw"tablespace "in1 || obj6 || endin
area.12 = white"       "keyw"database   "in1 || obj7 || endin
area.13 = white" "

Call Anzeige_Dyn_Panel

Show_Panel = "N" /* Wieder zur}ck setzen wegen falscher Anzeige */


If object <> object_val Then do
   object  = space(object_val, 0)
 End

If table  <> table_val Then do
   table   = space(table_val, 0)
 End

If object3 <> object3_val Then do
   object3  = space(object3_val, 0)
 End

If object4 <> object4_val Then do
   object4  = space(object4_val, 0)
 End

If object5 <> object5_val Then do
   object5  = space(object5_val, 0)
 End

If tablespace <> tablespace_val Then do
   tablespace = space(tablespace_val, 0)
 End

If database   <> database_val Then do
   database   = space(database_val, 0)
 End

If auswahl    <> auswahl_val  Then do
   auswahl    = space(auswahl_val, 0)
 End

Return

Auswahl_COPY_Auth:

A_DBA   = 'Y'
A_UA    = 'Y'
A_RA    = 'Y'
A_SCA   = 'Y'
A_RTA   = 'Y'
A_SEA   = 'Y'
A_VARA  = 'Y'
A_PLA   = 'Y'
A_PGA   = 'Y'
A_TBA   = 'Y'
A_COA   = 'Y'
A_PRGA  = 'Y'

/* In Windows oder Batch kein Panel anzeigen */
IF ENV = "WIN" ,
 | RUN_ENV = "BATCH" Then Do
   Return
 End

Show_Panel = "Y" /* Wieder zur}ck setzen wegen falscher Anzeige */

parse value object with gt "." grantee
Grantee = Substr(Grantee, 1, 8)
area.0  = 13
area.1  = white"COPY AUTH FOR " || keyw "GRANTEE "in1||grantee ||endin
area.2  = white" "
area.3  = white"       "keyw"DBA    "in1 || A_DBA  || endin "Y/N",
               " DATABASE Auth   "
area.4  = white"       "keyw"UA     "in1 || A_UA   || endin "Y/N",
               " User Auth       "
area.5  = white"       "keyw"RA     "in1 || A_RA   || endin "Y/N",
               " Recource Auth   "
area.6  = white"       "keyw"SCA    "in1 || A_SCA  || endin "Y/N",
               " Schema Auth     "
area.7  = white"       "keyw"RTA    "in1 || A_RTA  || endin "Y/N",
               " Routine Auth    "
area.8  = white"       "keyw"SEA    "in1 || A_SEA  || endin "Y/N",
               " Sequence Auth   "
area.9  = white"       "keyw"VARA   "in1 || A_VARA || endin "Y/N",
               " GLOBAL VARIABLE AUTH "
area.10 = white"       "keyw"PLA    "in1 || A_PLA  || endin "Y/N",
               " Plan Auth       "
area.11 = white"       "keyw"PGA    "in1 || A_PGA  || endin "Y/N",
               " Pagage Auth     "
area.12 = white"       "keyw"TBA    "in1 || A_TBA  || endin "Y/N",
               " Table Auth      "
area.13 = white" "

Call Anzeige_Dyn_Panel

Show_Panel = "N" /* Wieder zur}ck setzen wegen falscher Anzeige */

If GRANTEE_val <> Grantee Then Do
   DB2_Creator1   = "*"
   DB2_Name1      = Grantee_val
   Object         = "*." || Grantee_val
   save_object    = "*." || Grantee_val
 End

If DBA_VAL       = "N" THEN A_DBA      = "N"
If UA_VAL        = "N" THEN A_UA       = "N"
If RA_VAL        = "N" THEN A_RA       = "N"
If SCA_VAL       = "N" THEN A_SCA      = "N"
If RTA_VAL       = "N" THEN A_RTA      = "N"
If SEA_VAL       = "N" THEN A_SEA      = "N"
If VARA_VAL      = "N" THEN A_VARA     = "N"
If PLA_VAL       = "N" THEN A_PLA      = "N"
If PGA_VAL       = "N" THEN A_PGA      = "N"
If TBA_VAL       = "N" THEN A_TBA      = "N"


Return



Anzeige_Dyn_Panel_Neu:

Select
  When ENV = "WIN"        Then RETURN    /* nicht unter OOREXX */
  When Show_Panel  <> "Y" Then RETURN    /* Panel nur f}r HDDL SC/DB */
  When RUN_ENV      = "BATCH" Then Return /* Batch aufruf  */
  Otherwise NOP
 End

ADDRESS ISPEXEC  "VGET (ZSCREENW,ZSCREEND)"
dyndata = ""
Do ai = 1 to area.0
   dyndata = dyndata || Left(area.ai, ZSCREENW, ' ')
 end

If InitArea  <> "N" THEN InitArea  = "Y"
If EnterBack <> "Y" THEN EnterBack = "N"

Call ZOSC1906 DYNDATA ,,
              EnterBack ,,
              InitArea

Do QUEUED()
   Parse pull Text
   Interpret Text
 End

PF = RESULT
IF PF = "ENTER" THEN RESP = PF
IF PF = "PF04" Then exit 4

Return

Anzeige_Dyn_Panel:

Select
  When ENV = "WIN"        Then RETURN    /* nicht unter OOREXX */
  When Show_Panel  <> "Y" Then RETURN    /* Panel nur f}r HDDL SC/DB */
  When RUN_ENV      = "BATCH" Then Return /* Batch aufruf  */
  Otherwise NOP
 End

Zeile = 0
MaxLines = area.0
curline = 1
dyndata  = ""
ADDRESS ISPEXEC  "VGET (ZSCREENW,ZSCREEND)"
Do ai = 1 to area.0
   dyndata = dyndata || Left(area.ai, ZSCREENW, ' ')
 end
dyndata = dyndata || endin
dynarea = substr(dyndata,1+(curline-1)*ZSCREENW) /*set dyn var  */
dynarea = dyndata

MaxScreenLines = ZSCREEND-5
dyndata_len = Length(dyndata)
trenner = in1
START   = Pos(keyw, dyndata, 1)
If START  < 1 Then START = 1
DYNPOS  = START + 1
Do ki = 1 to keytab.0
   Found    = Pos(keytab.ki, dyndata, START )
   If Found > 0  Then Do
      SELECT
        When  DYNPOS =  START + 1   Then dynpos = Found + 1
        When  Found  <  DYNPOS      Then dynpos = Found + 1
        Otherwise NOP
       END
    End
 End
znr     = 1
PFTASTEN   = "      PF03=GO    PF04=Cancel "

Do Until disprc > 0

  start   = 1+(curline-1)*ZSCREENW
  dynarea = substr(dyndata, Start)
  If Info_anzeige = "YES" Then Do
     ADDRESS ISPEXEC "CONTROL DISPLAY LOCK"
   End

  ADDRESS ISPEXEC "DISPLAY PANEL(PDYNPNL1)"

  If Info_anzeige = "YES" Then Do
     Info_anzeige = "N"
     Return
   End

  MaxScreenLines = DYNDPTH
  DynArea_len = MaxScreenLines*ZSCREENW
  dyndata1= Substr(dyndata, 1,  1+(curline-1)*ZSCREENW-1)
  start   = Length(dyndata1) + Length(dynarea) + 1
  Dyndata = Dyndata1 || dynarea || Substr(Dyndata, start)
  Eingabe = dynarea

  disprc = rc                              /* save return code       */
  ADDRESS ISPEXEC "VGET (ZVERB)"
  ADDRESS ISPEXEC "VGET (ZSCROLLA)"
  ADDRESS ISPEXEC "VGET (ZSCROLLN)"
  ADDRESS ISPEXEC "VGET (ZSCROLLD) "
  ADDRESS ISPEXEC "VGET (ZXSMAX)"
  ADDRESS ISPEXEC "VGET (ZXSMIN) "
  dynrc = rc
  SELECT                                   /* Process scrolling      */
    When WORD(ZCMD,1) = "TRACE" then do
         IF WORD(ZCMD, 2) = "ON"     Then trace('R')
         IF WORD(ZCMD, 2) = "OFF" Then trace('O')
         UDBTRACE = word(ZCMD, 2)
         UDBAUSW2 = auswahl
         UDBOBJ   = Object
         ADDRESS ISPEXEC 'VPUT (UDBTRACE) PROFILE'
         ZCMD = ''
         Iterate
     end
    When(zverb  = 'UP')   Then Do          /* Scroll up              */
     If zscrolla = 'MAX' Then Do           /*  if scroll was max     */
        curline = 1                       /*    scroll to top       */
      End
     Else Do                               /*  else a number is known*/
      curline = curline - MaxScreenLines        /* (max is bottom)   */
      if curline < 1 then Curline = 1
      End
     End
    When(zverb  = 'DOWN') Then Do          /* Scroll down            */
     If zscrolla = 'MAX' Then Do           /*  if scroll was max     */
      curline = maxlines                   /*    scroll to bottom    */
     end
     Else do                               /*  else a number is known*/
      curline = curline + MaxScreenLines        /* (max is bottom)   */
      If curline > maxlines Then Curline = maxlines
      if DynArea_len >= dyndata_len Then Do  /* NUR EINE SEITE */
         curline = 1
       End
      end
     end
    Otherwise;                      /* could use left & right too    */
  End
  if dynrc > 8 then Do
     say "Display RC="RC
     say "ZEDSMSG="ZEDSMSG
     say "ZERRLM="ZERRLM
     say "ZERRMSG="ZERRMSG
     say "ZERRSM="ZERRSM
     say rc object1
   End

  DO While Length(eingabe) > 0
     Zeile = zeile + 1
     trenner = in1
     FoundL = 0
     Do ki = 1 to keytab.0
        Found    = Pos(keytab.ki, eingabe, 1)
        If Found = 0 Then Iterate
        Select
          When FoundL = 0 Then Do
               Trenner = keytab.KI
               FoundL  = Found
           End
          When FoundL > 0 & Found < FoundL Then Do
               Trenner = keytab.KI
               FoundL  = Found
           End
          Otherwise NOP
         End
      End

     /*    Keyword Finden   */
     epos     = Pos(keyw, eingabe, 1)
     xpos     = Pos(Trenner, eingabe, epos+1)
     elen     = xpos - epos -1
     If    elen < 0 Then Leave
     Keyword  =  Substr(eingabe, epos+1, elen  )
     Keyword  =  Word(Keyword, 1)

     /*    EINGABE Finden   */
     epos    = Pos(Trenner, eingabe, 1)
     if epos < 1 then leave
     xpos     = Pos(endin, eingabe, epos+1)
     elen     = xpos - epos -1
     evalue   =  Substr(eingabe, epos+1, elen  )
     eingabe  = Substr(eingabe, xpos+ 1)

     Interpret Strip(Keyword) || "_VAL" "= evalue"
   End
   If PF = 'PF03'               THEN LEAVE
   If PF = 'PF04'               THEN EXIT 4
End                                        /* End of display loop    */

Return

/* Parms f r Windows einlesen */
Get_Parms:
  If Length(Parms) = 0 Then do
     Call Help_Win
     Exit
   End

  DB            = ""
  PASSWD        = ""
  USER          = ""
  auswahl       = ""
  object        = ""
  tablespace    = ""
  database      = ""
  SYSCAT        = ""
  SYSIBM        = ""
  SYSIBMADM     = ""
  SYSPROC       = ""
  DDL           = ""
  HDDL          = ""


  ValidParms.0  = 14
  ValidParms.1  = "-DB "
  ValidParms.2  = "-AUSWAHL "
  ValidParms.3  = "-OBJECT "
  ValidParms.4  = "-TABLESPACE "
  ValidParms.5  = "-DATABASE "
  ValidParms.6  = "-SYSCAT "
  ValidParms.7  = "-SYSIBM "
  ValidParms.8  = "-SYSIBMADM "
  ValidParms.9  = "-SYSPROC "
  ValidParms.10 = "-U "
  ValidParms.11 = "-P "
  ValidParms.12 = "-HELP"
  ValidParms.13 = "-HDDL"
  ValidParms.14 = "-DDLSPUFI"


  /* Init Values */
  Do I = 1 To ValidParms.0
     ParmName = Substr(ValidParms.i, 2)
     Interpret ParmName "= ''"
   End

   /* Check Values */
Do I = 1 To ValidParms.0
  If Pos(ValidParms.i, Parms, 1) < 1 Then Iterate

  ParmName = Substr(ValidParms.i, 2)
  Interpret ParmName "= '"ParmName"'"
  If ParmName = "U " Then Do
     USER     = Get_Parms_Value(ParmName)
     SYSUID   = USER
   End
  If ParmName = "P " Then Do
     PASSWD   = Get_Parms_Value(ParmName)
     SYSPWD   = PASSWD
   End
  If ParmName = "AUSWAHL " Then Do
     AUSWAHL = Get_Parms_Value(ParmName)
     AUSWAHL = TRANSLATE(AUSWAHL)
   End
  If ParmName = "OBJECT " Then Do
     OBJECT = Get_Parms_Value(ParmName)
   End
  If ParmName = "DATABASE " Then Do
     DATABASE = Get_Parms_Value(ParmName)
   End
  If ParmName = "TABLESPACE " Then Do
     TABLESPACE = Get_Parms_Value(ParmName)
   End
  If ParmName = "SYSCAT " Then Do
     SYSCATS = Get_Parms_Value(ParmName)
   End
  If ParmName = "SYSIBM " Then Do
     SYSIBMS = Get_Parms_Value(ParmName)
   End
  If ParmName = "SYSPROC" Then Do
     SYSPROCA = Get_Parms_Value(ParmName)
   End
  If ParmName = "SYSIBMADM " Then Do
     SYSIBMA = Get_Parms_Value(ParmName)
   End

  If ParmName = "DB " Then Do
     DB       = Get_Parms_Value(ParmName)
     Location = db
     SSID     = db
   End
  If ParmName = "OUTPUT_FORMAT " Then do
     OUTPUT_FORMAT = Get_Parms_Value(ParmName)
     OUTPUT_FORMAT = Translate(OUTPUT_FORMAT)
   End
  If ParmName = "DDLSPUFI " Then Do
     DDLSPUFI = Get_Parms_Value(ParmName)
   End
 End

   /* Check Values wrong parameter */

  Do I = 1 To Words(Parms)
     found = "N"
     Do y = 1 To ValidParms.0
     If Word(Parms, i) = ValidParms.y Then Do
     Found = "Y"
     Leave
   End
   End
   If Found = "N" Then Do
      Say "Invalid Parameter " Word(Parms, i) ,
          "bitte nur korrekte Werte eingeben"

   Say "------  Program interrupted --------------"
   Call Help_Win
   Exit
    End
   End

If HDDL = "HDDL" Then lcmd = "HDDL"
 else                 lcmd = "DDL"

Return

Get_Parms_Value:
    SRCParm   = ""
    SRCVAL    = "-" || ARG(1)
 SRCVALL   = Length(SRCVAL)

 FPOS      = Pos(SRCVAL, Parms, 1)
 nxt       = FPos + 1
 NxtPos    = Pos(" -", Parms, nxt)
 If NxtPos < 1 Then Do
    NxtPos = Length(Parms) + 1
  End
 ParmLen   = NxtPos - (fpos + SRCVALL)
 DelStart  = FPos + SRCVALL

 SRCParm   = SUBSTR(ParmsO, DelStart, ParmLen)
 SRCParm   = Strip(SRCParm)

 Parms     = Delstr(Parms, DelStart, ParmLen)
 Parmso    = Delstr(Parmso, DelStart, ParmLen)
Return SRCPARM

Help_Win:
   Say "Calling Dynamsql.rex -DB <Datenbank> -..... "
   Say ""
   Say "Options  :  -DB   <Database Alias>   Name of Database     "
   Say "            -U                       Useridrd             "
   Say "            -P                       Password             "
   Say "            -AUSWAHL                 DB/TS/TB/IX/VW       "
   Say "            -OBJECT                  Object Name          "
   Say "            -DATABASE                Alle Objecte fuer DB "
   Say "            -TABLESPACE              Alle Objecte fuer TS "
   Say "            -SYSCAT                  Schema for SYSCAT    "
   Say "            -SYSIBM                  Schema for SYSIBM    "
   Say "            -SYSIBMADM               Schema for SYSIBMADM "
   Say "            -SYSPROC                 Schema for SYSPROC   "
   Say "            -HDDL                    DDL for Object und   " ,
       " untergeordnetete Objecte "
   Say "            -DDLSPUFI                Y/N 72-column DDL ",
       " Spalten ausgerichtet "
   Say "            -HELP                    This Help            "
   Say ""

Return

Getpwd:

pwd = ""
count = 0
parse value SysCurPos() with row col
do forever /* while key1Ö=d2c(13)*/
   If count = 0 Then do
     ok = SysCurPos(row,col)
     Say "enter password : "
     col = col + 16
     ok = SysCurPos(row,col)
 End
 Else  ok = SysCurPos(row,col)
   key1=SysGetKey("NoEcho")
   count = count + 1
   Select
     When key1=d2c(13) then Do   /* Enter key */
          leave
      End
     When key1=d2c(27) then Do   /* Escape */
          pwd  = ""
          key1 = ""
          leave
      End
     When  (key1=d2c(8)) then Do /* Backspace */
           if length(pwd) = 1 then do
              pwd = ""
            End
           if length(pwd) > 1 then do
              pwdL = length(pwd) - 1
              pwd  = substr(pwd, 1, pwdL)
            End
       End
      Otherwise do
            pwd = pwd || key1
        End
     End
  key1 = ""
 end
ok = SysCurPos(row,0)
return pwd

time_diff: procedure
   arg TIME1, TIME2
   if time1 = "" Then Time1 = time()
   if time2 = "" Then Time2 = time()
   SEC1 = time_to_sec(TIME1)
   SEC2 = time_to_sec(TIME2)

if SEC2 < SEC1 then SEC2 = SEC2 + 86400

ERG = SEC2-SEC1
return ERG

NextSl:
 If Datatype(Sl.0) <> "NUM" Then Do
    drop sl.
    sl.0 = 0
  End
 sl.0   = sl.0 + 1
 sli    = sl.0
 sl.sli = Arg(1)
return 0


time_to_sec: procedure
parse value arg(1) with STD ":" MIN ":" SEC
std = std * 3600
min = min * 60
retwert = std + min + sec
return retwert

CHK_DD_STMT:

  DDLISTE = ''
  Tcb = Storage(21C,4)                  /* get TCB address*/
  Tiot  = Storage(D2X(C2D(Tcb)+12),4)   /* add 12 for TIOT address */
  dd    = D2X(C2D(Tiot)+28)             /* point to 1st DD */
  ddlen = Storage(D2X(C2D(Tiot)+24),1)  /* dd length? */
  Tiot  = D2X(C2D(Tiot)+24)             /* point to 1st TIOT ddname */
  Jfcb  = Storage(D2X(X2D(Tiot)+12),3)  /* get JFCB address */

      /* go through all ddnames */
  Do while C2D(ddlen) <> 0
      /* do one ddname */
    If Storage(dd,1) <> '00'X Then Do
       If Storage(dd,8) <> '' Then do
          DDLISTE = DDLISTE STORAGE(DD,8)
       end
    End
    Tiot  = D2X(X2D(Tiot)+C2D(ddlen))    /* point to next TIOT entry */
    ddlen = Storage(Tiot,1)              /* get length of tiot entry */
    dd    = D2X(X2D(Tiot)+4)             /* point to ddname in TIOT  */
    Jfcb  = Storage(D2X(X2D(Tiot)+12),3) /* get next JFCB address    */
  End

return DDLISTE

GET_PARM:

  "EXECIO * DISKR RXPARM  (STEM RXPARMS. FINIS"

RETURN 0

DB2V12_Modlevel:

DROP AUSGABE.
RXDB2_SSID        = SSID
RXDB2_GETSTEM     = 'EINGABE.'
RXDB2_PUTSTEM     = 'AUS1.'
RXDB2_MAXROWS     = 0

EINGABE.0 = 1
EINGABE.1 = "SELECT LVU.FUNCTION_LVL AS FUNCTION_LEVEL ",
            "      , LVU.CATALOG_LVL  AS CTALOG_LEVEL    ",
            "FROM "SYSIBMS".SYSLEVELUPDATES LVU          ",
            "WHERE OPERATION_TYPE = 'F'                  ",
            "ORDER BY  LVU.EFFECTIVE_TIME  DESC          ",
            "FETCH FIRST 1 ROWS ONLY FOR FETCH ONLY      ",
            "WITH UR                                     ",
            ""

call EXECUTE_SQL

FUN_LEVEL = Aus1.1.FUNCTION_LEVEL
CAT_LEVEL = Aus1.1.CTALOG_LEVEL

parse value  CAT_LEVEL With "V" Version "R" Rel "M" ModLevel
CAT_LEVEL = "DSN" || Version || Rel || ModLevel

parse value  FUN_LEVEL With "V" Version "R" Rel "M" ModLevel
FUN_LEVEL = "DSN" || Version || Rel || ModLevel

DB2vers   = FUN_LEVEL
DB2CatL   = CAT_LEVEL

return


error: failure: syntax: novalue: halt:
say SRC.3":"
cstr = CONDITION('Condition')         /* Name of trapped condition*/
istr = CONDITION('Instruction')       /* CALL or SIGNAL           */
dstr = CONDITION('Description')       /* Description or null      */
sstr = CONDITION('Status')            /* ON, OFF, or DELAY        */
Say  'Condition  :'cstr
say  'Instruction:'istr
say  'Description:'dstr
say  'Status     :'sstr

If condition = 'HALT' Then do
   Say SRC.3 "manually abort " condition condition('C')
 End
 Else Do
   Say SRC.3 condition
   condition = condition('C')
   source = strip(sourceline(sigl),"B")
   say copies('*',79)
   say left('* 'condition' CONDITION ON LINE 'sigl' OF REXX 'rexx,78)'*'
   say left('* 'source,78)'*'
   say left('* RETURN CODE 'rc,78)'*'
   say left('* 'errortext(rc),78)'*'
   say copies('*',79)
 End
exit 100
