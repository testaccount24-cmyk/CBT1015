/* REXX */
/*******************************************************************/
/*                                                                 */
/* ProgramNAME      : ZOSB1200  (fuer zOS V11 Nr 200)              */
/* AUSRUF           : AUS ISPF                                     */
/* AUTHER           : ULRICH BRAEUER                               */
/* FUNKTION         : Auswahl Catalog Informationen                */
/*                                                                 */
/*                                                                 */
/*******************************************************************/

"DELSTACK"
ENV      = "TSO"
X        = MSG('OFF')
USER     = USERID()
SMFID    = MVSVAR('SYSNAME')
SYSUID  = ""
SYSPWD  = ""

ADDRESS ISPEXEC "CONTROL ERRORS RETURN"

ADDRESS ISPEXEC 'VGET (UDBAUSW2 UDBOBJ UDBTRACE) PROFILE'
IF UDBTRACE = 'ON' THEN TRACE R
ELSE                    TRACE

DSNRECON   = "N"
ADDRESS ISPEXEC 'VGET (DSNRECON) PROFILE'
ADDRESS ISPEXEC 'VGET (SYSUID)   PROFILE'
ADDRESS ISPEXEC 'VGET (SYSPWD)   PROFILE'


ssid     = arg(1)
location = arg(2)
lnr      = arg(3)
tabnr    = arg(4)
db2vers  = arg(5)
proclib  = arg(6)
auswahl  = UDBAUSW2
Object   = UDBOBJ
editsql  = ""
STATEMENT= ""

ADDRESS ISPEXEC 'VGET ('STRIP(SSID)'SQID) PROFILE'
db2_ssid = SSID

OK      = LISTDSI(ISPFILE "FILE")
ISPFILE = SYSDSNAME

if DSNRECON <> "Y" Then Do
   call LOAD_DSNREXX
   call CONNECT_DSNREXX
 End
OK = DISConnect_Location(location)
Version = UDBVERS
if DSNRECON =  "Y" Then Do
   call DISCONNECT_DSNREXX
   call UNLOAD_DSNREXX
 End

Call Init_Menu

DO FOREVER
   CURSQLID  = ""
   ADDRESS ISPEXEC 'VGET (CURSQLID) PROFILE'
   ADDRESS ISPEXEC 'VGET ('STRIP(DB2_SSID)'SQID) PROFILE'
   SSID_CURRENT_SQLID = value(STRIP(SSID)"SQID")
   If length(SSID_CURRENT_SQLID) > 0 then do
      CURSQLID = SSID_CURRENT_SQLID
    End
   IF CURSQLID   = "NONE" THEN CURSQLID = USERID()

   ADDRESS ISPEXEC 'VGET (UDBTRACE) PROFILE'
   IF UDBTRACE = 'ON' THEN TRACE R
   ELSE                    TRACE

   dynarea = substr(dyndata,1+(curline-1)*80) /*set dynamic variable */
   size = length(dynarea)                     /*Set scalar variable  */
   ADDRESS ISPEXEC "DISPLAY PANEL(PAUSW200)"
   COMMAND = ZCMD
   ADDRESS ISPEXEC "VGET (ZVERB,ZSCROLLA,ZSCROLLN)"
   MaxScreenLines = DYNDPTH

   /* PF Tasten Pruefen  */
   Select
      When zverb  = 'UP'   Then Do     /* Scroll up              */
           If zscrolla = 'MAX' Then Do          /*  if scroll was max */
              curline = 1                       /*    scroll to top   */
           End
           Else Do
              curline = curline - MaxScreenLines    /* (max bottom)   */
              if curline < 1 then Curline = 1
            End
           ZCMD    = ""
           Iterate
       End
      When zverb  = 'DOWN'  Then Do
           If zscrolla = 'MAX' Then Do
            curline = maxlines
           end
           Else do
            curline_Act = curline
            curline = curline + MaxScreenLines
            If curline > maxlines Then Curline = curline_Act
            if DynArea_len >= dyndata_len Then Do
               curline = 1
             End
            end
           ZCMD    = ""
           Iterate
       End
      When SUBSTR(COMMAND,1,3) = "CAN"  THEN LEAVE
      WHEN SUBSTR(COMMAND,1,5) = "ZPARM"  THEN DO
           Call ZOSZPARM ssid, lnr
           ZCMD    = ""
           Iterate
       end
      WHEN WORD(COMMAND, 1) = "CONNECT" ,
         | WORD(COMMAND, 1) = "RESET" Then do
           Select
             When Word(Command, 1) = "RESET" Then Location = ""
             When Word(Command, 2) = "RESET" Then Location = ""
             When Words(Command) = 3  Then Location = Word(Command, 3)
             When Words(Command) = 2  Then Location = Word(Command, 2)
             Otherwise                     Location = ""
            End
             If length(LOCation) > 0 Then do
                If DSNRECON  <> "Y"  Then do
                   RETC = Connect_Location(Location)
                 End
                Else Do
                   RETC = 0
                 End

                IF RETC > 0 then do
                   Location = ""
                   ZCMD     = ""
                   ITERATE
                 END
              End
             Else Do
                RETC = 4
              End

             If RETC = 0 Then Do
                parse value sqlerrp with DB_ENV 4 DB_Vers 6 DB_Rel 8
                sqlerrp_S = sqlerrp
                DB2_ENV = DB_ENV
                RETC = DISConnect_Location(Location)
                DB_ENV = DB2_ENV
                parse value sqlerrp_s with DB_ENV 4 DB_Vers 6 DB_Rel 8
                DBR    = DB_Rel
                errp   = sqlerrp_s
                proc   = proclib
                Select
                  WHEN DB_ENV = "DSN" Then NOP
                  WHEN DB_ENV = "SQL" Then DO
                       Select
                         When DB_Vers = 10 & DBR = 05  Then Do
                             CALL LUWA5200 ssid, location, LNR, ,
                                           Tabnr,  errp, proc
                          End
                         When DB_Vers = 10 Then do
                              CALL LUWA1200 ssid, location, lnr, ,
                                           Tabnr,  errp, proc
                          End
                         Otherwise do
                              CALL LUW97200 ssid, location, lnr, ,
                                           Tabnr,  errp, proc
                          End
                        End
                       Location = ""
                       RETC = DISConnect_Location(Location)
                       if DSNRECON <> "Y" Then Do
                          call DISCONNECT_DSNREXX
                          call UNLOAD_DSNREXX
                          call LOAD_DSNREXX
                          call CONNECT_DSNREXX
                        End
                   End
                  Otherwise Location = ""
                 End
              End
             Else Do
                Location = ""
            End
            ZCMD    = ""
            Iterate
       end
      WHEN WORD(COMMAND,1) = "TRACE" then do
           IF WORD(COMMAND, 2) = "ON"  Then trace('R')
           IF WORD(COMMAND, 2) = "OFF" Then trace('O')
           UDBTRACE = word(COMMAND, 2)
           UDBAUSW2 = auswahl
           UDBOBJ   = Object
           ADDRESS ISPEXEC 'VPUT (UDBTRACE) PROFILE'
           ZCMD = ''
           Iterate
       end
      WHEN SUBSTR(COMMAND,1,6) = "SQLERR"  THEN DO
           Call SQLERR
           ZCMD = ''
           Iterate
       end
      WHEN SUBSTR(COMMAND,1,5) = "SQLID"  THEN DO
           if word(command, 2) =  "" Then SETSQLID = USERID()
           Else                           SETSQLID = word(command, 2)
           interpret STRIP(SSID)'SQID ='SETSQLID
           ADDRESS ISPEXEC 'VPUT ('STRIP(SSID)'SQID) PROFILE'
           ZCMD = ''
           Iterate
       end
      WHEN SUBSTR(COMMAND,1,6) = "SCHEMA"  THEN DO
           if word(command, 2) =  "" Then CURSCHEM = USERID()
           Else                           CURSCHEM = word(command, 2)
           ADDRESS ISPEXEC 'VPUT (CURSCHEM) PROFILE'
           ZCMD = ''
           Iterate
       end
      WHEN SUBSTR(COMMAND,1,3) = "SQL"  THEN DO
           command = "SQL"
           call AUFRUF_ZOSB1910
           ZCMD = ''
           Iterate
       end
      WHEN SUBSTR(COMMAND,1,3) = "OPT"  THEN DO
           call ARXPARM1 SSID
           ZCMD = ''
           Iterate
       end
      WHEN SUBSTR(COMMAND,1,7) = "DSNTIAD"     ,
         | SUBSTR(COMMAND,1,8) = "DSNTIAUL"    ,
         | SUBSTR(COMMAND,1,7) = "DSNTEP2"     ,
         | SUBSTR(COMMAND,1,7) = "DSNTEP4"     ,
         | SUBSTR(COMMAND,1,8) = "DSNJU003"    ,
         | SUBSTR(COMMAND,1,8) = "DSNJU004"    ,
         | SUBSTR(COMMAND,1,8) = "DSN1LOGP"    ,
         | SUBSTR(COMMAND,1,8) = "DSN1PRNT"    ,
         | SUBSTR(COMMAND,1,8) = "DIAGNOSE"    ,
         | SUBSTR(COMMAND,1,8) = "DSN1SDMP"    Then Do
           EINGABE    = COMMAND
           OBJECT1    = ""
           OBJECT2    = ""
           OBJECT3    = ""
           OBJECT4    = ""
           OBJECT5    = ""
           CALL AUFRUF_ZOSB1915
           ZCMD = ''
           Iterate
       end
      WHEN SUBSTR(COMMAND,1,8) = "DSN1COPY" Then Do
           EINGABE    = COMMAND
           CALL AUFRUF_ZOSB1940
           command = ""
           ZCMD = ''
           Iterate
       end
      WHEN SUBSTR(COMMAND,1,7) = "EXPLAIN"     Then Do
           EINGABE    = COMMAND
           OBJECT1    = ""
           OBJECT2    = ""
           OBJECT3    = ""
           OBJECT4    = ""
           OBJECT5    = ""
           CALL AUFRUF_ZOSB1930
           ZCMD = ''
           Iterate
       end
      When PF                  = 'PF03' THEN LEAVE
      When PF                  = 'PF04' THEN DO
           if DSNRECON <> "Y" Then Do
              call UNLOAD_DSNREXX
              call DISCONNECT_DSNREXX
            End
           EXIT 0
       End
      Otherwise DO
           UDBAUSW2 = auswahl
           UDBOBJ   = Object
           ADDRESS ISPEXEC 'VPUT (UDBAUSW2 UDBOBJ) PROFILE'
       End
     End

   If Object = '' Then do
      Object = '%'
      MSGLINE = "Bitte Object angeben || (Wildcard *, %)"
    end

   AwOk = ZOSB1900("ZOSB1210" ,,
                   "CHKFKAW"  ,,
                    auswahl   ,,
                    lnr    )

   If AwOk = '' Then do
      MSGLINE = "Bitte richtige auswahl treffen "
      iterate
    end

   Object = Strip(Translate(Object))
   Object = TRANSLATE(Object, '%', '*')

   /* Aufruf der gewaehlten Funktion */
   MSGLINE = " "

   CALL ZOSB1210 SSID,     ,
                 EDITSQL , ,
                 LOCATION, ,
                 lnr,      ,
                 tabnr,    ,
                 DB2Vers,  ,
                 proclib,  ,
                 ISPFILE,  ,
                 AUSWAHL,  ,
                 OBJECT
   if RESULT /= 0 Then do
      MSGLINE = "Returncode ZOSB1210 = "RESULT
    end
 end

if DSNRECON <> "Y" Then Do
   call DISCONNECT_DSNREXX
   call UNLOAD_DSNREXX
 End

Return 0

/* -------------------------------------------------------------*/

LOAD_DSNREXX:
    'SUBCOM DSNREXX'
    RC2 = RXSUBCOM('ADD','DSNREXX','DSNREXX')
    IF RC2 <> 0 THEN DO
       SAY "Error on LOAD DSNREXX RC2:"RC2
       OK = SET_RC(12)
       EXIT MAXRC
     End
RETURN

UNLOAD_DSNREXX:
    S_RC = RXSUBCOM('DELETE','DSNREXX','DSNREXX')
RETURN

CONNECT_DSNREXX:
    ADDRESS DSNREXX 'CONNECT 'SSID
    IF RC <  0 THEN DO
       SAY "ERROR ON CONNECT, RC="RC ,
           "SQLCODE="SQLCODE         ,
           "SQLERRMC="SQLERRMC       ,
           ""
    OK = SET_RC(12)
    EXIT MAXRC
    END
RETURN 0

DISCONNECT_DSNREXX:
'SUBCOM DSNREXX'
If RC = 0 Then do
   ADDRESS DSNREXX "DISCONNECT"
 End
Return 0

Connect_Location:

if DSNRECON =  "Y" Then Do
   call LOAD_DSNREXX
   call CONNECT_DSNREXX
 end

ADDRESS DSNREXX "EXECSQL CONNECT TO "ARG(1)
If sqlcode =  0 then OK = DisConnect_Location(ARG(1) )
 ELSE Do
      OK = GetPWD()
      IF Datatype(OK) = 'NUM' Then Return 8
      ELSE PARSE VALUE OK WITH SYSUID SYSPWD .
  End

If Length(SYSUID) > 0 & Length(SYSPWD) > 0 Then do
   ADDRESS DSNREXX "EXECSQL CONNECT TO "ARG(1) ,
                   "USER :SYSUID USING :SYSPWD "
 End
ELSE Do
    ADDRESS DSNREXX "EXECSQL CONNECT TO "ARG(1)
 End
 IF SQLCODE <> 0 THEN DO
    MSGTXT = 'Error in CONNECT TO ' || LOCATION ||,
             ' SQLCODE: ' || SQLCODE
    SAY MSGTXT
    call SQL_ERROR
    maxrc = 8
  END
 ElSE Do
    MAXRC = 0
    parse value sqlerrp with DB_ENV 4 DB_Vers 6 DB_Rel 8 DB_Mod
    UDBVERS = DB_VERS || "." || DB_Rel || "." || DB_MOD
    select
        when DB_MOD = 0 THEN UDBVERS = UDBVERS "(CM)"
        when DB_MOD = 1 THEN UDBVERS = UDBVERS "(ENF)"
        when DB_MOD = 2 THEN UDBVERS = UDBVERS "(ENF)"
        OTHERWISE            UDBVERS = UDBVERS "(NFM)"
      end
  END

if DSNRECON =  "Y" Then Do
   call DISCONNECT_DSNREXX
   call UNLOAD_DSNREXX
 End
Return maxrc

DisConnect_Location:

if DSNRECON =  "Y" Then Do
   call LOAD_DSNREXX
   call CONNECT_DSNREXX
 end

 ADDRESS DSNREXX "EXECSQL RELEASE " arg(1)
 ADDRESS DSNREXX "EXECSQL COMMIT  "
 ADDRESS DSNREXX "EXECSQL CONNECT RESET "
 parse value sqlerrp with DB_ENV 4 DB_Vers 6 DB_Rel 8 DB_Mod
 UDBVERS = DB_VERS || "." || DB_Rel || "." || DB_MOD
 select
     when DB_MOD = 0 THEN UDBVERS = UDBVERS "(CM)"
     when DB_MOD = 1 THEN UDBVERS = UDBVERS "(ENF)"
     when DB_MOD = 2 THEN UDBVERS = UDBVERS "(ENF)"
     OTHERWISE            UDBVERS = UDBVERS "(NFM)"
   end
if DSNRECON =  "Y" Then Do
   call DISCONNECT_DSNREXX
   call UNLOAD_DSNREXX
 End

 IF SQLCODE <> 0 THEN DO
    Return 8
  END
Return 0

AUFRUF_ZOSB1910:

  object1     = ''
  object2     = ''
  tablespace  = ''
  EDIT = 'YES'

  Stmt = ZOSB1910(SSID,     ,
                 LOCATION,  ,
                 EINGABE,   ,
                 OBJECT1,   ,
                 EDIT,      ,
                 LNR )

return

AUFRUF_ZOSB1915:

  EDIT = 'YES'
  TABLE   = COLTAB

  Stmt = ZOSB1915(SSID,     ,
                 LOCATION,  ,
                 AUSWKZ,    ,
                 lnr,       ,
                 tabnr   ,  ,
                 ISPFILE ,  ,
                 DO_ALL,    ,
                 EINGABE,   ,
                 EINGABE2,  ,
                 STATEMENT, ,
                 OBJECT1,   ,
                 OBJECT2,   ,
                 OBJECT3,   ,
                 OBJECT4,   ,
                 OBJECT5,   ,
                 EDIT,      ,
                 Object_List,,
                 DB2Vers,   ,
                 proclib    )

return

AUFRUF_ZOSB1930:

  EDIT = 'YES'
  TABLE   = COLTAB

  Stmt = ZOSB1930(SSID,     ,
                 LOCATION,  ,
                 AUSWKZ,    ,
                 lnr,       ,
                 tabnr   ,  ,
                 DO_ALL,    ,
                 EINGABE,   ,
                 EINGABE2,  ,
                 STATEMENT, ,
                 OBJECT1,   ,
                 OBJECT2,   ,
                 OBJECT3,   ,
                 OBJECT4,   ,
                 OBJECT5,   ,
                 EDIT,      ,
                 Object_List,,
                 DB2Vers,   ,
                 proclib    )

return

AUFRUF_ZOSB1940:

  EDIT = 'YES'

  Stmt = ZOSB1940(SSID,     ,
                 LOCATION,  ,
                 AUSWKZ,    ,
                 lnr,       ,
                 tabnr   ,  ,
                 ISPFILE ,  ,
                 DO_ALL,    ,
                 EINGABE,   ,
                 EINGABE2,  ,
                 STATEMENT, ,
                 OBJECT1,   ,
                 OBJECT2,   ,
                 OBJECT3,   ,
                 OBJECT4,   ,
                 OBJECT5,   ,
                 EDIT,      ,
                 Object_List,,
                 DB2Vers,   ,
                 proclib    )


STATEMENT = ""

 return

SET_RC:
   IF ARG(1) > MAXRC THEN MAXRC = ARG(1)
   IF SRC.8 = 'ISPF' THEN DO
      ZISPFRC = MAXRC
      ADDRESS ISPEXEC "VPUT (ZISPFRC) SHARED"
    END
Return MAXRC

Init_Menu:

red   = '01'x                              /* Assign colors to       */
blue  = '02'x                              /*   Attribute bytes      */
green = '03'x                              /*   found in the data    */
white = '04'x
maxlines = 0                               /* set max number of lines*/
dyndata  = ''                              /* initialize data        */
cmddata  = ''                              /* initialize data        */
wl     = 21
curline = 1                                /* set current line #     */


area.0  = 32
area.1  = "%SG   Storegegroup %AL   Alias          %RO   Role         "
area.2  = "%DB   Database     %SY   Synonyme       %UA   User Auth.   "
area.3  = "%TS   TableSpace   %PL   Plans          %ST   Statements   "
area.4  = "%TB   Table        %PG   Packages       %CK   Checks       "
area.5  = "%IX   Index        %TG   Trigger        %DBRM DBRM         "
area.6  = "%VW   Views        %MQT  Mat.Query Table%PERM Perm/Mask    "
area.7  = "%CO   Columns      %RT   Routines       %SR   Strings      "
area.8  = "%DT   Datatypes    %SE   Sequences      %KT   Key Target.  "
area.9  = "%TP   Tablespart   %VO   Volumes (SG)   %TCO  Trusted Cont."
area.10 = "%IP   Indexpart    %IS   Indexspace     %SC   Schema       "
area.11 = "%IXC  Index Cleanup%PK   Primary Keys   %FK   Foreign key  "
area.12 = "%IC   ImageCopy TS %LIC  Last ICopy     %LFIC Last Full IC "
area.13 = "%VAR  Variable     %STF  Stats feedback %STP  Stats Profile"
area.14 = "%DEP  Dependencies %                    %                 "
area.15 = "%                                                          "
area.16 = "%PDDL Pending DDL  %PTB  Pending TB     %PTS  Pending TS   "
area.17 = "%PRGA Prog Auth    %XMLS XML String     %XO   XSD Objects  "
area.18 = "%LO   Locations    %IPN  IP-Names       %UN   User Names   "
area.19 = "%LU   LU Names     %UT   UTILITY        %RFS  RestFul Serv."
area.20 = "%                                                          "
area.21 = "%UA   User Auth.   %TBA  Table Auth.    %DBA  Database Auth"
area.22 = "%RA   Recource Auth%RTA  Routine Auth.  %SEA  Sequence Auth"
area.23 = "%PGA  Package Auth %PLA  Plan Austh     %SCA  Schema Auth  "
area.24 = "%                                                          "
area.25 = "%PSQL Performance SQL                                      "
area.26 = "%                                                          "
area.27 = "%Stored Procedure :                                        "
area.28 = "%BP   Bufferpool   %DSINFO DS Memberlist%ZPARM Zparm Info. "
area.29 = "%THD  Threads      %GRP    DS Group Info%DDF  DDF Info     "
area.30 = "%SSIDINFO INFO SSID%                   %                  "
area.31 = "                                                           "
area.32 = "                                                           "

MaxLines = area.0
FUNC     = "Function: "
Do ai = 1 to area.0
   parse value area.ai with '%' W1 '%' W2 '%' W3
   dynzeil = ""
   dynzeil = dynzeil || red || func || White || Substr(W1, 1, wl)
   dynzeil = dynzeil || White || Substr(W2, 1, wl)
   dynzeil = dynzeil || White || Substr(W3, 1, wl)
   dyndata = dyndata || left(dynzeil, 80, ' ' )
   FUNC    = "          "
 end

ADDRESS ISPEXEC  "VGET (ZSCREENW,ZSCREEND)"
MaxScreenLines = ZSCREEND-5
dyndata_len = Length(dyndata)
znr     = 1

Return

SQL_ERROR:

If ENV = "WIN" Then do
   say
   say '**** SQL returned the following : '
   say '     STEP        = ' STEP
   say '     SQLCODE     = ' sqlca.Sqlcode
   say '     Message   = ' SqlMsg
   say
   Return
 End

SQLC = D2X(SQLCODE,8)
SQLC = X2C(SQLC)


SQL_ERRD = ""
SQL_WARN = ""
If DB_ENV = "DSN" Then do
   Do I = 1 To 6
      SQL_ERRD = SQL_ERRD || D2C(SQLERRD.I,4)
   End
   Do I = 0 To 10
      SQL_WARN = SQL_WARN || LEFT(SQLWARN.I,1)
   End
 End

MSG_LEN = 80
SQLCA = 'SQLCA   '
SQLCA = SQLCA || X2C(00000088)
SQLCA = SQLCA || SQLC
SQLCA = SQLCA || D2C(70,2)
SQLCA = SQLCA || 'DSN     '
SQLCA = SQLCA || LEFT(SQLERRMC,70)
SQLCA = SQLCA || LEFT(SQLERRP,8)
SQLCA = SQLCA || SQL_ERRD
SQLCA = SQLCA || SQL_WARN
SQLCA = SQLCA || LEFT(SQLSTATE,5)
TIAR_MSG = D2C(MSG_LEN * 12,2) || COPIES(' ',MSG_LEN * 12)
TEXT_LEN = D2C(MSG_LEN,4)
ADDRESS ATTCHPGM 'DSNTIAR SQLCA TIAR_MSG TEXT_LEN'

If RC < 5 Then,
   Do
   If RC = 4 Then Say "DSNTIAR RC=4 Message Area Truncated"
   S_POS = 3              /* Bypass the length bytes in Message Area */
   Do I = 1 to 12         /* Loop through all lines of message */
      MSG_TEXT = Substr(tiar_msg,S_POS,MSG_LEN) /* Pick out text */
      MSG_TEXT = Strip(MSG_TEXT,T," ") /* Remove trailing blanks */
      If MSG_TEXT > " " Then Say MSG_TEXT /* Echo msg to terminal */
      Else Iterate /* Some msg lines are blank, skip */
      S_POS = S_POS + MSG_LEN /* Skip to next "line" of MSG data */
   End I
   say "SQLCODE="SQLCODE "SQLSTATE="SQLSTATE
End
Else Do
   Say "Call to DSNTIAR - Failed. RC=" RC
   Say 'SQLCODE ='SQLCODE; Say 'SQLERRM ='SQLERRMC
   Say 'SQLERRP ='SQLERRP; Say 'SQLSTATE='SQLSTATE
   XX = "SQLERRD ="
   Do I = 1 to 6 ; XX = XX||SQLERRD.I||',';End;Say XX
   XX = "SQLWARN ="
   Do I = 0 to 10; XX = XX||SQLWARN.I||',';End;Say XX
End

RETURN
