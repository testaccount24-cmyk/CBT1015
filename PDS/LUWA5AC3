/* REXX */
/*******************************************************************/
/*                                                                 */
/* ProgramNAME      : LUWA5AC3                                     */
/* AUSRUF           : AUS Program                                  */
/* AUTHER           : ULRICH BRAEUER  11.08.1999                   */
/* FUNKTION         : ANZEIGE DB2/UDB INFORMATIONEN                */
/*                                                                 */
/*                                                                 */
/* AUFRUF           : LUWA5AC3 ARG1 ARG2 ARG3 ARG4 ARG5 ARG6       */
/*                    ARG1 MUSS SEIN : SSID                        */
/*                    ARG2 MUSS SEIN : LOCATION                    */
/*                    ARG3 KANN SEIN : TS, TB, IX, VW,             */
/*                                     SY, AL, PG, TR              */
/*                    ARG4 KANN SEIN : CREATOR.NAME DES OBJEJCT    */
/*                    ARG5 KANN SEIN : TBCREATOR.TABNAME           */
/*                    ARG6 KANN SEIN : TABLESPACE NAME             */
/*                    ARG7 KANN SEIN : DATABASE NAME               */
/*   ERKLAERUNG ZU ARG4, ARG5, ARG6 |||                            */
/*   ES IST MOEGLICH Z.B BEI DER FUNKTION IX ZU SAGEN, ICH WILL    */
/*   ALLE INDEXES ZU EINER TABLE, ODER ZU EINEM TABLESPACE ODER    */
/*   ZU EINER DATENBANK.                                           */
/*   SINNFOLL IST ES AUCH ZU SAGEN, ICH WILL WISSEN, WELCHE PLAENE */
/*   ODER PACKAGES AUF EINEN TABLESPCE GEHEN, Z.B. FUER REORGS     */
/*   MIT ANSCHLIESENDEM REBIND. ||                                 */
/*                                                                 */
/*                                                                 */
/*******************************************************************/

ENV = "WIN"
ENV = "TSO"
USER = USERID()
SYSIBMS = "SYSIBM"
SYSCATS = "SYSCAT"
SYSIBMA = "SYSIBMADM"
SYSPROCA= "SYSPROC"
DSNRECON   = "N"
SYSUID    = ""
SYSPWD    = ""
MAXRows   = 0
MAXFetch  = "FETCH FIRST 100 ROWS ONLY"
MAXFetch  = ""
MAXBLOBS  = '10K'

If Env = 'TSO' Then do
   X = MSG('OFF')
   ADDRESS ISPEXEC 'VGET (DSNRECON) PROFILE'
   ADDRESS ISPEXEC 'VGET (UDBTRACE) PROFILE'
   ADDRESS ISPEXEC 'VGET (SYSIBMS) PROFILE'
   ADDRESS ISPEXEC 'VGET (SYSCATS) PROFILE'
   ADDRESS ISPEXEC 'VGET (SYSIBMA) PROFILE'
   ADDRESS ISPEXEC 'VGET (SYSPROCA) PROFILE'
   ADDRESS ISPEXEC 'VGET (MAXROWS)  PROFILE'
   ADDRESS ISPEXEC 'VGET (MAXBLOBS) PROFILE'
   ADDRESS ISPEXEC 'VGET (SYSUID)   PROFILE'
   ADDRESS ISPEXEC 'VGET (SYSPWD)   PROFILE'
   ADDRESS ISPEXEC  "VGET (ZSCREENW,ZSCREEND)"
   IF UDBTRACE = 'ON' THEN TRACE I
   ELSE                    TRACE
 End
If MAXROWS > 0 then do
   MAXFetch = "FETCH FIRST "MAXROWS" ROWS ONLY"
 End

DDLTEXT = ""
DB2_SSID       = ARG(1)  /* SSID      */
DB2_EDITSQL    = ARG(2)  /* SSID      */
DB2_LOC        = ARG(3)  /* LOCATION  */
lnr            = ARG(4)  /* TABLENR   */
tabnr          = ARG(5)  /* TABLENR   */
DB2_FUNKTION   = ARG(6)  /* FUNKTION  */
SUCH1          = ARG(7)  /* OBJECT CREATOR/NAME */
SUCH2          = ARG(8)  /* TABLE  CREATOR/NAME */
SUCH3          = ARG(9)  /* TABLE  CREATOR/NAME */
SUCH4          = ARG(10) /* TABLE  CREATOR/NAME */
SUCH5          = ARG(11) /* TABLE  CREATOR/NAME */
DB2_TABLESPACE = ARG(12)
DB2_DATABASE   = ARG(13)
DB2_LIST_OBJ   = ARG(14)
DB2_CREATOR1   = ""
DB2_NAME1      = ""
DB2_CREATOR2   = ""
DB2_NAME2      = ""
DB2_CREATOR3   = ""
DB2_NAME3      = ""
DB2_CREATOR4   = ""
DB2_NAME4      = ""
DB2_CREATOR5   = ""
DB2_NAME5      = ""
DB2_TYPE       = ""
LUWTABLE       = "LUWTB"tabnr
COLTAB         = "COLTB"tabnr
BRTAB          = "BROWS"tabnr
SELTAB         = "SELTB"tabnr
TBCOL          = "TBCOL"tabnr
ROWNR          = 0
COLTAB_BUILD   = "Y"

IF POS('.', SUCH1) > 0 THEN
   PARSE VALUE SUCH1 WITH DB2_CREATOR1 '.' DB2_NAME1
 ELSE DB2_NAME1 = SUCH1

IF POS('.', SUCH2) > 0 THEN
   PARSE VALUE SUCH2 WITH DB2_CREATOR2 '.' DB2_NAME2
 ELSE DB2_NAME2 = SUCH2

IF POS('.', SUCH3) > 0 THEN
   PARSE VALUE SUCH3 WITH DB2_CREATOR3 '.' DB2_NAME3
 ELSE DB2_NAME3 = SUCH3

IF POS('.', SUCH4) > 0 THEN
   PARSE VALUE SUCH4 WITH DB2_CREATOR4 '.' DB2_NAME4
 ELSE DB2_NAME4 = SUCH4

IF POS('.', SUCH5) > 0 THEN
   PARSE VALUE SUCH5 WITH DB2_CREATOR5 '.' DB2_NAME5
 ELSE DB2_NAME5 = SUCH5

RXDB2_SSID        = DB2_SSID
RXDB2_GETSTEM     = 'EINGABE.'
RXDB2_PUTSTEM     = 'AUSGABE.'
ANZAHL_ROWS       = 0

If DSNRECON = "Y" Then Do
   Call Load_DSNREXX_AC3
 End

/* Ausnamen die nur daten per return weiter geben */
SELECT
   WHEN DB2_FUNKTION = "STFCOLS" THEN NOP
   WHEN DB2_FUNKTION = "SQLEX"   THEN NOP
   Otherwise Do
             CALL OPEN_TABLE
             Call OPEN_TBCOL
    End
  end

CONOK = DISCONNECT_LOCATION_AC3(DB2_LOC)
CONOK = CONNECT_LOCATION_AC3(DB2_LOC)

LCMD = "   "

SELECT
   WHEN DB2_FUNKTION = "SG"     THEN CALL LIST_SG     /* Storage GRP  */
   WHEN DB2_FUNKTION = "SGPATH" THEN CALL LIST_SG_PATH  /* SG PATH    */
   WHEN DB2_FUNKTION = "TS"     THEN CALL LIST_TS     /* TABLE SPACE  */
   WHEN DB2_FUNKTION = "TB"     THEN CALL LIST_TB     /* TABLE        */
   WHEN DB2_FUNKTION = "REMARKS" THEN CALL LIST_REMARKS
   WHEN DB2_FUNKTION = "DP"     THEN CALL LIST_DP     /* Data Part    */
   WHEN DB2_FUNKTION = "IX"     THEN CALL LIST_IX     /* INDEX        */
   WHEN DB2_FUNKTION = "KC"     THEN CALL LIST_KC     /* Key Columns  */
   WHEN DB2_FUNKTION = "IA"     THEN CALL LIST_IA     /* Index Auth   */
   WHEN DB2_FUNKTION = "PK"     THEN CALL LIST_PK     /* PRIMARY KEYS */
   WHEN DB2_FUNKTION = "VW"     THEN CALL LIST_VW     /* VIEW         */
   WHEN DB2_FUNKTION = "MQT"    THEN CALL LIST_MQT    /* MQ Table     */
   WHEN DB2_FUNKTION = "SY"     THEN CALL LIST_SY     /* SYNONYM      */
   WHEN DB2_FUNKTION = "AL"     THEN CALL LIST_SY     /* ALIAS        */
   WHEN DB2_FUNKTION = "PG"     THEN CALL LIST_PG     /* PACKAGES     */
   WHEN DB2_FUNKTION = "TG"     THEN CALL LIST_TG     /* TRIGGER      */
   WHEN DB2_FUNKTION = "DT"     THEN CALL LIST_DT     /* DATATYPES    */
   WHEN DB2_FUNKTION = "BP"     THEN CALL LIST_BP     /* BUFFER POOL  */
   WHEN DB2_FUNKTION = "DA"     THEN CALL LIST_DA     /* DBAUTH      */
   WHEN DB2_FUNKTION = "TA"     THEN CALL LIST_TA     /* TAB.AUTH.T/V*/
   WHEN DB2_FUNKTION = "FK"     THEN CALL LIST_FK     /* FORREING KEY */
   WHEN DB2_FUNKTION = "NN"     THEN CALL LIST_NN     /* NICKNAMES    */
   WHEN DB2_FUNKTION = "TABOPT" THEN CALL LIST_TABOPT /* TABLEOPTIONS */
   WHEN DB2_FUNKTION = "UOPT"   THEN CALL LIST_UOPT /* Useroptions  */
   WHEN DB2_FUNKTION = "SE"     THEN CALL LIST_SE     /* Sequence     */
   WHEN DB2_FUNKTION = "FN"     THEN CALL LIST_FN     /* Function     */
   WHEN DB2_FUNKTION = "PR"     THEN CALL LIST_PR     /* Procedures   */
   WHEN DB2_FUNKTION = "PPARM"  THEN CALL LIST_PPARM  /* Proc.Parms   */
   WHEN DB2_FUNKTION = "RT"     THEN CALL LIST_RT     /* Routines     */
   WHEN DB2_FUNKTION = "WL"     THEN CALL LIST_WL     /* WORKLOADS    */
   WHEN DB2_FUNKTION = "CK"     THEN CALL LIST_CK     /* Checks       */
   WHEN DB2_FUNKTION = "VA"     THEN CALL LIST_VA     /* Variables    */
   WHEN DB2_FUNKTION = "VADEP"  THEN CALL LIST_VADEP  /* Variables    */
   WHEN DB2_FUNKTION = "VAAUTH" THEN CALL LIST_VAAUTH
   WHEN DB2_FUNKTION = "COLS"   THEN CALL LIST_COLS /* COLUMNS TB/VW*/
   WHEN DB2_FUNKTION = "ID"     THEN CALL LIST_COLS_IDENTITY
   WHEN DB2_FUNKTION = "CO"     THEN CALL LIST_COLS /* COLUMNS TB/VW*/
   WHEN DB2_FUNKTION = "COPT"   THEN CALL LIST_COPT /* COLOPTIONS */
   WHEN DB2_FUNKTION = "CG"     THEN CALL LIST_CG /* Colgroups  */
   WHEN DB2_FUNKTION = "CGCOLS" THEN CALL LIST_CGCOLS  /* Colgroups C */
   WHEN DB2_FUNKTION = "STMT"   THEN CALL LIST_STMT /* PG STATEMENT */
   WHEN DB2_FUNKTION = "ST"     THEN CALL LIST_STMT /* PG STATEMENT */
   WHEN DB2_FUNKTION = "SV"     THEN CALL LIST_SV   /* SERVER       */
   WHEN DB2_FUNKTION = "WR"     THEN CALL LIST_WR   /* WRAPPER      */
   WHEN DB2_FUNKTION = "EV"     THEN CALL LIST_EV   /* Events       */
   WHEN DB2_FUNKTION = "EM"     THEN CALL LIST_EM   /* Event Monitor*/
   WHEN DB2_FUNKTION = "ET"     THEN CALL LIST_ET   /* Event Tables */
   WHEN DB2_FUNKTION = "D"      THEN CALL LIST_DIS  /* DISP.      */
   WHEN DB2_FUNKTION = "TSPI"   THEN CALL LIST_TSPI /* TSP Info   */
   WHEN DB2_FUNKTION = "REG"    THEN CALL LIST_REG  /* DB2SET   */
   WHEN DB2_FUNKTION = "DBCFG"  THEN CALL LIST_DBCFG  /* DB CFG   */
   WHEN DB2_FUNKTION = "DBMCFG" THEN CALL LIST_DBMCFG /* DBM CFG   */
   WHEN DB2_FUNKTION = "LICM"   THEN CALL LIST_LICM   /* LICM      */
   WHEN DB2_FUNKTION = "LEVEL"  THEN CALL LIST_LEVEL  /* LEVEL     */
   WHEN DB2_FUNKTION = "SI"     THEN CALL LIST_SI   /* System Info*/
   WHEN DB2_FUNKTION = "RO"     THEN CALL LIST_RO   /* ROLS       */
   WHEN DB2_FUNKTION = "OI"     THEN CALL LIST_OI   /* Object Invalid */
   WHEN DB2_FUNKTION = "UT"     THEN CALL LIST_UT   /* Utilities      */
   WHEN DB2_FUNKTION = "HIST"   THEN CALL LIST_HIST /* HISTORY        */
   WHEN DB2_FUNKTION = "MSG"    THEN CALL LIST_MSG  /* Message Log    */
   WHEN DB2_FUNKTION = "LOCKS"  THEN CALL LIST_LOCKS  /* LOCKS        */
   WHEN DB2_FUNKTION = "APPLI"  THEN CALL LIST_APPLI  /* Appl Info    */
   WHEN DB2_FUNKTION = "TBS"    THEN CALL LIST_TBS    /* Tablestatus  */
   WHEN DB2_FUNKTION = "CUTIL"  THEN CALL LIST_CUTIL  /* Tablestatus  */
   WHEN DB2_FUNKTION = "FEAT"   THEN CALL LIST_FEAT   /* FEATURE      */
   WHEN DB2_FUNKTION = "USER"   THEN CALL LIST_USER   /* USERS        */
   WHEN DB2_FUNKTION = "PRIV"   THEN CALL LIST_PRIV   /* Privileges   */
   WHEN DB2_FUNKTION = "LG"     THEN CALL LIST_LG     /* List Groups  */
   WHEN DB2_FUNKTION = "LOCKHOLD" THEN CALL LIST_LOCKHOLD
   WHEN DB2_FUNKTION = "SC"      THEN CALL LIST_SC    /* List Schema  */
   WHEN DB2_FUNKTION = "MEM"     THEN CALL LIST_MEM   /* List Member  */
   WHEN DB2_FUNKTION = "PERM"    THEN CALL LIST_PERM  /* List Permiss.*/
   WHEN DB2_FUNKTION = "VER"     THEN CALL LIST_VER   /* List Permiss.*/
   WHEN DB2_FUNKTION = "NG"      THEN CALL LIST_NG    /* Nodegroup    */
   WHEN DB2_FUNKTION = "DPG"     THEN CALL LIST_DPG   /* PartitionGrp */
   WHEN DB2_FUNKTION = "DB"      THEN CALL LIST_DB    /* Database     */
   WHEN DB2_FUNKTION = "TSA"     THEN CALL LIST_TSA   /* TS AUTH      */
   WHEN DB2_FUNKTION = "TBA"     THEN CALL LIST_TBA   /* TB AUTH      */
   WHEN DB2_FUNKTION = "COLA"    THEN CALL LIST_COLA  /* COL AUTH     */
   WHEN DB2_FUNKTION = "DBA"     THEN CALL LIST_DBA   /* DB  AUTH     */
   WHEN DB2_FUNKTION = "IXA"     THEN CALL LIST_IXA   /* IX  AUTH     */
   WHEN DB2_FUNKTION = "LIBA"    THEN CALL LIST_LIBA  /* IX  AUTH     */
   WHEN DB2_FUNKTION = "MODA"    THEN CALL LIST_MODA  /* IX  AUTH     */
   WHEN DB2_FUNKTION = "PGA"     THEN CALL LIST_PGA   /* IX  AUTH     */
   WHEN DB2_FUNKTION = "PTHA"    THEN CALL LIST_PTHA  /* IX  AUTH     */
   WHEN DB2_FUNKTION = "ROA"     THEN CALL LIST_ROA   /* IX  AUTH     */
   WHEN DB2_FUNKTION = "RTA"     THEN CALL LIST_RTA   /* IX  AUTH     */
   WHEN DB2_FUNKTION = "SCA"     THEN CALL LIST_SCA   /* IX  AUTH     */
   WHEN DB2_FUNKTION = "SEA"     THEN CALL LIST_SEA   /* IX  AUTH     */
   WHEN DB2_FUNKTION = "SUGA"    THEN CALL LIST_SUGA  /* IX  AUTH     */
   WHEN DB2_FUNKTION = "VARA"    THEN CALL LIST_VARA  /* IX  AUTH     */
   WHEN DB2_FUNKTION = "WLA"     THEN CALL LIST_WLA   /* IX  AUTH     */
   WHEN DB2_FUNKTION = "XSRA"    THEN CALL LIST_XSRA  /* IX  AUTH     */
   WHEN DB2_FUNKTION = "AID"     THEN CALL LIST_AID   /* IX  AUTH     */
   WHEN DB2_FUNKTION = "XSR"     THEN CALL LIST_XSR   /* XSR Objects  */
   WHEN DB2_FUNKTION = "RTS"     THEN CALL LIST_RTS   /*Realtime STATS*/
   WHEN DB2_FUNKTION = "BR"      THEN Call LIST_BR   /* BROWSE TABLE */
   WHEN DB2_FUNKTION = "RCK"     THEN CALL LIST_RCK   /*Reorg Check   */
   WHEN DB2_FUNKTION = "SPACE"   THEN Call LIST_SPACE   /* TB SIZE   */
   WHEN DB2_FUNKTION = "SQLEX"   THEN CALL LIST_SQLEX /* EXECUTE SQL  */
   OTHERWISE NOP
 END

CALL CLOSE_TABLE
CONOK = DISCONNECT_LOCATION_AC3(DB2_LOC)
If DSNRECON = "Y" Then Do
   Call UNLoad_DSNREXX_AC3
 End

IF ANZAHL_ROWS = 0 Then DDLTEXT = ""

RETURN DDLTEXT

LIST_SG:
CNR   = 1           /*  CURSOR NUMMER FUER TABLESPACE   */
SNR   = CNR

WHERELIST    = ""
CALL MAKE_WHERELIST "SG.SGNAME", DB2_NAME1
CALL MAKE_WHERELIST "SG.SGID", DB2_NAME2, "NUM"


SQLSTMT    = "SELECT SG.SGNAME                   " ,
             "     , SG.SGID                     " ,
             "     , SG.DEFAULTSG                " ,
             "     , SG.OVERHEAD                 " ,
             "     , SG.DEVICEREADRATE           " ,
             "     , SG.WRITEOVERHEAD            " ,
             "     , SG.DEVICEWRITERATE          " ,
             "     , SG.DATATAG                  " ,
             "     , SG.OWNER                    " ,
             "     , SG.CREATE_TIME              " ,
             "     , SG.REMARKS                  " ,
             "  FROM "SYSCATS".STOGROUPS SG      " ,
             WHERELIST ,
             "ORDER BY SG.SGNAME, SG.SGID        " ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 25           /* SGNAME                    */
OUTSQLDA.9.SQLLEN   = 10           /* OWNER                     */

DDLTEXT = DDLTEXT "*UZ*"
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
   SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
   Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End

   IF IWRITEOVERHEAD   < 0 Then WRITEOVERHEAD   = 0
   IF IDEVICEWRITERATE < 0 Then DEVICEWRITERATE = 0
   IF IREMARKS         < 0 Then REMARKS         = ''

   LZEILE  = ''
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN


LIST_SG_PATH:
CNR   = 1           /*  CURSOR NUMMER FUER TABLESPACE   */
SNR   = CNR

WHERELIST    = ""
CALL MAKE_WHERELIST "SG.STORAGE_GROUP_NAME", DB2_NAME1
CALL MAKE_WHERELIST "SG.STORAGE_GROUP_ID", DB2_NAME2, "NUM"


SQLSTMT    = "SELECT SG.STORAGE_GROUP_NAME       " ,
             "     , SG.DB_STORAGE_PATH_ID       " ,
             "     , SG.STORAGE_GROUP_ID         " ,
             "     , SG.DBPARTITIONNUM           " ,
             "     , SG.DB_STORAGE_PATH          " ,
             "     , SG.DB_STORAGE_PATH_WITH_DPE " ,
             "     , SG.DB_STORAGE_PATH_STATE    " ,
             "     , SG.FS_ID                    " ,
             "     , SG.FS_TOTAL_SIZE            " ,
             "     , SG.FS_USED_SIZE             " ,
             "     , SG.STO_PATH_FREE_SIZE       " ,
             "  FROM TABLE(ADMIN_GET_STORAGE_PATHS(NULL, NULL)) SG " ,
             WHERELIST ,
             "ORDER BY SG.STORAGE_GROUP_NAME, SG.STORAGE_GROUP_ID ",
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 25           /* NAME                      */
OUTSQLDA.5.SQLLEN   = 30           /* NAME                      */
OUTSQLDA.6.SQLLEN   = 30           /* DB_STORAGE_PATH_WITH_DPE  */

DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || LEFT("SGNAME", 24)
DDLTEXT = DDLTEXT RIGHT("ID", 4,' ')
DDLTEXT = DDLTEXT RIGHT("PARTNUM", 7,' ')
DDLTEXT = DDLTEXT LEFT("SPATH", 29,' ')
DDLTEXT = DDLTEXT RIGHT("DBSID", 5,' ')
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
   SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
   Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End

   IF ISTORAGE_GROUP_NAME        < 0 THEN STORAGE_GROUP_NAME    = ''
   IF ISTORAGE_GROUP_ID          < 0 THEN STORAGE_GROUP_ID      = 0
   IF IDBPARTITIONNUM            < 0 THEN DBPARTITIONNUM        = 0
   IF IDB_STORAGE_PATH           < 0 THEN DB_STORAGE_PATH       = ''
   IF IDB_STORAGE_PATH_WITH_DPE  < 0 THEN DB_STORAGE_PATH_WITH_DPE = ''
   IF IDB_STORAGE_PATH_STATE     < 0 THEN DB_STORAGE_PATH_STATE = ''
   IF IDB_STORAGE_PATH_ID        < 0 THEN DB_STORAGE_PATH_ID    = 0
   IF IFS_ID                     < 0 THEN FS_ID                 = 0
   IF IFS_TOTAL_SIZE             < 0 THEN FS_TOTAL_SIZE         = 0
   IF IFS_USED_SIZE              < 0 THEN FS_USED_SIZE          = 0
   IF ISTO_PATH_FREE_SIZE        < 0 THEN STO_PATH_FREE_SIZE    = 0


   LZEILE  = ''
   LZEILE = LZEILE || LEFT(STORAGE_GROUP_NAME, 24)
   LZEILE = LZEILE RIGHT(STORAGE_GROUP_ID, 4, ' ')
   LZEILE = LZEILE RIGHT(DBPARTITIONNUM, 7,' ')
   LZEILE = LZEILE LEFT(DB_STORAGE_PATH  , 29)
   LZEILE = LZEILE RIGHT(DB_STORAGE_PATH_ID, 4,'0')
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

LIST_TS:
CNR   = 1           /*  CURSOR NUMMER FUER TABLESPACE   */
SNR   = CNR

WHERELIST    = ""
CALL MAKE_WHERELIST "TS.DEFINER", DB2_CREATOR1
CALL MAKE_WHERELIST "TS.TBSPACE", DB2_NAME1
CALL MAKE_WHERELIST "TS.TBSPACEID", DB2_NAME2, "NUM"
CALL MAKE_WHERELIST "TS.BUFFERPOOLID", DB2_NAME3, "NUM"
CALL MAKE_WHERELIST "TS.SGNAME", DB2_NAME4

SQLSTMT    = "SELECT  TS.TBSPACE            " ,
             "      , TS.DEFINER            " ,
             "      , TS.CREATE_TIME        " ,
             "      , TS.TBSPACEID          " ,
             "      , TS.BUFFERPOOLID       " ,
             "      , TS.SGNAME             " ,
             "      , TS.SGID               " ,
             "      , TS.TBSPACETYPE        " ,
             "      , TS.DATATYPE           " ,
             "      , TS.EXTENTSIZE         " ,
             "      , TS.PREFETCHSIZE       " ,
             "      , TS.OVERHEAD           " ,
             "      , TS.TRANSFERRATE       " ,
             "      , TS.PAGESIZE           " ,
             "      , TS.NGNAME             " ,
             "      , TS.DATATAG            " ,
             "      , TS.EFFECTIVEPREFETCHSIZE" ,
             "      , TS.DROP_RECOVERY      " ,
             "      , BP.BPNAME             " ,
             "      , TSU.TBSP_STATE        " ,
             "      , TSU.TBSP_UTILIZATION_PERCENT ",
             "      , TSU.TBSP_USING_AUTO_STORAGE  ",
             "      , TSU.TBSP_AUTO_RESIZE_ENABLED ",
             "      , TSU.TBSP_MAX_SIZE            ",
             "      , TSU.TBSP_INCREASE_SIZE       ",
             "      , TSU.TBSP_INCREASE_SIZE_PERCENT",
             "      , SNAPTS.FS_CACHING          ",
             "      , TS.REMARKS            " ,
             "FROM  "SYSCATS".TABLESPACES TS" ,
             "INNER JOIN "SYSCATS".BUFFERPOOLS BP  " ,
             "      ON  TS.BUFFERPOOLID = BP.BUFFERPOOLID " ,
             "INNER JOIN "SYSIBMA".TBSP_UTILIZATION TSU " ,
             "      ON  TS.TBSPACE   = TSU.TBSP_NAME    " ,
             "      AND TS.TBSPACEID = TSU.TBSP_ID      " ,
             "LEFT OUTER JOIN "SYSIBMA".SNAPTBSP  SNAPTS      ",
             "ON  SNAPTS.TBSP_ID = TS.TBSPACEID               ",
             WHERELIST ,
             "ORDER BY TS.TBSPACE, TS.DEFINER  " ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 18           /* TBSPACE                   */
OUTSQLDA.2.SQLLEN   = 15           /* DEFINER                   */
OUTSQLDA.6.SQLLEN   = 15           /* SGNAME                    */
OUTSQLDA.15.SQLLEN  = 15           /* NGNAME                    */
OUTSQLDA.19.SQLLEN  = 15           /* BPNAME                    */
OUTSQLDA.20.SQLLEN  = 15           /* TBSP_STATE                */
OUTSQLDA.28.SQLLEN  = 30           /* REMARKS                   */

DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || LEFT("TBSPACE", 22)
DDLTEXT = DDLTEXT RIGHT("ID", 3,' ')
DDLTEXT = DDLTEXT RIGHT("TY", 2,' ')
DDLTEXT = DDLTEXT RIGHT("DT", 2,' ')
DDLTEXT = DDLTEXT RIGHT("EXTS", 4,' ')
DDLTEXT = DDLTEXT RIGHT("PGSZ", 5,' ')
DDLTEXT = DDLTEXT RIGHT("BPID", 4,' ')
DDLTEXT = DDLTEXT LEFT("STATUS",10,' ')
DDLTEXT = DDLTEXT RIGHT("USED",6,' ')
DDLTEXT = DDLTEXT RIGHT("AS",2,' ')
DDLTEXT = DDLTEXT RIGHT("AR",2,' ')
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
   SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
   Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   If iTBSP_USING_AUTO_STORAGE < 0 Then TBSP_USING_AUTO_STORAGE  = ' '
   If iTBSP_AUTO_RESIZE_ENABLED< 0 Then  TBSP_AUTO_RESIZE_ENABLED = ' '
   If iTBSP_INCREASE_SIZE_PERCENT < 0 Then
      TBSP_INCREASE_SIZE_PERCENT = ' '
   If iSGNAME                  < 0 Then  SGNAME                   = ' '
   If IREMARKS                 < 0 Then  REMARKS                  = ' '
   LZEILE  = ''
   LZEILE = LZEILE || LEFT(TBSPACE, 22)
   LZEILE = LZEILE RIGHT(TBSPACEID, 3,'0')
   LZEILE = LZEILE RIGHT(TBSPACETYPE, 2,' ')
   LZEILE = LZEILE RIGHT(DATATYPE, 2,' ')
   LZEILE = LZEILE RIGHT(EXTENTSIZE, 4,'0')
   LZEILE = LZEILE RIGHT(PAGESIZE, 5,' ')
   LZEILE = LZEILE RIGHT(BUFFERPOOLID, 4,'0')
   LZEILE = LZEILE LEFT(TBSP_STATE, 10,' ')
   LZEILE = LZEILE RIGHT(TBSP_UTILIZATION_PERCENT, 6, ' ')
   LZEILE = LZEILE RIGHT(TBSP_USING_AUTO_STORAGE,  2, ' ')
   LZEILE = LZEILE RIGHT(TBSP_AUTO_RESIZE_ENABLED, 2, ' ')
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

LIST_CUTIL:
CNR   = 1           /*  CURSOR NUMMER FUER TABLESPACE   */
SNR   = CNR

WHERELIST    = ""
CALL MAKE_WHERELIST "TSU.TBSP_NAME", DB2_NAME1
CALL MAKE_WHERELIST "TSU.TBSP_ID", DB2_NAME2, "NUM"
CALL MAKE_WHERELIST "TSU.CONTAINER_ID", DB2_NAME3, "NUM"


SQLSTMT    = "SELECT TSU.TBSP_NAME          " ,
             "     , TSU.TBSP_ID            " ,
             "     , TSU.CONTAINER_NAME     " ,
             "     , TSU.CONTAINER_ID       " ,
             "     , TSU.CONTAINER_TYPE     " ,
             "     , TSU.TOTAL_PAGES        " ,
             "     , TSU.USABLE_PAGES       " ,
             "     , TSU.ACCESSIBLE         " ,
             "     , TSU.STRIPE_SET         " ,
             "     , TSU.FS_ID              " ,
             "     , TSU.FS_TOTAL_SIZE_KB   " ,
             "     , TSU.FS_USED_SIZE_KB    " ,
             "     , TSU.DBPARTITIONNUM     " ,
             "FROM "SYSIBMA".CONTAINER_UTILIZATION TSU" ,
             WHERELIST ,
             "ORDER BY TSU.TBSP_NAME, TSU.CONTAINER_ID " ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 15           /* TBSP_NAME                 */
OUTSQLDA.3.SQLLEN   = 50           /* CONTAINER_NAME            */
OUTSQLDA.5.SQLLEN   = 15           /* CONTAINER_TYPE            */

DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || LEFT("TBSPACE", 15)
DDLTEXT = DDLTEXT RIGHT("ID", 3,' ')
DDLTEXT = DDLTEXT RIGHT("CID", 3,' ')
DDLTEXT = DDLTEXT LEFT("TYPE", 15,' ')
DDLTEXT = DDLTEXT RIGHT("TOTPAG", 6,' ')
DDLTEXT = DDLTEXT RIGHT("USEPAG", 6,' ')
DDLTEXT = DDLTEXT LEFT("A", 1,' ')
DDLTEXT = DDLTEXT LEFT("Name", 16,' ')
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
   SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
   Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE  = ''
   LZEILE = LZEILE || LEFT(TBSP_NAME, 15)
   LZEILE = LZEILE RIGHT(TBSP_ID, 3,'0')
   LZEILE = LZEILE RIGHT(CONTAINER_ID, 3, '0')
   LZEILE = LZEILE LEFT(CONTAINER_TYPE, 15, ' ')
   LZEILE = LZEILE RIGHT(TOTAL_PAGES, 6,'0')
   LZEILE = LZEILE RIGHT(USABLE_PAGES, 6,'0')
   LZEILE = LZEILE RIGHT(ACCESSIBLE, 1,'0')
   LZEILE = LZEILE LEFT(CONTAINER_NAME, 16, ' ')
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

LIST_REG:

WHERELIST    = ""

EINGABE.0  = 1
SQLSTMT    = "SELECT  DBPARTITIONNUM                    " ,
             "       ,REG_VAR_NAME                      " ,
             "       ,REG_VAR_VALUE                     " ,
             "       ,IS_AGGREGATE                      " ,
             "       ,AGGREGATE_NAME                    " ,
             "       ,LEVEL                             " ,
             "FROM  "SYSIBMA".REG_VARIABLES             " ,
             WHERELIST ,
             "ORDER BY REG_VAR_NAME ",
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.2.SQLLEN   = 20           /* REG_VAR_NAME              */
OUTSQLDA.3.SQLLEN   = 70           /* REG_VAR_VALUE             */
OUTSQLDA.5.SQLLEN   = 40           /* AGGREGATE_NAME            */

DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || SUBSTR("NAME", 1, 20)
DDLTEXT = DDLTEXT    SUBSTR("VALUE", 1, 48)
DDLTEXT = DDLTEXT    SUBSTR("LV", 1, 2)
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE  = ''
   LZEILE = LZEILE || SUBSTR(REG_VAR_NAME, 1, 20)
   LZEILE = LZEILE SUBSTR(REG_VAR_VALUE, 1, 48)
   LZEILE = LZEILE SUBSTR(LEVEL, 1, 2)
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

LIST_DBCFG:

WHERELIST    = ""

EINGABE.0  = 1
SQLSTMT    = "SELECT  NAME                              " ,
             "       ,VALUE                             " ,
             "       ,VALUE_FLAGS                       " ,
             "FROM  "SYSIBMA".DBCFG                     " ,
             WHERELIST ,
             "ORDER BY NAME              " ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 20           /* NAME                      */
OUTSQLDA.2.SQLLEN   = 40           /* VALUE                     */
OUTSQLDA.3.SQLLEN   = 10           /* VALUE_FLAGS               */

DDLTEXT = DDLTEXT "*UZ*"
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE  = ''
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

LIST_DBMCFG:

WHERELIST    = ""

EINGABE.0  = 1
SQLSTMT    = "SELECT  NAME                              " ,
             "       ,VALUE                             " ,
             "       ,VALUE_FLAGS                       " ,
             "FROM  "SYSIBMA".DBMCFG                    " ,
             WHERELIST ,
             "ORDER BY NAME              " ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 21           /* NAME                      */
OUTSQLDA.2.SQLLEN   = 50           /* VALUE                     */
OUTSQLDA.3.SQLLEN   = 10           /* VALUE_FLAGS               */

DDLTEXT = DDLTEXT "*UZ*"
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE  = ''
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

LIST_LICM:

WHERELIST    = ""

EINGABE.0  = 1
SQLSTMT    = "SELECT  INSTALLED_PROD                    " ,
             "       ,INSTALLED_PROD_FULLNAME           " ,
             "       ,LICENSE_INSTALLED                 " ,
             "       ,PROD_RELEASE                      " ,
             "       ,LICENSE_TYPE                      " ,
             "FROM  "SYSIBMA".ENV_PROD_INFO             " ,
             WHERELIST ,
             "ORDER BY INSTALLED_PROD    " ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 10           /* INSTALLED_PROD            */
OUTSQLDA.2.SQLLEN   = 41           /* INSTALLED_PROD_FULLNAME   */
OUTSQLDA.3.SQLLEN   = 17           /* LICENSE_INSTALLED         */
OUTSQLDA.4.SQLLEN   = 12           /* PROD_RELEASE              */
OUTSQLDA.5.SQLLEN   = 40           /* LICENSE_TYPE              */

DDLTEXT = DDLTEXT "*UZ*"
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE  = ''
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

LIST_LEVEL:

WHERELIST    = ""

EINGABE.0  = 1
SQLSTMT    = "SELECT  INST_NAME                         " ,
             "       ,IS_INST_PARTITIONABLE             " ,
             "       ,NUM_DBPARTITIONS                  " ,
             "       ,INST_PTR_SIZE                     " ,
             "       ,RELEASE_NUM                       " ,
             "       ,SERVICE_LEVEL                     " ,
             "       ,BLD_LEVEL                         " ,
             "       ,PTF                               " ,
             "       ,FIXPACK_NUM                       " ,
             "FROM  "SYSIBMA".ENV_INST_INFO             " ,
             WHERELIST ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 8            /* CREATOR                   */
OUTSQLDA.5.SQLLEN   = 15           /* RELEASE_NUM               */
OUTSQLDA.6.SQLLEN   = 15           /* SERVICE_LEVEL             */
OUTSQLDA.7.SQLLEN   = 10           /* BLD_LEVEL                 */
OUTSQLDA.8.SQLLEN   = 10           /* PTF                       */
OUTSQLDA.9.SQLLEN   = 10           /* FIXPACK_NUM               */

DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || SUBSTR("NAME", 1, 11)
DDLTEXT = DDLTEXT    RIGHT("NPT", 2, ' ')
DDLTEXT = DDLTEXT    RIGHT("NDBP", 4, ' ')
DDLTEXT = DDLTEXT    RIGHT("PTR", 4, ' ')
DDLTEXT = DDLTEXT    LEFT("REL", 8, ' ')
DDLTEXT = DDLTEXT    LEFT("SLEVEL", 16, ' ')
DDLTEXT = DDLTEXT    LEFT("BLEVEL", 8, ' ')
DDLTEXT = DDLTEXT    LEFT("PTF", 8, ' ')
DDLTEXT = DDLTEXT    RIGHT("FP", 3, ' ')
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE  = ''
   LZEILE = LZEILE || SUBSTR(INST_NAME, 1, 11)
   LZEILE = LZEILE RIGHT(IS_INST_PARTITIONABLE, 2, ' ')
   LZEILE = LZEILE RIGHT(NUM_DBPARTITIONS, 4, ' ')
   LZEILE = LZEILE RIGHT(INST_PTR_SIZE, 4, ' ')
   LZEILE = LZEILE LEFT(RELEASE_NUM, 8, ' ')
   LZEILE = LZEILE LEFT(SERVICE_LEVEL,16, ' ')
   LZEILE = LZEILE LEFT(BLD_LEVEL,8, ' ')
   LZEILE = LZEILE LEFT(PTF, 8, ' ')
   LZEILE = LZEILE RIGHT(FIXPACK_NUM, 3, ' ')
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

LIST_TSPI:

WHERELIST    = ""
CALL MAKE_WHERELIST "TBSP_NAME", DB2_NAME1

EINGABE.0  = 1
SQLSTMT    = "SELECT  TBSP_NAME                         " ,
             "       ,TBSP_ID                           " ,
             "       ,TBSP_TYPE                         " ,
             "       ,TBSP_CONTENT_TYPE                 " ,
             "       ,TBSP_REBALANCER_MODE              " ,
             "       ,TBSP_USING_AUTO_STORAGE           " ,
             "       ,TBSP_AUTO_RESIZE_ENABLED          " ,
             "       ,TBSP_STATE                        " ,
             "       ,TBSP_USED_PAGES                   " ,
             "       ,TBSP_FREE_PAGES                   " ,
             "       ,TBSP_USABLE_PAGES                 " ,
             "       ,TBSP_TOTAL_PAGES                  " ,
             "       ,TBSP_PENDING_FREE_PAGES           " ,
             "       ,TBSP_PAGE_TOP                     " ,
             "       ,TBSP_MAX_PAGE_TOP                 " ,
             "       ,RECLAIMABLE_SPACE_ENABLED         " ,
             "       ,AUTO_STORAGE_HYBRID               " ,
             "       ,TBSP_PATHS_DROPPED                " ,
             "FROM  TABLE (MON_GET_TABLESPACE ('', -2)) AS t" ,
             WHERELIST ,
             "ORDER BY TBSP_NAME, TBSP_ID     " ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 19           /* TBSP_NAME                 */
OUTSQLDA.5.SQLLEN   = 20           /* TBSP_REBALANCER_MODE      */
OUTSQLDA.8.SQLLEN   = 10           /* TBSP_STATE                */

DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || SUBSTR("TSName", 1, 19)
DDLTEXT = DDLTEXT    RIGHT("TSID", 5, ' ')
DDLTEXT = DDLTEXT    RIGHT("TYPE", 5, ' ')
DDLTEXT = DDLTEXT    RIGHT("CONTENT", 7, ' ')
DDLTEXT = DDLTEXT    LEFT("REBALANCE", 9, ' ')
DDLTEXT = DDLTEXT    LEFT("AUTOS", 5, ' ')
DDLTEXT = DDLTEXT    LEFT("AUTOR", 5, ' ')
DDLTEXT = DDLTEXT    LEFT("STATUS", 10, ' ')
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE  = ''
   LZEILE = LZEILE || SUBSTR(TBSP_NAME, 1, 19)
   LZEILE = LZEILE RIGHT(TBSP_ID, 5, ' ')
   LZEILE = LZEILE RIGHT(TBSP_TYPE, 5, ' ')
   LZEILE = LZEILE RIGHT(TBSP_CONTENT_TYPE, 7, ' ')
   LZEILE = LZEILE LEFT(TBSP_REBALANCER_MODE, 9,             ' ')
   LZEILE = LZEILE LEFT(TBSP_USING_AUTO_STORAGE, 5, ' ')
   LZEILE = LZEILE LEFT(TBSP_AUTO_RESIZE_ENABLED, 5, ' ')
   LZEILE = LZEILE LEFT(TBSP_STATE, 10, ' ')
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

LIST_SI:

WHERELIST    = ""

EINGABE.0  = 1
SQLSTMT    = "SELECT  NAME                              " ,
             "       ,VALUE                             " ,
             "       ,UNIT                              " ,
             "FROM  "SYSIBMA".ENV_SYS_RESOURCES         " ,
             WHERELIST ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 24           /* NAME                      */
OUTSQLDA.2.SQLLEN   = 40           /* VALUE                     */
OUTSQLDA.3.SQLLEN   = 6            /* UNIT                      */

DDLTEXT = DDLTEXT "*UZ*"
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE  = ''
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

LIST_FEAT:

WHERELIST    = ""

EINGABE.0  = 1
SQLSTMT    = "SELECT  FEATURE_NAME                   " ,
             "     ,  FEATURE_FULLNAME               " ,
             "     ,  LICENSE_INSTALLED              " ,
             "     ,  PRODUCT_NAME                   " ,
             "     ,  FEATURE_USE_STATUS             " ,
             "FROM  "SYSIBMA".ENV_FEATURE_INFO       " ,
             WHERELIST ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || SUBSTR("Name", 1, 12)
DDLTEXT = DDLTEXT    Left("FULL NAME", 35, ' ')
DDLTEXT = DDLTEXT    LEFT("LIC", 3, ' ')
DDLTEXT = DDLTEXT    LEFT("PRODUCT", 7, ' ')
DDLTEXT = DDLTEXT    LEFT("USE STATUS", 10, ' ')
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE  = ''
   LZEILE = LZEILE || LEFT(FEATURE_NAME, 12, ' ')
   LZEILE = LZEILE LEFT(FEATURE_FULLNAME, 35, ' ')
   LZEILE = LZEILE LEFT(LICENSE_INSTALLED, 3, ' ')
   LZEILE = LZEILE LEFT(PRODUCT_NAME, 7, ' ')
   LZEILE = LZEILE LEFT(FEATURE_USE_STATUS, 10, ' ')
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

LIST_RO:

WHERELIST    = ""
CALL MAKE_WHERELIST "ROLENAME", DB2_NAME1
CALL MAKE_WHERELIST "ROLEID", DB2_NAME2, "NUM"

EINGABE.0  = 1
SQLSTMT    = "SELECT  ROLENAME                          " ,
             "     ,  ROLEID                            " ,
             "     ,  AUDITPOLICYID                     " ,
             "     ,  AUDITPOLICYNAME                   " ,
             "     ,  CREATE_TIME                       " ,
             "     ,  REMARKS                           " ,
             "FROM  "SYSCATS".ROLES                     " ,
             WHERELIST ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 20           /* ROLENAME                  */
OUTSQLDA.4.SQLLEN   = 25           /* AUDITPOLICYID             */
OUTSQLDA.4.SQLLEN   = 15           /* AUDITPOLICYNAME           */
OUTSQLDA.6.SQLLEN   = 25           /* REMARKS                   */

DDLTEXT = DDLTEXT "*UZ*"
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE  = ''
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

LIST_OI:

WHERELIST    = ""
CALL MAKE_WHERELIST "OBJECTSCHEMA", DB2_CREATOR1
CALL MAKE_WHERELIST "OBJECTNAME", DB2_NAME1
CALL MAKE_WHERELIST "OBJECTMODULENAME", DB2_CREATOR2
CALL MAKE_WHERELIST "ROUTINENAME", DB2_NAME2

EINGABE.0  = 1
SQLSTMT    = "SELECT  OBJECTSCHEMA                      " ,
             "     ,  OBJECTNAME                        " ,
             "     ,  OBJECTMODULENAME                  " ,
             "     ,  ROUTINENAME                       " ,
             "     ,  OBJECTTYPE                        " ,
             "     ,  SQLCODE AS SQLC                   " ,
             "     ,  SQLSTATE                          " ,
             "     ,  ERRORMESSAGE                      " ,
             "     ,  LINENUMBER                        " ,
             "     ,  INVALIDATE_TIME                   " ,
             "     ,  LAST_REGEN_TIME                   " ,
             "FROM  "SYSCATS".INVALIDOBJECTS            " ,
             WHERELIST ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 10           /* OBJECTSCHEMA              */
OUTSQLDA.2.SQLLEN   = 25           /* OBJECTNAME                */
OUTSQLDA.3.SQLLEN   = 16           /* OBJECTMODULENAME          */
OUTSQLDA.4.SQLLEN   = 15           /* ROUTINENAME               */
OUTSQLDA.5.SQLLEN   = 10           /* OBJECTTYPE                */
OUTSQLDA.6.SQLLEN   = 7            /* SQLCODE                   */
OUTSQLDA.7.SQLLEN   = 8            /* SQLSTATE                  */
OUTSQLDA.8.SQLLEN   = 12           /* ERRORMESSAGE              */
OUTSQLDA.9.SQLLEN   = 10           /* LINENUMBER                */
OUTSQLDA.10.SQLLEN  = 26           /* INVALIDATE_TIME           */
OUTSQLDA.11.SQLLEN  = 26           /* LAST_REGEN_TIME           */

DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || SUBSTR("Schema", 1, 8)
DDLTEXT = DDLTEXT    LEFT("Name", 15, ' ')
DDLTEXT = DDLTEXT    LEFT("ModName", 15, ' ')
DDLTEXT = DDLTEXT    LEFT("Routine", 10, ' ')
DDLTEXT = DDLTEXT    LEFT("T", 1, ' ')
DDLTEXT = DDLTEXT    RIGHT("SQLC", 5, ' ')
DDLTEXT = DDLTEXT    Left("Message", 12, ' ')
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE  = ''
   LZEILE = LZEILE || SUBSTR(OBJECTSCHEMA, 1, 8)
   LZEILE = LZEILE LEFT(OBJECTNAME, 15, ' ')
   LZEILE = LZEILE LEFT(OBJECTMODULENAME, 15, ' ')
   LZEILE = LZEILE LEFT(ROUTINENAME, 10, ' ')
   LZEILE = LZEILE LEFT(OBJECTTYPE, 1, ' ')
   LZEILE = LZEILE RIGHT(SQLC, 5, ' ')
   LZEILE = LZEILE Left(ERRORMESSAGE, 12, ' ')
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

LIST_UT:

WHERELIST    = ""

EINGABE.0  = 1
SQLSTMT    = "SELECT SNAPSHOT_TIMESTAMP                 " ,
             "     , UTILITY_ID                         " ,
             "     , UTILITY_TYPE                       " ,
             "     , UTILITY_PRIORITY                   " ,
             "     , UTILITY_DESCRIPTION                " ,
             "     , UTILITY_DBNAME                     " ,
             "     , UTILITY_START_TIME                 " ,
             "     , UTILITY_STATE                      " ,
             "     , UTILITY_INVOKER_TYPE               " ,
             "     , DBPARTITIONNUM                     " ,
             "     , PROGRESS_LIST_ATTR                 " ,
             "     , PROGRESS_LIST_CUR_SEQ_NUM          " ,
             "FROM  "SYSIBMA".SNAPUTIL                  " ,
             WHERELIST ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || RIGHT("ID", 3, ' ')
DDLTEXT = DDLTEXT LEFT("Type", 4, ' ')
DDLTEXT = DDLTEXT RIGHT("Prio", 4, ' ')
DDLTEXT = DDLTEXT LEFT("DBName", 8, ' ')
DDLTEXT = DDLTEXT LEFT("State", 10, ' ')
DDLTEXT = DDLTEXT LEFT("IType", 10, ' ')
DDLTEXT = DDLTEXT LEFT("Descr.", 30, ' ')
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE  = ''
   LZEILE = LZEILE || RIGHT(UTILITY_ID, 3, '0')
   LZEILE = LZEILE LEFT(UTILITY_TYPE, 4, ' ')
   LZEILE = LZEILE RIGHT(UTILITY_PRIORITY, 4, '0')
   LZEILE = LZEILE LEFT(UTILITY_DBNAME, 8, ' ')
   LZEILE = LZEILE LEFT(UTILITY_STATE, 10, ' ')
   LZEILE = LZEILE LEFT(UTILITY_INVOKER_TYPE, 10, ' ')
   LZEILE = LZEILE Left(UTILITY_DESCRIPTION, 30, ' ')
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

LIST_MSG:

WHERELIST    = ""
CALL MAKE_WHERELIST "MSGSEVERITY", DB2_CREATOR1
CALL MAKE_WHERELIST "DBNAME", DB2_NAME1

EINGABE.0  = 1
SQLSTMT    = "SELECT  DBNAME                            " ,
             "     ,  INSTANCENAME                      " ,
             "     ,  TIMESTAMP                         " ,
             "     ,  TIMEZONE                          " ,
             "     ,  DBPARTITIONNUM                    " ,
             "     ,  PID                               " ,
             "     ,  PROCESSNAME                       " ,
             "     ,  TID                               " ,
             "     ,  APPL_ID                           " ,
             "     ,  COMPONENT                         " ,
             "     ,  FUNCTION                          " ,
             "     ,  PROBE                             " ,
             "     ,  MSGNUM                            " ,
             "     ,  MSGTYPE                           " ,
             "     ,  MSGSEVERITY                       " ,
             "     ,  MSG                               " ,
             "FROM TABLE("SYSPROCA".PD_GET_LOG_MSGS(    " ,
             "           CURRENT_TIMESTAMP - 10 year )) AS MSGS " ,
             WHERELIST ,
             "ORDER BY TIMESTAMP DESC " ,
             ""


CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || LEFT("TIMESTAMP", 19, ' ')
DDLTEXT = DDLTEXT LEFT("DBNAME", 8, ' ')
DDLTEXT = DDLTEXT RIGHT("MSGNUM", 8, ' ')
DDLTEXT = DDLTEXT LEFT("MSG", 33, ' ')
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE  = ''
   LZEILE = LZEILE || LEFT(TIMESTAMP, 19, ' ')
   LZEILE = LZEILE LEFT(DBNAME, 8, ' ')
   LZEILE = LZEILE RIGHT(MSGNUM, 8, ' ')
   LZEILE = LZEILE LEFT(MSG, 33, ' ')
   CALL ADD_TABLE
 END


CALL CLOSE_CURSOR_AC3
RETURN

LIST_LOCKS:

WHERELIST    = ""
CALL MAKE_WHERELIST "APPL_NAME", DB2_CREATOR1
CALL MAKE_WHERELIST "DB_NAME", DB2_NAME1
if DB2_NAME2 = "%" THEN DB2_NAME2 = ""
CALL MAKE_WHERELIST "AGENT_ID", DB2_NAME2, "NUM"

EINGABE.0  = 1
SQLSTMT    = "SELECT  SNAPSHOT_TIMESTAMP                " ,
             "     ,  DB_NAME                           " ,
             "     ,  AGENT_ID                          " ,
             "     ,  APPL_NAME                         " ,
             "     ,  AUTHID                            " ,
             "     ,  TBSP_NAME                         " ,
             "     ,  TABSCHEMA                         " ,
             "     ,  TABNAME                           " ,
             "     ,  TAB_FILE_ID                       " ,
             "     ,  LOCK_OBJECT_TYPE                  " ,
             "     ,  LOCK_NAME                         " ,
             "     ,  LOCK_MODE                         " ,
             "     ,  LOCK_STATUS                       " ,
             "     ,  LOCK_ESCALATION                   " ,
             "     ,  DBPARTITIONNUM                    " ,
             "FROM "SYSIBMA".LOCKS_HELD                 " ,
             WHERELIST ,
             "ORDER BY AGENT_ID       " ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.2.SQLLEN   =  8           /* DBNAME                    */
OUTSQLDA.4.SQLLEN   =  20          /* APPL_NAME                 */
OUTSQLDA.5.SQLLEN   =  20          /* AUTHID                    */
OUTSQLDA.6.SQLLEN   =  15          /* TBSP_NAME                 */
OUTSQLDA.7.SQLLEN   =  10          /* TABSCHEMA                 */
OUTSQLDA.8.SQLLEN   =  25          /* TABNAME                   */

DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || LEFT("DBNAME", 8, ' ')
DDLTEXT = DDLTEXT RIGHT("AGENDID", 8, ' ')
DDLTEXT = DDLTEXT LEFT("APPLNAME", 15, ' ')
DDLTEXT = DDLTEXT LEFT("OBJECT", 15, ' ')
DDLTEXT = DDLTEXT LEFT("LM", 2, ' ')
DDLTEXT = DDLTEXT LEFT("Table", 20, ' ')
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LOCK_TB = ""
   IF Length(TABSCHEMA) > 0 Then do
      LOCK_TB = Strip(TABSCHEMA) || "." || ,
                Strip(TABNAME)
    End
   LZEILE  = ''
   LZEILE = LZEILE || LEFT(DB_NAME, 8, ' ')
   LZEILE = LZEILE RIGHT(AGENT_ID, 8, ' ')
   LZEILE = LZEILE LEFT(APPL_NAME, 15, ' ')
   LZEILE = LZEILE LEFT(LOCK_OBJECT_TYPE, 15, ' ')
   LZEILE = LZEILE LEFT(LOCK_MODE, 2, ' ')
   LZEILE = LZEILE LEFT(LOCK_TB, 20, ' ')
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

LIST_APPLI:

WHERELIST    = ""
IF DB2_CREATOR1 = 'ALL' Then DB2_Creator1 = ""
If DB2_Creator1 <> "" Then
   CALL MAKE_WHERELIST "IS_SYSTEM_APPL", DB2_CREATOR1, "NUM"
If DB2_Name1 = "%" Then DB2_NAME1 = ""
CALL MAKE_WHERELIST "AGENT_ID",  DB2_NAME1, "NUM"

EINGABE.0  = 1
SQLSTMT    = "SELECT  AGENT_ID                          " ,
             "     ,  IS_SYSTEM_APPL                    " ,
             "     ,  APPL_STATUS                       " ,
             "     ,  CODEPAGE_ID                       " ,
             "     ,  NUM_ASSOC_AGENTS                  " ,
             "     ,  COORD_NODE_NUM                    " ,
             "     ,  CLIENT_PID                        " ,
             "     ,  COORD_AGENT_PID                   " ,
             "     ,  STATUS_CHANGE_TIME                " ,
             "     ,  CLIENT_PLATFORM                   " ,
             "     ,  CLIENT_PROTOCOL                   " ,
             "     ,  TERRITORY_CODE                    " ,
             "     ,  APPL_NAME                         " ,
             "     ,  APPL_ID                           " ,
             "     ,  SEQUENCE_NO                       " ,
             "     ,  PRIMARY_AUTH_ID                   " ,
             "     ,  SESSION_AUTH_ID                   " ,
             "     ,  CLIENT_NNAME                      " ,
             "     ,  CLIENT_PRDID                      " ,
             "     ,  INPUT_DB_ALIAS                    " ,
             "     ,  CLIENT_DB_ALIAS                   " ,
             "     ,  DB_NAME                           " ,
             "     ,  DB_PATH                           " ,
             "     ,  EXECUTION_ID                      " ,
             "     ,  CORR_TOKEN                        " ,
             "     ,  TPMON_CLIENT_USERID               " ,
             "     ,  TPMON_CLIENT_WKSTN                " ,
             "     ,  TPMON_CLIENT_APP                  " ,
             "     ,  TPMON_ACC_STR                     " ,
             "     ,  DBPARTITIONNUM                    " ,
             "     ,  WORKLOAD_ID                       " ,
             "     ,  AUTHORITY_LVL                     " ,
             "FROM "SYSIBMA".SNAPAPPL_INFO              " ,
             WHERELIST ,
             "ORDER BY AGENT_ID       " ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.3.SQLLEN   = 11           /* APPL_STATUS               */
OUTSQLDA.10.SQLLEN  = 15           /* CLIENT_PLATFORM           */
OUTSQLDA.13.SQLLEN  = 20           /* APPL_NAME                 */
OUTSQLDA.14.SQLLEN  = 20           /* APPL_ID                   */
OUTSQLDA.16.SQLLEN  = 20           /* PRIMARY_AUTH_ID           */
OUTSQLDA.17.SQLLEN  = 20           /* SESSION_AUTH_ID           */
OUTSQLDA.18.SQLLEN  = 12           /* CLIENT_NNAME              */
OUTSQLDA.19.SQLLEN  = 12           /* CLIENT_PRDID              */
OUTSQLDA.20.SQLLEN  = 14           /* INPUT_DB_ALIAS            */
OUTSQLDA.21.SQLLEN  = 15           /* CLIENT_DB_ALIAS           */
OUTSQLDA.22.SQLLEN  = 8            /* DB_NAME                   */
OUTSQLDA.23.SQLLEN  = 68           /* DB_PATH                   */
OUTSQLDA.24.SQLLEN  = 16           /* EXECUTION_ID              */
OUTSQLDA.25.SQLLEN  = 30           /* CORR_TOKEN                */
OUTSQLDA.26.SQLLEN  = 20           /* TPMON_CLIENT_USERID       */
OUTSQLDA.27.SQLLEN  = 19           /* TPMON_CLIENT_WKSTN        */
OUTSQLDA.28.SQLLEN  = 17           /* TPMON_CLIENT_APP          */
OUTSQLDA.29.SQLLEN  = 13           /* TPMON_ACC_STR             */
OUTSQLDA.32.SQLLEN  = 78           /* AUTHORITY_LVL             */

DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || LEFT("AGENDID",11, ' ')
DDLTEXT = DDLTEXT LEFT("STATUS", 8, ' ')
DDLTEXT = DDLTEXT RIGHT("CPID", 5, ' ')
DDLTEXT = DDLTEXT LEFT("CSYS", 5, ' ')
DDLTEXT = DDLTEXT LEFT("Applname", 15, ' ')
DDLTEXT = DDLTEXT LEFT("ApplID", 10, ' ')
DDLTEXT = DDLTEXT LEFT("CToken", 10, ' ')
DDLTEXT = DDLTEXT LEFT("S", 1, ' ')
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE  = ''
   LZEILE = LZEILE || RIGHT(AGENT_ID,11, '0')
   LZEILE = LZEILE LEFT(APPL_STATUS, 8, ' ')
   LZEILE = LZEILE RIGHT(CLIENT_PID, 5, ' ')
   LZEILE = LZEILE LEFT(CLIENT_PLATFORM, 5, ' ')
   LZEILE = LZEILE LEFT(APPL_NAME, 15, ' ')
   LZEILE = LZEILE LEFT(APPL_ID, 10, ' ')
   LZEILE = LZEILE LEFT(CORR_TOKEN, 10, ' ')
   LZEILE = LZEILE LEFT(IS_SYSTEM_APPL, 1, ' ')
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

LIST_LOCKHOLD:

WHERELIST    = ""
if DB2_NAME1 = "%" THEN DB2_NAME1 = ""
CALL MAKE_WHERELIST "REQ_AGENT_TID ", DB2_NAME1, "NUM"

EINGABE.0  = 1
SQLSTMT    = "select LOCK_NAME                                      ",
             "     , HLD_APPLICATION_HANDLE                         ",
             "     , REQ_APPLICATION_HANDLE                         ",
             "     , LOCK_OBJECT_TYPE                               ",
             "     , LOCK_WAIT_ELAPSED_TIME                         ",
             "     , TABSCHEMA                                      ",
             "     , TABNAME                                        ",
             "     , DATA_PARTITION_ID                              ",
             "     , LOCK_MODE                                      ",
             "     , LOCK_CURRENT_MODE                              ",
             "     , LOCK_MODE_REQUESTED                            ",
             "     , REQ_AGENT_TID                                  ",
             "     , REQ_MEMBER                                     ",
             "     , REQ_APPLICATION_NAME                           ",
             "     , REQ_USERID                                     ",
             "     , REQ_STMT_TEXT                                  ",
             "     , HLD_MEMBER                                     ",
             "     , HLD_APPLICATION_NAME                           ",
             "     , HLD_USERID                                     ",
             "     , HLD_CURRENT_STMT_TEXT                          ",
             "FROM "SYSIBMA".MON_LOCKWAITS                          ",
             WHERELIST ,
             "ORDER BY HLD_APPLICATION_HANDLE                       ",
             "       , REQ_APPLICATION_HANDLE                       ",
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || LEFT("HAGENTID", 8, ' ')
DDLTEXT = DDLTEXT LEFT("RAGENDID", 8, ' ')
DDLTEXT = DDLTEXT LEFT("LMODE ", 10, ' ')
DDLTEXT = DDLTEXT LEFT("HUSER ", 10, ' ')
DDLTEXT = DDLTEXT LEFT("RUSER ", 10, ' ')
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   TAB     = Strip(Schema) || "." || Strip(Tabname)
   LZEILE  = ''
   LZEILE = LZEILE || LEFT(HLD_APPLICATION_HANDLE,8, ' ')
   LZEILE = LZEILE LEFT(REQ_APPLICATION_HANDLE, 8. ' ')
   LZEILE = LZEILE LEFT(LOCK_MODE, 10, ' ')
   LZEILE = LZEILE LEFT(REQ_USERID, 10, ' ')
   LZEILE = LZEILE LEFT(HLD_USERID, 10, ' ')
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

LIST_HIST:

WHERELIST    = ""
CALL MAKE_WHERELIST "OPERATIONTYPE", DB2_CREATOR1
CALL MAKE_WHERELIST "OPERATION", DB2_NAME1
CALL MAKE_WHERELIST "TABSCHEMA", DB2_CREATOR2
CALL MAKE_WHERELIST "TABNAME", DB2_NAME2
CALL MAKE_WHERELIST "TBSPNAMES", "%" || STRIP(DB2_TABLESPACE) || "%"

EINGABE.0  = 1
SQLSTMT    = "SELECT   START_TIME                       " ,
             "     ,   END_TIME                         " ,
             "     ,   FIRSTLOG                         " ,
             "     ,   LASTLOG                          " ,
             "     ,   OPERATION                        " ,
             "     ,   OPERATIONTYPE                    " ,
             "     ,   OBJECTTYPE                       " ,
             "     ,   EID                              " ,
             "     ,   SEQNUM                           " ,
             "     ,   TABSCHEMA                        " ,
             "     ,   TABNAME                          " ,
             "     ,   NUM_TBSPS                        " ,
             "     ,   ENTRY_STATUS                     " ,
             "     ,   SQLCODE   AS SQLC                " ,
             "     ,   SQLSTATE  AS SQLS                " ,
             "     ,   LOCATION                         " ,
             "FROM  "SYSIBMA".DB_HISTORY                " ,
             WHERELIST ,
             "ORDER BY START_TIME DESC                  " ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 15           /* START_TIME                */
OUTSQLDA.2.SQLLEN   = 15           /* END_TIME                  */
OUTSQLDA.3.SQLLEN   = 12           /* FIRSTLOG                  */
OUTSQLDA.4.SQLLEN   = 12           /* LASTLOG                   */
OUTSQLDA.10.SQLLEN  = 10           /* TABSCHEMA                 */
OUTSQLDA.11.SQLLEN  = 25           /* TABNAME                   */
OUTSQLDA.16.SQLLEN  = 45           /* LOCATION                  */

DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || LEFT("EID", 6, ' ')
DDLTEXT = DDLTEXT LEFT("OP", 2, ' ')
DDLTEXT = DDLTEXT LEFT("OPT", 3, ' ')
DDLTEXT = DDLTEXT LEFT("OBT", 3, ' ')
DDLTEXT = DDLTEXT LEFT("FIRSTLOG", 12, ' ')
DDLTEXT = DDLTEXT LEFT("LASTLOG", 12, ' ')
DDLTEXT = DDLTEXT LEFT("Starttime", 15, ' ')
DDLTEXT = DDLTEXT RIGHT("SQLC", 5, ' ')
DDLTEXT = DDLTEXT RIGHT("SQLS", 6, ' ')
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   stime = Substr(START_TIME, 1, 8) || " " || ,
           Substr(START_TIME, 9)

   If c2x(OPERATIONTYPE) = '00' Then
      OPERATIONTYPE = " "

   LZEILE  = ''
   LZEILE = LZEILE || RIGHT(EID, 6, '0')
   LZEILE = LZEILE LEFT(OPERATION, 2, ' ')
   LZEILE = LZEILE LEFT(OPERATIONTYPE, 3, ' ')
   LZEILE = LZEILE LEFT(OBJECTTYPE, 3, ' ')
   LZEILE = LZEILE LEFT(FIRSTLOG, 12, ' ')
   LZEILE = LZEILE LEFT(LASTLOG, 12, ' ')
   LZEILE = LZEILE LEFT(STIME, 15, ' ')
   LZEILE = LZEILE RIGHT(SQLC, 5, ' ')
   LZEILE = LZEILE RIGHT(SQLS, 6, ' ')
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

LIST_REMARKS:

WHERELIST    = ""
CALL MAKE_WHERELIST "TABSCHEMA", DB2_CREATOR1
CALL MAKE_WHERELIST "TABNAME", DB2_NAME1
CALL MAKE_WHERELIST "", "REMARKS IS NOT NULL"

EINGABE.0  = 1
SQLSTMT    = "SELECT TABSCHEMA  " ,
             "     , TABNAME    " ,
             "     , REMARKS    " ,
             "FROM  "SYSCATS".TABLES  " ,
             WHERELIST ,
             "ORDER BY TABSCHEMA, TABNAME ",
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 8            /* TABSCHEMA                 */
OUTSQLDA.2.SQLLEN   = 20           /* TABNAME                   */
OUTSQLDA.3.SQLLEN   = 30           /* REMARKS                   */

DDLTEXT = DDLTEXT "*UZ*"
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE  = ''
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

LIST_TB:
CNR = 2
SNR = CNR

WHERELIST    = ""
CALL MAKE_WHERELIST "TB.CREATOR", DB2_CREATOR1
CALL MAKE_WHERELIST "TB.NAME", DB2_NAME1
CALL MAKE_WHERELIST "TB.TBSPACE", DB2_TABLESPACE
CALL MAKE_WHERELIST "", "TB.TYPE IN ('T', 'M', 'C')"

SQLSTMT   =  "SELECT TB.CREATOR AS TABSCHEMA  " ,
             "     , TB.NAME    AS TABNAME    " ,
             "     , TB.TYPE                  " ,
             "     , TB.TBSPACE               " ,
             "     , TB.INDEX_TBSPACE         " ,
             "     , TB.LONG_TBSPACE          " ,
             "     , TB.PARENTS               " ,
             "     , TB.CHILDREN              " ,
             "     , TB.SELFREFS              " ,
             "     , INT(TB.CARD) AS CARD     " ,
             "     , TB.STATUS                " ,
             "     , TB.CTIME                 " ,
             "     , TB.LASTUSED              " ,
             "     , TB.COMPRESSION           " ,
             "     , TB.CLUSTERED             " ,
             "     , TB.LOCKSIZE              " ,
             "     , TB.APPEND_MODE           " ,
             "     , TB.VOLATILE              " ,
             "     , TB.DATA_CAPTURE          " ,
             "     , TB.DROPRULE              " ,
             "     , TB.ACCESS_MODE           " ,
             "     , TB.ONCOMMIT              " ,
             "     , TB.ONROLLBACK            " ,
             "FROM "SYSIBMS".SYSTABLES TB     " ,
             WHERELIST                     ,
             "ORDER BY 1, 2              " ,
             ""


CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 10           /* TABSCHEMA                 */
OUTSQLDA.2.SQLLEN   = 60           /* TABNAME                   */
OUTSQLDA.4.SQLLEN   = 14           /* TBSPACE                   */
OUTSQLDA.5.SQLLEN   = 14           /* INDEX_TBSPACE             */
OUTSQLDA.6.SQLLEN   = 14           /* LONG_TBSPACE              */

DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || SUBSTR("TBNAME", 1, 26)
DDLTEXT = DDLTEXT SUBSTR("TY", 1, 2)
DDLTEXT = DDLTEXT SUBSTR("TBSPACE", 1, 14)
DDLTEXT = DDLTEXT "PCS"
DDLTEXT = DDLTEXT RIGHT("CARD", 12, ' ')
DDLTEXT = DDLTEXT LEFT("LASTUSED", 10, ' ')
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
   SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
   Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End


   LZEILE  = ''
   XTBNAME = STRIP(TABSCHEMA) || '.' || STRIP(TABNAME)
   LZEILE = LZEILE || SUBSTR(XTBNAME, 1, 26)
   LZEILE = LZEILE SUBSTR(TYPE, 1, 2)
   LZEILE = LZEILE SUBSTR(TBSPACE, 1, 14)
   LZEILE = LZEILE PARENTS
   LZEILE = LZEILE || CHILDREN
   LZEILE = LZEILE || SELFREFS
   LZEILE = LZEILE RIGHT(CARD, 12, ' ')
   LZEILE = LZEILE LEFT(LASTUSED, 10, ' ')
   Call Automatic_Data
   LZEILE = strip(LZEILE)
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3

Return


LIST_TBS:
CNR = 2
SNR = CNR

WHERELIST    = ""
CALL MAKE_WHERELIST "TBS.TABSCHEMA", DB2_CREATOR1
CALL MAKE_WHERELIST "TBS.TABNAME", DB2_NAME1

TABLE     = SYSIBMA".ADMINTABINFO TBS"

TBC = ""
TBN = ""

IF LENGTH(DB2_CREATOR1)   > 0  ,
 & POS('%', DB2_CREATOR1) = 0  ,
 & POS('_', DB2_CREATOR1) = 0  ,
 & POS('*', DB2_CREATOR1) = 0  THEN DO
   TBC = DB2_CREATOR1
 End
IF LENGTH(TBC)   > 0  ,
 & LENGTH(DB2_NAME1)   > 0  ,
 & POS('%', DB2_NAME1)    = 0  ,
 & POS('_', DB2_NAME1)    = 0  ,
 & POS('*', DB2_NAME1)    = 0  Then do
   TBN = DB2_NAME1
 End

TABLE  =  "TABLE("SYSPROCA".ADMIN_GET_TAB_INFO_V97(" ,
          "'" || TBC || "'" "," ,
          "'" || TBN || "')" ") TBS " ,
          ""

SQLSTMT   =  "SELECT TBS.TABSCHEMA            " ,
             "     , TBS.TABNAME              " ,
             "     , TBS.TABTYPE              " ,
             "     , TBS.AVAILABLE            " ,
             "     , TBS.INDEX_TYPE           " ,
             "     , TBS.REORG_PENDING        " ,
             "     , TBS.INPLACE_REORG_STATUS " ,
             "     , TBS.LOAD_STATUS          " ,
             "     , TBS.READ_ACCESS_ONLY     " ,
             "     , TBS.NO_LOAD_RESTART      " ,
             "     , TBS.NUM_REORG_REC_ALTERS " ,
             "     , TBS.INDEXES_REQUIRE_REBUILD " ,
             "     , TBS.LARGE_RIDS           " ,
             "     , TBS.LARGE_SLOTS          " ,
             "     , TBS.STATSTYPE            " ,
             "     , TB.STATUS                " ,
             "     , TB.ACCESS_MODE           " ,
             "     , SUBSTR(TB.CONST_CHECKED, 1, 1 ) AS FK_CHK    ",
             "     , SUBSTR(TB.CONST_CHECKED, 2, 1 ) AS CC_CHK    ",
             "     , SUBSTR(TB.CONST_CHECKED, 5, 1 ) AS MQT_CHK   ",
             "     , SUBSTR(TB.CONST_CHECKED, 6, 1 ) AS GCOL_CHK  ",
             "     , SUBSTR(TB.CONST_CHECKED, 7, 1 ) AS STAB_CHK  ",
             "     , SUBSTR(TB.CONST_CHECKED, 7, 1 ) AS DPART_CHK ",
             "FROM "TABLE                      ,
             "INNER JOIN  "SYSCATS".TABLES TB " ,
             " ON   TBS.TABSCHEMA  = TB.TABSCHEMA  " ,
             " AND  TBS.TABNAME    = TB.TABNAME    " ,
             WHERELIST ,
             "ORDER BY TBS.TABSCHEMA, TBS.TABNAME  " ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 10           /* TBSCHEMA                  */
OUTSQLDA.2.SQLLEN   = 25           /* TBNAME                    */

DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || SUBSTR("TBNAME", 1, 23)
DDLTEXT = DDLTEXT LEFT("AV", 2, ' ')
DDLTEXT = DDLTEXT LEFT("IT", 2, ' ')
DDLTEXT = DDLTEXT LEFT("RP", 2, ' ')
DDLTEXT = DDLTEXT LEFT("RO", 2, ' ')
DDLTEXT = DDLTEXT LEFT("LE", 2, ' ')
DDLTEXT = DDLTEXT LEFT("IB", 2, ' ')
DDLTEXT = DDLTEXT LEFT("LR", 2, ' ')
DDLTEXT = DDLTEXT LEFT("LS", 2, ' ')
DDLTEXT = DDLTEXT LEFT("RS", 2, ' ')
DDLTEXT = DDLTEXT LEFT(" NR", 3, ' ')
DDLTEXT = DDLTEXT LEFT("IR", 4, ' ')
DDLTEXT = DDLTEXT LEFT("LS", 4, ' ')
DDLTEXT = DDLTEXT LEFT("TB", 2, ' ')
DDLTEXT = DDLTEXT LEFT("ST", 4, ' ')
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
   SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
   Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   if ITABSCHEMA                 = -1 Then TABSCHEMA
   if ITABNAME                   = -1 Then TABNAME = " "
   if ITABTYPE                   = -1 Then TABTYPE = " "
   if IAVAILABLE                 = -1 Then AVAILABLE = " "
   if IINDEX_TYPE                = -1 Then INDEX_TYPE = " "
   if IREORG_PENDING             = -1 Then REORG_PENDING = " "
   if IINPLACE_REORG_STATUS      = -1 Then INPLACE_REORG_STATUS    = " "
   if ILOAD_STATUS               = -1 Then LOAD_STATUS             = " "
   if IREAD_ACCESS_ONLY          = -1 Then READ_ACCESS_ONLY        = " "
   if INO_LOAD_RESTART           = -1 Then NO_LOAD_RESTART         = " "
   if INUM_REORG_REC_ALTERS      = -1 Then NUM_REORG_REC_ALTERS    = " "
   if IINDEXES_REQUIRE_REBUILD   = -1 Then INDEXES_REQUIRE_REBUILD = " "
   if ILARGE_RIDS                = -1 Then LARGE_RIDS              = " "
   if ILARGE_SLOTS               = -1 Then LARGE_SLOTS             = " "
   if ISTATSTYPE                 = -1 Then STATSTYPE               = " "
   if ITB_STATE                  = -1 Then TB_STATE                = " "
   if IACCESS_MODE               = -1 Then ACCESS_MODE             = " "
   if IFK_CHK                    = -1 Then FK_CHK                  = " "
   if ICC_CHK                    = -1 Then CC_CHK                  = " "
   if IMQT_CHK                   = -1 Then MQT_CHK                 = " "
   if IGCOL_CHK                  = -1 Then GCOL_CHK                = " "
   if ISTAB_CHK                  = -1 Then STAB_CHK                = " "
   if IDPART_CHK                 = -1 Then DPART_CHK               = " "

   SELECT
     WHEN AVAILABLE               = 'N'  THEN TB_STATUS = "NA"
     WHEN REORG_PENDING           = 'Y'  THEN TB_STATUS = "RP"
     WHEN READ_ACCESS_ONLY        = 'Y'  THEN TB_STATUS = "RO"
     WHEN NO_LOAD_RESTART         = 'Y'  THEN TB_STATUS = "LR"
     WHEN INDEXES_REQUIRE_REBUILD = 'Y'  THEN TB_STATUS = "BI"
     WHEN LARGE_RIDS              = 'P'  THEN TB_STATUS = "LR"
     WHEN LARGE_SLOTS             = 'P'  THEN TB_STATUS = "LS"
     WHEN TB_STATE                = 'C'  THEN Do
          Select
            WHEN   FK_CHK     <> 'Y'  THEN TB_STATUS = FK_CHK"FK"
            WHEN   CC_CHK     <> 'Y'  THEN TB_STATUS = CC_CHK"CC"
            WHEN   MQT_CHK    <> 'Y'  THEN TB_STATUS = MQT_CHK"MQ"
            WHEN   GCOL_CHK   <> 'Y'  THEN TB_STATUS = GCOL_CHK"CO"
            WHEN   STAB_CHK   <> 'Y'  THEN TB_STATUS = STAB_CHK"ST"
            WHEN   DPART_CHK  <> 'Y'  THEN TB_STATUS = DPART_CHK"SP"
            Otherwise                         TB_STATUS = "SIP"
           End
      End
     WHEN ACCESS_MODE             = 'D'  THEN TB_STATUS = "NDM"
     WHEN ACCESS_MODE             = 'N'  THEN TB_STATUS = "NOA"
     WHEN ACCESS_MODE             = 'R'  THEN TB_STATUS = "RO"
     WHEN TB_STATE                = 'X'  THEN TB_STATUS = "IOP"
     OTHERWISE                                TB_STATUS = "OK"
    END

   /* Auswahl alle die nicht OK sind ??? */
   If DB2_LIST_OBJ = "NOK" & TB_STATUS = "OK" Then Iterate

   LZEILE  = ''
   XTBNAME = STRIP(TABSCHEMA) || '.' || STRIP(TABNAME)
   LZEILE = LZEILE || SUBSTR(XTBNAME, 1, 23)
   LZEILE = LZEILE LEFT(AVAILABLE, 2, ' ')
   LZEILE = LZEILE LEFT(INDEX_TYPE, 2, ' ')
   LZEILE = LZEILE LEFT(REORG_PENDING, 2, ' ')
   LZEILE = LZEILE LEFT(READ_ACCESS_ONLY, 2, ' ')
   LZEILE = LZEILE LEFT(NO_LOAD_RESTART, 2, ' ')
   LZEILE = LZEILE LEFT(INDEXES_REQUIRE_REBUILD, 2, ' ')
   LZEILE = LZEILE LEFT(LARGE_RIDS, 2, ' ')
   LZEILE = LZEILE LEFT(LARGE_SLOTS, 2, ' ')
   LZEILE = LZEILE LEFT(STATSTYPE, 2, ' ')
   LZEILE = LZEILE right(NUM_REORG_REC_ALTERS, 3, ' ')
   LZEILE = LZEILE LEFT(INPLACE_REORG_STATUS, 4, ' ')
   LZEILE = LZEILE LEFT(LOAD_STATUS, 4, ' ')
   LZEILE = LZEILE LEFT(TB_STATE , 2, ' ')
   LZEILE = LZEILE LEFT(TB_STATUS, 4, ' ')
   Call Automatic_Data
   CALL ADD_TABLE
 END


CALL CLOSE_CURSOR_AC3

Return

LIST_DP:
CNR = 2
SNR = CNR

WHERELIST    = ""
CALL MAKE_WHERELIST "TABSCHEMA", DB2_CREATOR1
CALL MAKE_WHERELIST "TABNAME", DB2_NAME1

EINGABE.0 =  1
SQLSTMT   =  "SELECT DATAPARTITIONNAME     " ,
             "   ,   TABSCHEMA             " ,
             "   ,   TABNAME               " ,
             "   ,   DATAPARTITIONID       " ,
             "   ,   TBSPACEID             " ,
             "   ,   PARTITIONOBJECTID     " ,
             "   ,   LONG_TBSPACEID        " ,
             "   ,   ACCESS_MODE           " ,
             "   ,   STATUS                " ,
             "   ,   SEQNO                 " ,
             "   ,   LOWINCLUSIVE          " ,
             "   ,   LOWVALUE              " ,
             "   ,   HIGHINCLUSIVE         " ,
             "   ,   HIGHVALUE             " ,
             "   ,   CARD                  " ,
             "   ,   OVERFLOW              " ,
             "   ,   NPAGES                " ,
             "   ,   FPAGES                " ,
             "   ,   ACTIVE_BLOCKS         " ,
             "   ,   INDEX_TBSPACEID       " ,
             "   ,   AVGROWSIZE            " ,
             "   ,   PCTROWSCOMPRESSED     " ,
             "   ,   PCTPAGESAVED          " ,
             "   ,   AVGCOMPRESSEDROWSIZE  " ,
             "   ,   AVGROWCOMPRESSIONRATIO" ,
             "   ,   STATS_TIME            " ,
             "   ,   LASTUSED              " ,
             "FROM "SYSCATS".DATAPARTITIONS T1 ",
             WHERELIST ,
             "ORDER BY TABSCHEMA, TABNAME, SEQNO " ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 20           /* DATAPARTITIONNAME         */
OUTSQLDA.2.SQLLEN   = 8            /* TABSCHEMA                 */
OUTSQLDA.3.SQLLEN   = 20           /* TABNAME                   */
OUTSQLDA.9.SQLLEN   = 6            /* STATUS                    */
OUTSQLDA.11.SQLLEN  = 12           /* LOWINCLUSIVE              */
OUTSQLDA.12.SQLLEN  = 20           /* LOWVALUE                  */
OUTSQLDA.13.SQLLEN  = 12           /* HIGHINCLUSIVE             */
OUTSQLDA.14.SQLLEN  = 20           /* HIGHVALUE                 */

DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || Left("TBName", 32, ' ')
DDLTEXT = DDLTEXT SUBSTR("PARTNAME", 1, 10)
DDLTEXT = DDLTEXT RIGHT("PID", 3, ' ')
DDLTEXT = DDLTEXT RIGHT("SEQ", 3, ' ')
DDLTEXT = DDLTEXT RIGHT("TSID", 4, ' ')
DDLTEXT = DDLTEXT LEFT("AM", 2, ' ')
DDLTEXT = DDLTEXT LEFT("Status", 6, ' ')
DDLTEXT = DDLTEXT LEFT("LI", 2, ' ')
DDLTEXT = DDLTEXT LEFT("HI", 2, ' ')
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE  = ''
   LZEILE = LZEILE || LEFT(STRIP(TABSCHEMA) || '.' || ,
                           STRIP(TABNAME), 32. ' ')
   LZEILE = LZEILE LEFT(DATAPARTITIONNAME, 10, ' ')
   LZEILE = LZEILE RIGHT(DATAPARTITIONID, 3, ' ')
   LZEILE = LZEILE RIGHT(SEQNO, 3, ' ')
   LZEILE = LZEILE RIGHT(TBSPACEID, 4, ' ')
   LZEILE = LZEILE LEFT(ACCESS_MODE, 2, ' ')
   LZEILE = LZEILE LEFT(STATUS, 6, ' ')
   LZEILE = LZEILE LEFT(LOWINCLUSIVE, 2, ' ')
   LZEILE = LZEILE LEFT(HIGHINCLUSIVE, 2, ' ')
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3

Return

LIST_MQT:
CNR = 2
SNR = CNR

WHERELIST    = ""
CALL MAKE_WHERELIST "CREATOR", DB2_CREATOR1
CALL MAKE_WHERELIST "NAME", DB2_NAME1
CALL MAKE_WHERELIST "TBSPACE", DB2_TABLESPACE
CALL MAKE_WHERELIST "", "TYPE = 'S'"

SQLSTMT   =  "SELECT CREATOR AS TABSCHEMA  " ,
             "     , NAME    AS TABNAME    " ,
             "     , TYPE                  " ,
             "     , PARENTS               " ,
             "     , CHILDREN              " ,
             "     , SELFREFS              " ,
             "     , INT(CARD) AS CARD  " ,
             "     , TBSPACE               " ,
             "     , INDEX_TBSPACE         " ,
             "     , LONG_TBSPACE          " ,
             "FROM "SYSIBMS".SYSTABLES T2 " ,
             WHERELIST ,
             "ORDER BY 1, 2              " ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 8            /* TABSCHEMA                 */
OUTSQLDA.2.SQLLEN   = 20           /* TABNAME                   */
OUTSQLDA.8.SQLLEN   = 25           /* TBSPACE                   */
OUTSQLDA.9.SQLLEN   = 25           /* INDEX_TBSPACE             */
OUTSQLDA.10.SQLLEN  = 25           /* LONG_TBSPACE              */

DDLTEXT = DDLTEXT "*UZ*"
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
   SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH

   Call EXECUTE_SQL_TEXT_AC3
    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE  = ''
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3

Return

LIST_DIS:

Eingabe.0 = 1
Eingabe.1 = "SELECT * "
ORDER     = ""
WHERELIST    = ""
select
  when DB2_LIST_OBJ  = SYSCATS".TABLESPACES" Then do
       CALL MAKE_WHERELIST "DEFINER", DB2_CREATOR1
       CALL MAKE_WHERELIST "TBSPACE", DB2_NAME1

   End
  when DB2_LIST_OBJ  = SYSCATS".COLUMNS"    Then do
       CALL MAKE_WHERELIST "TABSCHEMA", DB2_CREATOR1
       CALL MAKE_WHERELIST "TABNAME", DB2_NAME1
       CALL MAKE_WHERELIST "COLNAME", DB2_NAME2
   End
  when DB2_LIST_OBJ  = SYSCATS".DATAPARTITIONS" Then do
       CALL MAKE_WHERELIST "TABSCHEMA", DB2_CREATOR1
       CALL MAKE_WHERELIST "TABNAME", DB2_NAME1
       CALL MAKE_WHERELIST "DATAPARTITIONNAME", DB2_NAME2
   End
  when DB2_LIST_OBJ  = SYSCATS".COLIDENTATTRIBUTES" Then Do
       CALL MAKE_WHERELIST "TABSCHEMA", DB2_CREATOR1
       CALL MAKE_WHERELIST "TABNAME", DB2_NAME1
       CALL MAKE_WHERELIST "COLNAME", DB2_NAME2
   End
  when DB2_LIST_OBJ  = SYSCATS".COLDIST"    Then do
       CALL MAKE_WHERELIST "TABSCHEMA", DB2_CREATOR1
       CALL MAKE_WHERELIST "TABNAME", DB2_NAME1
       CALL MAKE_WHERELIST "COLNAME", DB2_NAME2
   End
  when DB2_LIST_OBJ  = SYSCATS".COLOPTIONS" Then do
       CALL MAKE_WHERELIST "TABSCHEMA", DB2_CREATOR1
       CALL MAKE_WHERELIST "TABNAME", DB2_NAME1
       CALL MAKE_WHERELIST "COLNAME", DB2_CREATOR2
       CALL MAKE_WHERELIST "OPTION", DB2_NAME2
   End
  when DB2_LIST_OBJ  = SYSCATS".TABOPTIONS" Then do
       CALL MAKE_WHERELIST "TABSCHEMA", DB2_CREATOR1
       CALL MAKE_WHERELIST "TABNAME", DB2_NAME1
       CALL MAKE_WHERELIST "OPTION", DB2_NAME2
   End
  when DB2_LIST_OBJ  = SYSCATS".SERVERS"    Then do
       CALL MAKE_WHERELIST "SERVERNAME", DB2_NAME1
       CALL MAKE_WHERELIST "WRAPNAME", DB2_NAME2
   End
  when DB2_LIST_OBJ  = SYSCATS".SERVEROPTIONS" Then do
       CALL MAKE_WHERELIST "SERVERNAME", DB2_NAME1
       CALL MAKE_WHERELIST "WRAPNAME", DB2_NAME2
   End
  when DB2_LIST_OBJ  = SYSCATS".USEROPTIONS" Then do
       CALL MAKE_WHERELIST "SERVERNAME", DB2_CREATOR1
       CALL MAKE_WHERELIST "OPTION", DB2_NAME1
   End
  when DB2_LIST_OBJ  = SYSCATS".WRAPPERS" Then do
       CALL MAKE_WHERELIST "WRAPNAME", DB2_NAME1
   End
  when DB2_LIST_OBJ  =  SYSCATS".WRAPOPTIONS"     Then do
       CALL MAKE_WHERELIST "WRAPNAME", DB2_NAME1
   End
  when DB2_LIST_OBJ  = SYSCATS".INDEXES"    Then do
       CALL MAKE_WHERELIST "INDSCHEMA", DB2_CREATOR1
       CALL MAKE_WHERELIST "INDNAME", DB2_NAME1
   End
  when DB2_LIST_OBJ  = SYSCATS".INDEXAUTH" Then do
       CALL MAKE_WHERELIST "INDSCHEMA", DB2_CREATOR1
       CALL MAKE_WHERELIST "INDNAME", DB2_NAME1
       CALL MAKE_WHERELIST "GRANTOR", DB2_CREATOR2
       CALL MAKE_WHERELIST "GRANTEE", DB2_NAME2
   End
  when DB2_LIST_OBJ  = SYSCATS".INDEXAUTH" Then do
       CALL MAKE_WHERELIST "INDSCHEMA", DB2_CREATOR1
       CALL MAKE_WHERELIST "INDNAME", DB2_NAME1
       CALL MAKE_WHERELIST "GRANTOR", DB2_CREATOR2
       CALL MAKE_WHERELIST "GRANTEE", DB2_NAME2
   End
  when DB2_LIST_OBJ  = SYSCATS".INDEXCOLUSE" Then do
       CALL MAKE_WHERELIST "INDSCHEMA", DB2_CREATOR1
       CALL MAKE_WHERELIST "INDNAME", DB2_NAME1
       CALL MAKE_WHERELIST "COLNAME", DB2_NAME2
   End
  when DB2_LIST_OBJ  = "ADMIN_GET_INDEX_INFO" Then do
       DB2_LIST_OBJ  = "TABLE ("SYSPROCA".ADMIN_GET_INDEX_INFO" || ,
                       "('I', " ,
                       "'"DB2_CREATOR1"', " ,
                       "'"DB2_NAME1"'     " ,
                       ")) AS IINFO  "

       CALL MAKE_WHERELIST "INDSCHEMA", DB2_CREATOR1
       CALL MAKE_WHERELIST "INDNAME", DB2_NAME1
       CALL MAKE_WHERELIST "TABSCHEMA", DB2_CREATOR2
       CALL MAKE_WHERELIST "TABNAME", DB2_NAME2
   End
  when DB2_LIST_OBJ  = "ADMIN_GET_INDEX_COMPRESS_INFO" Then do
       DB2_LIST_OBJ  = "TABLE ("SYSPROCA".ADMIN_GET_INDEX_COMPRESS_INFO",
                       "('I', " ,
                       "'"DB2_CREATOR1"', " ,
                       "'"DB2_NAME1"',    " ,
                       "-2,               " ,
                       "-2                " ,
                       ")) AS IINFO  "
       CALL MAKE_WHERELIST "INDSCHEMA", DB2_CREATOR1
       CALL MAKE_WHERELIST "INDNAME", DB2_NAME1
       CALL MAKE_WHERELIST "TABSCHEMA", DB2_CREATOR2
       CALL MAKE_WHERELIST "TABNAME", DB2_NAME2
   End
  when DB2_LIST_OBJ  = SYSCATS".REFERENCES" THEN DO
       CALL MAKE_WHERELIST "TABSCHEMA", DB2_CREATOR1
       CALL MAKE_WHERELIST "TABNAME", DB2_NAME1
       CALL MAKE_WHERELIST "CONSTNAME", DB2_NAME2
   End
  when DB2_LIST_OBJ  = SYSCATS".TRIGGERS"    THEN DO
       CALL MAKE_WHERELIST "TRIGSCHEMA", DB2_CREATOR1
       CALL MAKE_WHERELIST "TRIGNAME", DB2_NAME1
   End
  when DB2_LIST_OBJ  = SYSCATS".BUFFERPOOLS" THEN DO
       CALL MAKE_WHERELIST "BPNAME", DB2_NAME1
   End
  when DB2_LIST_OBJ  = SYSIBMA".BP_HITRATIO" THEN DO
       CALL MAKE_WHERELIST "BP_NAME", DB2_NAME1
   End
  when DB2_LIST_OBJ  = SYSIBMA".BP_READ_IO" THEN DO
       CALL MAKE_WHERELIST "BP_NAME", DB2_NAME1
   End
  when DB2_LIST_OBJ  = SYSIBMA".BP_WRITE_IO" THEN DO
       CALL MAKE_WHERELIST "BP_NAME", DB2_NAME1
   End
  when DB2_LIST_OBJ  = SYSIBMA".MON_BP_UTILIZATION" Then Do
       CALL MAKE_WHERELIST "BP_NAME", DB2_NAME1
   End
  when DB2_LIST_OBJ  = SYSIBMA".SNAPBP"               Then Do
       CALL MAKE_WHERELIST "BP_NAME", DB2_NAME1
   End
  when DB2_LIST_OBJ  = SYSIBMA".SNAPBP_PART"           Then Do
       CALL MAKE_WHERELIST "BP_NAME", DB2_NAME1
   End
  when DB2_LIST_OBJ  = SYSIBMA".ADMINTABINFO" THEN DO
       DB2_LIST_OBJ  =  "TABLE("SYSPROCA".ADMIN_GET_TAB_INFO_V97(" ,
          "'" || DB2_CREATOR1 || "'" "," ,
          "'" || DB2_NAME1 || "')" ") T1 " ,
          ""
       CALL MAKE_WHERELIST "TABSCHEMA", DB2_CREATOR1
       CALL MAKE_WHERELIST "TABNAME", DB2_NAME1
   End
  when DB2_LIST_OBJ  = SYSCATS".ROUTINES" THEN DO
       CALL MAKE_WHERELIST "ROUTINESCHEMA", DB2_CREATOR1
       CALL MAKE_WHERELIST "ROUTINENAME", DB2_NAME1
       CALL MAKE_WHERELIST "SPECIFICNAME", DB2_NAME2
   End
  WHEN DB2_LIST_OBJ  = SYSCATS".PROCEDURES" THEN DO
       CALL MAKE_WHERELIST "PROCSCHEMA", DB2_CREATOR1
       CALL MAKE_WHERELIST "PROCNAME", DB2_NAME1
       CALL MAKE_WHERELIST "SPECIFICNAME", DB2_NAME2
   End
  WHEN DB2_LIST_OBJ  = SYSCATS".PROCPARMS" THEN DO
       CALL MAKE_WHERELIST "PROCSCHEMA", DB2_CREATOR1
       CALL MAKE_WHERELIST "PROCNAME", DB2_NAME1
       CALL MAKE_WHERELIST "SPECIFICNAME", DB2_CREATOR2
       CALL MAKE_WHERELIST "ORDINAL", DB2_NAME2
   End
  WHEN DB2_LIST_OBJ  = SYSCATS".FUNCTIONS" THEN DO
       CALL MAKE_WHERELIST "FUNCSCHEMA", DB2_CREATOR1
       CALL MAKE_WHERELIST "FUNCNAME", DB2_NAME1
       CALL MAKE_WHERELIST "SPECIFICNAME", DB2_NAME2
   End
  WHEN DB2_LIST_OBJ  = SYSCATS".FUNCPARMS" THEN DO
       CALL MAKE_WHERELIST "FUNCSCHEMA", DB2_CREATOR1
       CALL MAKE_WHERELIST "FUNCNAME", DB2_NAME1
       CALL MAKE_WHERELIST "SPECIFICNAME", DB2_NAME2
   End
  WHEN DB2_LIST_OBJ  = SYSCATS".FUNCDEP"    THEN DO
       CALL MAKE_WHERELIST "FUNCSCHEMA", DB2_CREATOR1
       CALL MAKE_WHERELIST "FUNCNAME", DB2_NAME1
   End
  when DB2_LIST_OBJ  = SYSCATS".VIEWS"      THEN DO
       CALL MAKE_WHERELIST "VIEWSCHEMA", DB2_CREATOR1
       CALL MAKE_WHERELIST "VIEWNAME", DB2_NAME1
   End
  when DB2_LIST_OBJ  = SYSCATS".SEQUENCES" THEN DO
       CALL MAKE_WHERELIST "SEQSCHEMA", DB2_CREATOR1
       CALL MAKE_WHERELIST "SEQNAME", DB2_NAME1
   End
  when DB2_LIST_OBJ  = SYSCATS".DATATYPES" THEN DO
       CALL MAKE_WHERELIST "TYPESCHEMA", DB2_CREATOR1
       CALL MAKE_WHERELIST "TYPENAME", DB2_NAME1
   End
  when DB2_LIST_OBJ  = SYSCATS".DBAUTH"    THEN DO
       CALL MAKE_WHERELIST "GRANTOR", DB2_NAME1
       CALL MAKE_WHERELIST "GRANTEE", DB2_NAME2
   End
  when DB2_LIST_OBJ  = SYSCATS".TABAUTH"    THEN DO
       CALL MAKE_WHERELIST "TABSCHEMA", DB2_CREATOR1
       CALL MAKE_WHERELIST "TABNAME", DB2_NAME1
       CALL MAKE_WHERELIST "GRANTOR", DB2_CREATOR2
       CALL MAKE_WHERELIST "GRANTEE", DB2_NAME2
   End
  when DB2_LIST_OBJ  = SYSCATS".PACKAGES" THEN DO
       DB2_NAME2 = such2
       CALL MAKE_WHERELIST "PKGSCHEMA", DB2_CREATOR1
       CALL MAKE_WHERELIST "PKGNAME", DB2_NAME1
       CALL MAKE_WHERELIST "PKGVERSION", DB2_NAME2
   End
  when DB2_LIST_OBJ  = SYSIBMA".SNAPTBSP_PART" then do
       CALL MAKE_WHERELIST "TBSP_NAME", DB2_NAME1
   End
  when DB2_LIST_OBJ  = SYSIBMA".SNAPTBSP" THEN DO
       CALL MAKE_WHERELIST "TBSP_NAME", DB2_NAME1
   End
  when DB2_LIST_OBJ  = SYSIBMA".SNAPDB"     THEN DO
       NOP
   End
  when DB2_LIST_OBJ  = SYSIBMA".SNAPDBM"    THEN DO
       NOP
   End
  when DB2_LIST_OBJ  = SYSCATS".STATEMENTS" THEN DO
       PARSE VALUE SUCH1 WITH DB2_CREATOR1 '.' DB2_NAME1 ' ' DB2_PGVER
       PARSE VALUE SUCH2 WITH DB2_STMTNO ' ' DB2_SECTNO ' ' DB2_SEQNO

       CALL MAKE_WHERELIST "PKGSCHEMA", Strip(DB2_CREATOR1)
       CALL MAKE_WHERELIST "PKGNAME", Strip(DB2_NAME1)
       CALL MAKE_WHERELIST "VERSION", Strip(DB2_PGVER)
       CALL MAKE_WHERELIST "STMTNO", DB2_STMTNO, "NUM"
       CALL MAKE_WHERELIST "SECTNO", DB2_SECTNO, "NUM"
       CALL MAKE_WHERELIST "SEQNO", DB2_SEQNO, "NUM"
   End
  when DB2_LIST_OBJ  = SYSCATS".WORKLOADS" THEN DO
       CALL MAKE_WHERELIST "WORKLOADNAME", DB2_NAME1
   End
  when DB2_LIST_OBJ  = SYSCATS".CHECKS"     THEN DO
       CALL MAKE_WHERELIST "OWNER", DB2_CREATOR1
       CALL MAKE_WHERELIST "CONSTNAME", DB2_NAME1
   End
  when DB2_LIST_OBJ  = "TABLE (MON_GET_TABLESPACE('',-2)) AS T" Then
    Do
       CALL MAKE_WHERELIST "TBSP_NAME", DB2_NAME1
   End
  when DB2_LIST_OBJ  = SYSIBMA".CONTAINER_UTILIZATION"    Then do
       CALL MAKE_WHERELIST "TBSP_NAME", DB2_NAME1
       CALL MAKE_WHERELIST "TBSP_ID", DB2_NAME2, "NUM"
       CALL MAKE_WHERELIST "CONTAINER_ID", DB2_NAME3, "NUM"
   End
  when DB2_LIST_OBJ  = SYSIBMA".MON_TBSP_UTILIZATION"     Then do
       CALL MAKE_WHERELIST "TBSP_NAME", DB2_NAME1
   End
  when DB2_LIST_OBJ  = SYSIBMA".TBSP_UTILIZATION"         Then do
       CALL MAKE_WHERELIST "TBSP_NAME", DB2_NAME1
   End
  when DB2_LIST_OBJ  = SYSCATS".EVENTMONITORS" THEN DO
       CALL MAKE_WHERELIST "EVMONNAME", DB2_NAME1
   End
  when DB2_LIST_OBJ  = SYSCATS".EVENTS"       THEN DO
       CALL MAKE_WHERELIST "EVMONNAME", DB2_NAME1
   End
  when DB2_LIST_OBJ  = SYSCATS".EVENTTABLES" THEN DO
       CALL MAKE_WHERELIST "EVMONNAME", DB2_NAME1
   End
  when DB2_LIST_OBJ  = SYSCATS".VARIABLES" THEN DO
       CALL MAKE_WHERELIST "VARSCHEMA", DB2_CREATOR1
       CALL MAKE_WHERELIST "VARMODULENAME", DB2_NAME1
       CALL MAKE_WHERELIST "VARNAME", DB2_NAME2
   End
  when DB2_LIST_OBJ  = SYSCATS".VARIABLEDEP" THEN DO
       CALL MAKE_WHERELIST "VARSCHEMA", DB2_CREATOR1
       CALL MAKE_WHERELIST "VARMODULENAME", DB2_NAME1
       CALL MAKE_WHERELIST "VARNAME", DB2_NAME2
   End
  when DB2_LIST_OBJ  = SYSIBMA".ENV_PROD_INFO " Then do
       CALL MAKE_WHERELIST "INSTALLED_PROD", DB2_NAME1
   End
  when DB2_LIST_OBJ  =  SYSIBMA".ENV_INST_INFO" Then do
       CALL MAKE_WHERELIST "INST_NAME", DB2_NAME1
   End
  when DB2_LIST_OBJ  = SYSIBMA".DBMCFG"           Then do
       CALL MAKE_WHERELIST "NAME", DB2_NAME1
   End
  when DB2_LIST_OBJ  =  SYSIBMA".DBCFG"           Then do
       CALL MAKE_WHERELIST "NAME", DB2_NAME1
   End
  when DB2_LIST_OBJ  =  SYSIBMA".REG_VARIABLES" Then do
       CALL MAKE_WHERELIST "DBPARTITIONNUM", DB2_CREATOR1, "NUM"
       CALL MAKE_WHERELIST "REG_VAR_NAME", DB2_NAME1
   End
  when DB2_LIST_OBJ  =  SYSCATS".ROLES"           Then do
       CALL MAKE_WHERELIST "ROLENAME", DB2_NAME1
       CALL MAKE_WHERELIST "ROLEID", DB2_NAME2, "NUM"
   End
  when DB2_LIST_OBJ  =  SYSCATS".COLGROUPS"       Then do
       CALL MAKE_WHERELIST "COLGROUPSCHEMA", DB2_CREATOR1
       CALL MAKE_WHERELIST "COLGROUPNAME", DB2_NAME1
   End
  when DB2_LIST_OBJ  =  SYSCATS".INVALIDOBJECTS" Then do
       CALL MAKE_WHERELIST "OBJECTSCHEMA", DB2_CREATOR1
       CALL MAKE_WHERELIST "OBJECTNAME", DB2_NAME1
       CALL MAKE_WHERELIST "OBJECTMODULENAME", DB2_CREATOR2
       CALL MAKE_WHERELIST "ROUTINENAME", DB2_NAME2
   End
  WHEN DB2_LIST_OBJ  =  SYSIBMA".SNAPUTIL"     THEN DO
       DB2_LIST_OBJ  =  SYSIBMA".SNAPUTIL UT ",
           "INNER JOIN "SYSIBMA".SNAPUTIL_PROGRESS PG " ,
           "ON UT.UTILITY_ID = PG.UTILITY_ID "
       CALL MAKE_WHERELIST "UT.UTILITY_ID", DB2_NAME1, "NUM"
   End
  WHEN DB2_LIST_OBJ  =  SYSIBMA".SNAPUTIL_PROGRESS" THEN DO
       CALL MAKE_WHERELIST "UTILITY_ID", DB2_NAME1, "NUM"
   End
  WHEN DB2_LIST_OBJ  =  SYSIBMA".DB_HISTORY" THEN DO
       CALL MAKE_WHERELIST "EID", DB2_NAME1, "NUM"
   End
  WHEN DB2_LIST_OBJ  =  SYSIBMA".SNAPTAB"      THEN DO
       CALL MAKE_WHERELIST "TABSCHEMA", DB2_CREATOR1
       CALL MAKE_WHERELIST "TABNAME", DB2_NAME1
   End
  WHEN DB2_LIST_OBJ  =  SYSIBMA".SNAPTAB_REORG" THEN DO
       CALL MAKE_WHERELIST "TABSCHEMA", DB2_CREATOR1
       CALL MAKE_WHERELIST "TABNAME", DB2_NAME1
   End
  WHEN DB2_LIST_OBJ  =  ""SYSPROCA".PD_GET_LOG_MSGS" THEN DO
       DB2_LIST_OBJ  =  "TABLE("SYSPROCA".PD_GET_LOG_MSGS(" ,
            "CURRENT_TIMESTAMP - 10 year )) AS MSGS "
       CALL MAKE_WHERELIST "INSTANCENAME", DB2_CREATOR1
       CALL MAKE_WHERELIST "DBNAME", DB2_NAME1
       CALL MAKE_WHERELIST "TIMESTAMP", SUCH2
   End
  WHEN DB2_LIST_OBJ  =  SYSIBMA".LOCKS_HELD" Then do
       CALL MAKE_WHERELIST "AGENT_ID", DB2_NAME1, "NUM"
   End
  WHEN DB2_LIST_OBJ  =  SYSIBMA".SNAPAPPL_INFO" Then do
       CALL MAKE_WHERELIST "AGENT_ID", DB2_NAME1, "NUM"
   End
  WHEN DB2_LIST_OBJ  =  SYSIBMA".ENV_FEATURE_INFO" Then do
       CALL MAKE_WHERELIST "FEATURE_NAME", DB2_NAME1
   End
  WHEN DB2_LIST_OBJ  =  SYSIBMA".SNAPAPPL" Then do
       CALL MAKE_WHERELIST "AGENT_ID", DB2_NAME1, "NUM"
   End
  WHEN DB2_LIST_OBJ  =  SYSIBMA".PRIVILEGES" Then do
       CALL MAKE_WHERELIST "OBJECTSCHEMA", DB2_CREATOR1
       CALL MAKE_WHERELIST "OBJECTNAME", DB2_NAME1
       CALL MAKE_WHERELIST "AUTHID", DB2_NAME2
   End
  WHEN DB2_LIST_OBJ  =  SYSCATS".STOGROUPS"       Then Do
       CALL MAKE_WHERELIST "SGNAME", DB2_NAME1
       CALL MAKE_WHERELIST "SGID", DB2_NAME2, "NUM"
   End
  WHEN DB2_LIST_OBJ  =  SYSCATS".SCHEMATA"       Then Do
       CALL MAKE_WHERELIST "OWNER", DB2_CREATOR1
       CALL MAKE_WHERELIST "SCHEMANAME", DB2_NAME1
   End
  WHEN DB2_LIST_OBJ  =  "ADMIN_GET_STORAGE_PATHS" Then Do
       DB2_LIST_OBJ  = "TABLE(ADMIN_GET_STORAGE_PATHS(NULL, NULL))"
       CALL MAKE_WHERELIST "STORAGE_GROUP_NAME", DB2_NAME1
       CALL MAKE_WHERELIST "STORAGE_GROUP_ID", DB2_NAME2, "NUM"
       CALL MAKE_WHERELIST "DB_STORAGE_PATH_ID", DB2_NAME3, "NUM"
   End
  WHEN DB2_LIST_OBJ  =  "DB_MEMBERS" Then do
       DB2_LIST_OBJ  = "TABLE("SYSPROCA".DB_MEMBERS()) MEM "
       CALL MAKE_WHERELIST "MEM.MEMBER_NUMBER", DB2_NAME1, "NUM"
   End
  WHEN DB2_LIST_OBJ  =  SYSCATS".CONTROLS" Then do
       CALL MAKE_WHERELIST "CONTROLSCHEMA", DB2_CREATOR1
       CALL MAKE_WHERELIST "CONTROLNAME", DB2_NAME1
   End
  WHEN DB2_LIST_OBJ  =  SYSIBMA".MON_LOCKWAITS" Then do
       CALL MAKE_WHERELIST "LOCK_NAME", DB2_NAME1
       CALL MAKE_WHERELIST "HLD_APPLICATION_HANDLE", DB2_CREATOR2
       CALL MAKE_WHERELIST "REQ_APPLICATION_HANDLE", DB2_NAME2
   End
  WHEN DB2_LIST_OBJ  =  SYSIBMS".SYSVERSIONS"     Then do
       CALL MAKE_WHERELIST "VERSION_TIMESTAMP", DB2_NAME1
   End
  Otherwise do
       CALL MAKE_WHERELIST "TABSCHEMA", DB2_CREATOR1
       CALL MAKE_WHERELIST "TABNAME", DB2_NAME1
   End
End

Eingabe.1 = Eingabe.1 "FROM " DB2_LIST_OBJ WHERELIST ORDER
Eingabe.1 = Eingabe.1

DROP AUSGABE.

CNR = 1
SNR = CNR

CALL EXECUTE_SQL_DYNAMIC_AC3
Call OPEN_COLTB

DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || SUBSTR("COLName", 1, 26)
DDLTEXT = DDLTEXT SUBSTR("Col Value", 1, 18)
DDLTEXT = DDLTEXT "-NR"

DO ai = 1 TO ausgabe.0
   DO ci = 1 TO words(cols)
      If Ausgabe.0 > 1 Then do
         IVAL = "b=AUSGABE.ai." ||  SPACE(word(cols, CI))
         INTERPRET IVAL
       End
      Else do
         B=OUTSQLDA.CI.SQLDATA
       End
   /* IVAL = "B=OUTSQLDA.CI.SQLDATA"  ; INTERPRET IVAL */

      L = Left(word(Cols, ci), 25) || ":"
      if b = "" Then B = " "
      do while length(b) > 0
         LZEILE  = l Substr(b, 1, 45)
         CALL ADD_TABLE_LUWTABLE
         L = '..........................'
         b = substr(b, 46)
       End
    END
 END

CALL CLOSE_CURSOR_AC3
RETURN


LIST_NN:
CNR = 3
SNR = CNR

WHERELIST    = ""
CALL MAKE_WHERELIST "TABSCHEMA", DB2_CREATOR1
CALL MAKE_WHERELIST "TABNAME", DB2_NAME1
CALL MAKE_WHERELIST "SERVERNAME", DB2_NAME2

SQLSTMT   =  "SELECT TABSCHEMA    " ,
             "     , TABNAME      " ,
             "     , SERVERNAME   ",
             "     , REMOTE_SCHEMA",
             "     , REMOTE_TABLE ",
             "     , REMOTE_TYPE  ",
             "     , STATUS       ",
             "FROM "SYSCATS".NICKNAMES T1 " ,
             WHERELIST ,
             "ORDER BY 1, 2              " ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 10           /* TABSCHEMA                 */
OUTSQLDA.2.SQLLEN   = 26           /* TABNAME                   */
OUTSQLDA.3.SQLLEN   = 15           /* SERVERNAME                */
OUTSQLDA.4.SQLLEN   = 13           /* REMOTE_SCHEMA             */
OUTSQLDA.5.SQLLEN   = 26           /* REMOTE_TABLE              */

DDLTEXT = DDLTEXT "*UZ*"
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
   SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
   Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End

   LZEILE  = ''
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3

RETURN

LIST_TABOPT:
CNR = 3
SNR = CNR

WHERELIST    = ""
CALL MAKE_WHERELIST "TABSCHEMA", DB2_CREATOR1
CALL MAKE_WHERELIST "TABNAME", DB2_NAME1

SQLSTMT   =  "SELECT TABSCHEMA    " ,
             "     , TABNAME      " ,
             "     , OPTION       ",
             "     , SETTING      ",
             "FROM "SYSCATS".TABOPTIONS T1 " ,
             WHERELIST ,
             "ORDER BY 1, 2              " ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   =  9           /* TABSCHEMA                 */
OUTSQLDA.2.SQLLEN   = 18           /* TABNAME                   */
OUTSQLDA.3.SQLLEN   = 20           /* OPTION                    */
OUTSQLDA.4.SQLLEN   = 20           /* SETTING                   */

DDLTEXT = DDLTEXT "*UZ*"
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
   SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End

   LZEILE  = ''
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3

RETURN


LIST_SE:
CNR = 5
SNR = CNR

WHERELIST    = ""
CALL MAKE_WHERELIST "SEQSCHEMA", DB2_CREATOR1
CALL MAKE_WHERELIST "SEQNAME", DB2_NAME1
CALL MAKE_WHERELIST "SEQID", DB2_NAME2, "NUM"
CALL MAKE_WHERELIST "COLA.TABSCHEMA", DB2_CREATOR3
CALL MAKE_WHERELIST "COLA.TABNAME", DB2_NAME3
CALL MAKE_WHERELIST "COLA.COLNAME", DB2_CREATOR4

SQLSTMT   =  "SELECT SE.SEQSCHEMA        " ,
             "     , SE.SEQNAME          " ,
             "     , SE.SEQID            " ,
             "     , SE.SEQTYPE          " ,
             "     , SE.INCREMENT        " ,
             "     , SE.START            " ,
             "     , SE.MAXVALUE         " ,
             "     , SE.MINVALUE         " ,
             "     , SE.NEXTCACHEFIRSTVALUE" ,
             "     , SE.CYCLE            " ,
             "     , SE.CACHE            " ,
             "     , SE.ORDER            " ,
             "     , SE.DATATYPEID       " ,
             "     , SE.SOURCETYPEID     " ,
             "     , SE.CREATE_TIME      " ,
             "     , SE.ALTER_TIME       " ,
             "     , SE.PRECISION        " ,
             "     , SE.ORIGIN           " ,
             "     , COLA.TABSCHEMA      " ,
             "     , COLA.TABNAME        " ,
             "     , COLA.COLNAME        " ,
             "     , SE.REMARKS          " ,
             "FROM "SYSCATS".SEQUENCES SE " ,
             "Left outer join "SYSCATS".COLIDENTATTRIBUTES COLA" ,
             "ON   COLA.SEQID  = SE.SEQID " ,
             WHERELIST ,
             "ORDER BY 1, 2              " ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 10           /* SEQSCHEMA                 */
OUTSQLDA.2.SQLLEN   = 20           /* SEQNAME                   */
OUTSQLDA.19.SQLLEN  = 10           /* TABSCHEMA                 */
OUTSQLDA.20.SQLLEN  = 30           /* TABNAME                   */
OUTSQLDA.21.SQLLEN  = 30           /* COLNAME                   */
OUTSQLDA.22.SQLLEN  = 70           /* REMARKS                   */

DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || SUBSTR("Sequence", 1, 30)
DDLTEXT = DDLTEXT SUBSTR("T",   1, 1)
DDLTEXT = DDLTEXT SUBSTR("ID",  1, 5)
DDLTEXT = DDLTEXT SUBSTR("MINVAL",  1,11)
DDLTEXT = DDLTEXT SUBSTR("MAXVAL",  1,11)
DDLTEXT = DDLTEXT SUBSTR("NEXTVAL",  1,9 )
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
   SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
   Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End

   LZEILE  = ''
   LZEILE = LZEILE || SUBSTR(Strip(SEQSCHEMA) || "." || ,
                             Strip(SEQNAME), 1, 30)
   LZEILE = LZEILE SUBSTR(SEQTYPE,1, 1)
   LZEILE = LZEILE SUBSTR(SEQID,  1, 5)
   LZEILE = LZEILE SUBSTR(MINVALUE, 1, 11)
   LZEILE = LZEILE SUBSTR(MAXVALUE, 1, 11)
   LZEILE = LZEILE SUBSTR(NEXTCACHEFIRSTVALUE, 1, 9 )
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3

RETURN

LIST_FN:
CNR = 5
SNR = CNR

WHERELIST    = ""
CALL MAKE_WHERELIST "FUNCSCHEMA", DB2_CREATOR1
CALL MAKE_WHERELIST "FUNCNAME", DB2_NAME1

SQLSTMT   =  "SELECT FUNCSCHEMA       " ,
             "     , FUNCNAME         " ,
             "     , SPECIFICNAME     " ,
             "     , LANGUAGE         " ,
             "     , PARM_COUNT       " ,
             "     , REMARKS          " ,
             "FROM "SYSCATS".FUNCTIONS T1 " ,
             WHERELIST ,
             "ORDER BY 1, 2              " ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 8            /* FUNCSCHEMA                */
OUTSQLDA.2.SQLLEN   = 20           /* FUNCNAME                  */
OUTSQLDA.3.SQLLEN   = 31           /* SPECIFICNAME              */
OUTSQLDA.4.SQLLEN   = 8            /* LANGUAGE                  */
OUTSQLDA.6.SQLLEN   = 40           /* REMARKS                   */

DDLTEXT = DDLTEXT "*UZ*"
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
   SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
   Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End

   LZEILE  = ''
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3

RETURN

LIST_PR:
CNR = 5
SNR = CNR

WHERELIST    = ""
CALL MAKE_WHERELIST "PROCSCHEMA", DB2_CREATOR1
CALL MAKE_WHERELIST "PROCNAME", DB2_NAME1

SQLSTMT   =  "SELECT PROCSCHEMA       " ,
             "     , PROCNAME         " ,
             "     , SPECIFICNAME     " ,
             "     , LANGUAGE         " ,
             "     , VALID            " ,
             "     , PARM_COUNT       " ,
             "     , PARM_STYLE       " ,
             "     , REMARKS          " ,
             "FROM "SYSCATS".PROCEDURES T1 " ,
             WHERELIST ,
             "ORDER BY 1, 2              " ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB
OUTSQLDA.1.SQLLEN   = 8            /* PROCSCHEMA                */
OUTSQLDA.2.SQLLEN   = 20           /* PROCNAME                  */
OUTSQLDA.3.SQLLEN   = 31           /* SPECIFICNAME              */
OUTSQLDA.8.SQLLEN   = 40           /* REMARKS                   */

DDLTEXT = DDLTEXT "*UZ*"
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
   SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
   Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End

   LZEILE  = ''
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3

RETURN

LIST_PPARM:
CNR = 5
SNR = CNR

WHERELIST    = ""
CALL MAKE_WHERELIST "PROCSCHEMA", DB2_CREATOR1
CALL MAKE_WHERELIST "PROCNAME", DB2_NAME1
CALL MAKE_WHERELIST "SPECIFICNAME", DB2_NAME1

SQLSTMT   =  "SELECT PROCSCHEMA       " ,
             "     , PROCNAME         " ,
             "     , SPECIFICNAME     " ,
             "     , SERVERNAME       " ,
             "     , ORDINAL          " ,
             "     , PARMNAME         " ,
             "     , TYPESCHEMA       " ,
             "     , TYPENAME         " ,
             "     , TYPEID           " ,
             "     , SOURCETYPEID     " ,
             "     , NULLS            " ,
             "     , LENGTH           " ,
             "     , SCALE            " ,
             "     , PARM_MODE        " ,
             "     , CODEPAGE         " ,
             "     , DBCS_CODEPAGE    " ,
             "     , AS_LOCATOR       " ,
             "     , TARGET_TYPESCHEMA" ,
             "     , TARGET_TYPENAME  " ,
             "     , SCOPE_TABSCHEMA  " ,
             "     , SCOPE_TABNAME    " ,
             "FROM "SYSCATS".PROCPARMS T1 " ,
             WHERELIST ,
             "ORDER BY PROCSCHEMA, PROCNAME, SPECIFICNAME, ORDINAL" ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 8            /* PROCSCHEMA                */
OUTSQLDA.2.SQLLEN   = 20           /* PROCNAME                  */
OUTSQLDA.3.SQLLEN   = 25           /* SPECIFICNAME              */
OUTSQLDA.4.SQLLEN   = 8            /* SERVERNAME                */
OUTSQLDA.6.SQLLEN   = 20           /* PARMNAME                  */
OUTSQLDA.7.SQLLEN   = 10           /* TYPESCHEMA                */
OUTSQLDA.8.SQLLEN   = 15           /* TYPENAME                  */
OUTSQLDA.18.SQLLEN  = 10           /* TARGET_TYPESCHEMA         */
OUTSQLDA.19.SQLLEN  = 25           /* TARGET_TYPENAME           */
OUTSQLDA.20.SQLLEN  = 10           /* SCOPE_TABSCHEMA           */
OUTSQLDA.21.SQLLEN  = 25           /* SCOPE_TABNAME             */

DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || RIGHT("Ord", 3, ' ')
DDLTEXT = DDLTEXT LEFT("PName",  10, ' ')
DDLTEXT = DDLTEXT LEFT("Type",  10, ' ')
DDLTEXT = DDLTEXT RIGHT("Length",  10, ' ')
DDLTEXT = DDLTEXT LEFT("Mode",  4, ' ')
DDLTEXT = DDLTEXT LEFT("codepg",  6, ' ')
DDLTEXT = DDLTEXT LEFT("Procedure", 23, ' ')
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
   SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
   Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End

   LZEILE  = ''
   LZEILE = LZEILE || RIGHT(ORDINAL, 3, '0')
   LZEILE = LZEILE LEFT(PARMNAME, 10, ' ')
   LZEILE = LZEILE LEFT(TYPENAME, 10, ' ')
   LZEILE = LZEILE RIGHT(LENGTH, 10, ' ')
   LZEILE = LZEILE LEFT(PARM_MODE, 4, ' ')
   LZEILE = LZEILE RIGHT(CODEPAGE, 6, ' ')
   LZEILE = LZEILE LEFT(Space(PROCSCHEMA "." PROCNAME, 0), 23, ' ')
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3

RETURN

LIST_RT:
CNR = 5
SNR = CNR

WHERELIST    = ""
CALL MAKE_WHERELIST "ROUTINESCHEMA", DB2_CREATOR1
CALL MAKE_WHERELIST "ROUTINENAME", DB2_NAME1

SQLSTMT   =  "SELECT ROUTINESCHEMA    " ,
             "     , ROUTINENAME      " ,
             "     , ROUTINETYPE      ",
             "     , SPECIFICNAME     " ,
             "     , LANGUAGE         " ,
             "     , VALID            " ,
             "FROM "SYSCATS".ROUTINES T1 " ,
             WHERELIST ,
             "ORDER BY 1, 2              " ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 10           /* ROUTINESCHEMA             */
OUTSQLDA.2.SQLLEN   = 20           /* ROUTINENAME               */
OUTSQLDA.3.SQLLEN   = 11           /* ROUTINETYPE               */
OUTSQLDA.4.SQLLEN   = 30           /* SPECIFICNAME              */
OUTSQLDA.5.SQLLEN   = 8            /* LANGUAGE                  */
OUTSQLDA.6.SQLLEN   = 5            /* VALID                     */

DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || SUBSTR("ROUTINE", 1, 30)
DDLTEXT = DDLTEXT SUBSTR("TP ",   1, 3)
DDLTEXT = DDLTEXT SUBSTR("SPEC.NAME",   1, 26)
DDLTEXT = DDLTEXT SUBSTR("LANG",  1, 8)
DDLTEXT = DDLTEXT SUBSTR("V",  1, 1)
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
   SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
   Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End

   LZEILE  = ''
   LZEILE = LZEILE || SUBSTR(Strip(ROUTINESCHEMA) || "." || ,
                             Strip(ROUTINENAME), 1, 30)
   LZEILE = LZEILE SUBSTR(ROUTINETYPE, 1, 3)
   LZEILE = LZEILE SUBSTR(SPECIFICNAME, 1, 26)
   LZEILE = LZEILE SUBSTR(LANGUAGE, 1,  8)
   LZEILE = LZEILE SUBSTR(VALID, 1,  1)
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3

RETURN

LIST_SV:
CNR = 6
SNR = CNR

WHERELIST    = ""
CALL MAKE_WHERELIST "SERVERNAME", DB2_NAME1
CALL MAKE_WHERELIST "WRAPNAME", DB2_NAME2

SQLSTMT   =  "SELECT WRAPNAME         " ,
             "     , SERVERNAME       " ,
             "     , SERVERTYPE       " ,
             "     , SERVERVERSION    " ,
             "     , REMARKS          " ,
             "FROM "SYSCATS".SERVERS T1 " ,
             WHERELIST ,
             "ORDER BY 1, 2              " ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 20           /* WRAPNAME                  */
OUTSQLDA.2.SQLLEN   = 20           /* SERVERNAME                */
OUTSQLDA.3.SQLLEN   = 12           /* SERVERTYPE                */

DDLTEXT = DDLTEXT "*UZ*"
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
   SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
   Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End

   LZEILE  = ''
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3

RETURN

LIST_UOPT:
CNR = 6
SNR = CNR

WHERELIST    = ""
CALL MAKE_WHERELIST "OP.SERVERNAME", DB2_NAME1
CALL MAKE_WHERELIST "SV.WRAPNAME", DB2_NAME2

SQLSTMT   =  "SELECT DISTINCT OP.SERVERNAME       " ,
             "     , OP.AUTHID           " ,
             "     , OP.AUTHIDTYPE       " ,
             "     , OP.OPTION           " ,
             "     , OP.SETTING          " ,
             "FROM "SYSCATS".USEROPTIONS OP " ,
             "INNER JOIN "SYSCATS".SERVERS SV " ,
             "ON   OP.SERVERNAME  = SV.SERVERNAME ",
             WHERELIST ,
             "ORDER BY SERVERNAME        " ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 15           /* SERVERNAME                */
OUTSQLDA.2.SQLLEN   = 10           /* AUTHID                    */
OUTSQLDA.3.SQLLEN   = 8            /* AUTHIDTYPE                */
OUTSQLDA.4.SQLLEN   = 16           /* OPTION                    */
OUTSQLDA.5.SQLLEN   = 20           /* SETTING                   */

DDLTEXT = DDLTEXT "*UZ*"
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
   SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
   Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End

   LZEILE  = ''
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3

RETURN

LIST_WR:
CNR = 7
SNR = CNR

WHERELIST    = ""
CALL MAKE_WHERELIST "WRAPNAME", DB2_NAME1

SQLSTMT   =  "SELECT WRAPNAME         " ,
             "     , WRAPTYPE         " ,
             "     , WRAPVERSION      " ,
             "     , LIBRARY          " ,
             "     , REMARKS          " ,
             "FROM "SYSCATS".WRAPPERS T1 " ,
             WHERELIST ,
             "ORDER BY 1, 2              " ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 25           /* WRAPNAME                  */
OUTSQLDA.4.SQLLEN   = 25           /* LIBRARY                   */
OUTSQLDA.5.SQLLEN   = 25           /* REMARKS                   */

DDLTEXT = DDLTEXT "*UZ*"
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
   SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
   Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End

   LZEILE  = ''
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3

RETURN


LIST_IX:

WHERELIST    = ""
CALL MAKE_WHERELIST "INDSCHEMA", DB2_CREATOR1
CALL MAKE_WHERELIST "INDNAME", DB2_NAME1
CALL MAKE_WHERELIST "TABSCHEMA", DB2_CREATOR2
CALL MAKE_WHERELIST "TABNAME", DB2_NAME2
if Datatype(DB2_TABLESPACE) = "NUM" Then Do
   CALL MAKE_WHERELIST "TBSPACEID", DB2_TABLESPACE, "NUM"
 End

CALL MAKE_WHERELIST "", "UNIQUERULE IN('U', 'D', 'P')"

EINGABE.0  = 1
SQLSTMT    = "SELECT  INDSCHEMA  ",
             "     ,  INDNAME    ",
             "     ,  TABSCHEMA  ",
             "     ,  TABNAME    ",
             "     ,  TBSPACEID  ",
             "     ,  COLNAMES   ",
             "     ,  UNIQUERULE ",
             "     ,  MADE_UNIQUE",
             "     ,  COLCOUNT   ",
             "     ,  INDEXTYPE  ",
             "     ,  COMPRESSION",
             "FROM  "SYSCATS".INDEXES" ,
             WHERELIST ,
             "ORDER BY INDSCHEMA, INDNAME" ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 10           /* INDSCHEMA                 */
OUTSQLDA.2.SQLLEN   = 20           /* INDNAME                   */
OUTSQLDA.3.SQLLEN   = 10           /* TABSCHEMA                 */
OUTSQLDA.4.SQLLEN   = 20           /* TABNAME                   */
OUTSQLDA.6.SQLLEN   = 40           /* COLNAMES                  */

DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || SUBSTR(IXNAME, 1, 27)
DDLTEXT = DDLTEXT "U"
DDLTEXT = DDLTEXT "TPY "
DDLTEXT = DDLTEXT || SUBSTR(TBNAME, 1, 27)
DDLTEXT = DDLTEXT || SUBSTR("COLNAME", 1, 11)
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE  = ''
   XTBNAME = STRIP(INDSCHEMA) || '.' || INDNAME
   LZEILE = LZEILE || SUBSTR(XTBNAME, 1, 27)
   LZEILE = LZEILE UNIQUERULE
   LZEILE = LZEILE INDEXTYPE
   XTBNAME = STRIP(TABSCHEMA) || '.' || TABNAME
   LZEILE = LZEILE || SUBSTR(XTBNAME, 1, 27)
   LZEILE = LZEILE || SUBSTR(COLNAMES, 1, 11)
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

LIST_EV:

WHERELIST    = ""
CALL MAKE_WHERELIST "EVMONNAME", DB2_NAME1

EINGABE.0  = 1
SQLSTMT    = "SELECT  EVMONNAME " ,
             "     ,  TYPE      " ,
             "     ,  FILTER    " ,
             "FROM  "SYSCATS".EVENTS " ,
             WHERELIST ,
             "ORDER BY EVMONNAME         " ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 25           /* EVMONNAME                 */
OUTSQLDA.2.SQLLEN   = 22           /* TYPE                      */
OUTSQLDA.3.SQLLEN   = 20           /* FILTER                    */

DDLTEXT = DDLTEXT "*UZ*"
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"

DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE  = ''
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

LIST_EM:

WHERELIST    = ""
CALL MAKE_WHERELIST "EVMONNAME", DB2_NAME1

EINGABE.0  = 1
SQLSTMT    = "SELECT  EVMONNAME                         " ,
             "     ,  OWNER                             " ,
             "     ,  OWNERTYPE                         " ,
             "     ,  TARGET_TYPE                       " ,
             "     ,  TARGET                            " ,
             "     ,  MAXFILES                          " ,
             "     ,  MAXFILESIZE                       " ,
             "     ,  BUFFERSIZE                        " ,
             "     ,  IO_MODE                           " ,
             "     ,  WRITE_MODE                        " ,
             "     ,  AUTOSTART                         " ,
             "     ,  DBPARTITIONNUM                    " ,
             "     ,  MONSCOPE                          " ,
             "     ,  EVMON_ACTIVATES                   " ,
             "     ,  NODENUM                           " ,
             "     ,  DEFINER                           " ,
             "     ,  REMARKS                           " ,
             "FROM  "SYSCATS".EVENTMONITORS             " ,
             WHERELIST ,
             "ORDER BY EVMONNAME         " ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 25           /* EVMONNAME                 */
OUTSQLDA.2.SQLLEN   = 10           /* OWNER                     */
OUTSQLDA.5.SQLLEN   = 20           /* TARGET                    */
OUTSQLDA.16.SQLLEN  = 20           /* DEFINER                   */
OUTSQLDA.17.SQLLEN  = 20           /* REMARKS                   */

DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || SUBSTR("EVMONNAME", 1, 25)
DDLTEXT = DDLTEXT    SUBSTR("FILES", 1, 5)
DDLTEXT = DDLTEXT    SUBSTR(" FILESZ", 1, 7)
DDLTEXT = DDLTEXT    SUBSTR("WM", 1, 2)
DDLTEXT = DDLTEXT    SUBSTR("AS", 1, 2)
DDLTEXT = DDLTEXT    SUBSTR("ACTIVATES", 1, 9)
DDLTEXT = DDLTEXT    SUBSTR("DEFINER ", 1, 16)
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE = ''
   LZEILE = LZEILE || substr(EVMONNAME, 1, 25)
   LZEILE = LZEILE RIGHT(MAXFILES, 5, ' ')
   LZEILE = LZEILE RIGHT(MAXFILESIZE, 7, ' ')
   LZEILE = LZEILE RIGHT(WRITE_MODE, 2, ' ')
   LZEILE = LZEILE RIGHT(AUTOSTART, 2, ' ')
   LZEILE = LZEILE RIGHT(EVMON_ACTIVATES, 9, ' ')
   LZEILE = LZEILE LEFT(DEFINER, 16, ' ')
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

LIST_ET:

WHERELIST    = ""
CALL MAKE_WHERELIST "EVMONNAME", DB2_NAME1

EINGABE.0  = 1
SQLSTMT    = "SELECT  EVMONNAME     ",
             "     ,  LOGICAL_GROUP " ,
             "     ,  TABSCHEMA     " ,
             "     ,  TABNAME       " ,
             "     ,  PCTDEACTIVATE " ,
             "FROM  "SYSCATS".EVENTTABLES               " ,
             WHERELIST ,
             "ORDER BY EVMONNAME         " ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || SUBSTR("EVMONNAME", 1, 15)
DDLTEXT = DDLTEXT    SUBSTR("LOGIC GRP", 1, 15)
DDLTEXT = DDLTEXT    SUBSTR("TABLE", 1, 25)
DDLTEXT = DDLTEXT    SUBSTR(" PDAC", 1, 5)
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   TB  = STRIP(TABSCHEMA) || '.' || TABNAME
   LZEILE  = ''
   LZEILE = LZEILE || SUBSTR(EVMONNAME, 1, 15)
   LZEILE = LZEILE SUBSTR(LOGICAL_GROUP, 1,            15)
   LZEILE = LZEILE SUBSTR(TB, 1, 25)
   LZEILE = LZEILE RIGHT(PCTDEACTIVATE, 5, ' ')
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

LIST_KC:

WHERELIST    = ""
CALL MAKE_WHERELIST "IC.INDSCHEMA", DB2_CREATOR1
CALL MAKE_WHERELIST "IC.INDNAME", DB2_NAME1
CALL MAKE_WHERELIST "IX.TABSCHEMA", DB2_CREATOR2
CALL MAKE_WHERELIST "IX.TABNAME", DB2_NAME2

EINGABE.0  = 1
SQLSTMT    = "SELECT  IC.INDSCHEMA               " ,
             "      , IC.INDNAME                 " ,
             "      , IC.COLNAME                 " ,
             "      , IC.COLSEQ                  " ,
             "      , IC.COLORDER                " ,
             "      , IC.COLLATIONSCHEMA         " ,
             "      , IC.COLLATIONNAME           " ,
             "      , IX.TABSCHEMA               " ,
             "      , IX.TABNAME                 " ,
             "      , IX.IID                     " ,
             "      , CO.TYPENAME                " ,
             "      , CO.LENGTH                  " ,
             "      , CO.SCALE                   " ,
             "      , CO.COLCARD                 " ,
             "      , CASE WHEN CO.NULLS = 'Y' THEN 'Y' ",
             "             WHEN CO.NULLS = 'N' THEN 'N' ",
             "             ELSE 'Y'                  ",
             "         END NULLS                     " ,
             "      , CASE WHEN CO.DEFAULT IS NOT NULL " ,
             "             THEN 'Y' ELSE 'N'   " ,
             "          END DEFAULT              ",
             "FROM  "SYSCATS".INDEXCOLUSE IC     " ,
             "INNER JOIN "SYSCATS".INDEXES IX    " ,
             "ON  IC.INDSCHEMA  = IX.INDSCHEMA   " ,
             "AND IC.INDNAME    = IX.INDNAME     " ,
             "INNER JOIN "SYSCATS".COLUMNS CO    " ,
             "ON  IX.TABSCHEMA  = CO.TABSCHEMA   " ,
             "AND IX.TABNAME    = CO.TABNAME     " ,
             "AND IC.COLNAME    = CO.COLNAME     " ,
             WHERELIST ,
             "ORDER BY IC.INDSCHEMA, IC.INDNAME, IC.COLSEQ " ,
             ""
CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 10           /* INDSCHEMA                 */
OUTSQLDA.2.SQLLEN   = 20           /* INDNAME                   */
OUTSQLDA.3.SQLLEN   = 27           /* COLNAME                   */
OUTSQLDA.6.SQLLEN   = 10           /* COLLATIONSCHEMA           */
OUTSQLDA.7.SQLLEN   = 15           /* COLLATIONNAME             */
OUTSQLDA.8.SQLLEN   = 10           /* TABSCHEMA                 */
OUTSQLDA.9.SQLLEN   = 28           /* TABNAME                   */
OUTSQLDA.11.SQLLEN  = 20           /* TYPENAME                  */

DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || Substr("IID", 1, 3)
DDLTEXT = DDLTEXT    RIGHT("SEQ", 3, ' ')
DDLTEXT = DDLTEXT    RIGHT("O", 1, ' ')
DDLTEXT = DDLTEXT    SUBSTR("ColNAME", 1, 28)
DDLTEXT = DDLTEXT    SUBSTR("TYPE", 1, 10)
DDLTEXT = DDLTEXT    Right("LEN", 9, ' ')
DDLTEXT = DDLTEXT    Right("ColCard", 9, ' ')
DDLTEXT = DDLTEXT    SUBSTR("ND", 1, 2)
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   If TYPENAME = 'DECIMAL' Then do
        Len = LENGTH || "," Scale
    End
   Else Do
        Len = LENGTH
    End

   LZEILE  = ''
   LZEILE = LZEILE || Right(IID, 3, ' ')
   LZEILE = LZEILE Right(COLSEQ, 3, ' ')
   LZEILE = LZEILE Right(COLORDER, 1, ' ')
   LZEILE = LZEILE SUBSTR(COLNAME,1,            28)
   LZEILE = LZEILE SUBSTR(TYPENAME, 1, 10)
   LZEILE = LZEILE Right(Len, 9, ' ')
   LZEILE = LZEILE Right(COLCARD,            9, ' ')
   LZEILE = LZEILE SUBSTR(NULLS, 1, 1)
   LZEILE = LZEILE || SUBSTR(DEFAULT, 1, 1)
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

LIST_IA:

WHERELIST    = ""
CALL MAKE_WHERELIST "INDSCHEMA", DB2_CREATOR1
CALL MAKE_WHERELIST "INDNAME", DB2_NAME1

EINGABE.0  = 1
SQLSTMT    = "SELECT  GRANTOR       " ,
             "      , GRANTEE       " ,
             "      , INDSCHEMA     " ,
             "      , INDNAME       " ,
             "      , CONTROLAUTH   " ,
             "      , GRANTEETYPE   " ,
             "      , GRANTORTYPE   " ,
             "FROM  "SYSCATS".INDEXAUTH " ,
             WHERELIST ,
             "ORDER BY INDSCHEMA, INDNAME, GRANTOR " ,

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 12           /* GRANTOR                   */
OUTSQLDA.2.SQLLEN   = 12           /* GRANTEE                   */
OUTSQLDA.3.SQLLEN   = 10           /* INDSCHEMA                 */
OUTSQLDA.4.SQLLEN   = 30           /* INDNAME                   */
OUTSQLDA.5.SQLLEN   = 11           /* CONTROLAUTH               */
OUTSQLDA.6.SQLLEN   = 11           /* GRANTEETYPE               */
OUTSQLDA.7.SQLLEN   = 11           /* GRANTORTYPE               */

DDLTEXT = DDLTEXT "*UZ*"
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   XIXNAME = STRIP(INDSCHEMA) || '.' || INDNAME
   LZEILE = ""
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

LIST_PK:

WHERELIST    = ""
CALL MAKE_WHERELIST "INDSCHEMA", DB2_CREATOR1
CALL MAKE_WHERELIST "INDNAME", DB2_NAME1
CALL MAKE_WHERELIST "TABSCHEMA", DB2_CREATOR2
CALL MAKE_WHERELIST "TABNAME", DB2_NAME2
CALL MAKE_WHERELIST "", "UNIQUERULE = 'P'"

EINGABE.0  = 1
SQLSTMT    = "SELECT  INDSCHEMA    " ,
             "     ,  INDNAME      " ,
             "     ,  TABSCHEMA    " ,
             "     ,  TABNAME      " ,
             "      , COLNAMES     " ,
             "      , UNIQUERULE   " ,
             "      , MADE_UNIQUE  " ,
             "      , COLCOUNT     " ,
             "      , INDEXTYPE    " ,
             "FROM  "SYSCATS".INDEXES" ,
             WHERELIST ,
             "ORDER BY INDSCHEMA, INDNAME" ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 10           /* INDSCHEMA                 */
OUTSQLDA.2.SQLLEN   = 28           /* INDNAME                   */
OUTSQLDA.3.SQLLEN   = 10           /* TABSCHEMA                 */
OUTSQLDA.4.SQLLEN   = 28           /* TABNAME                   */
OUTSQLDA.5.SQLLEN   = 37           /* COLNAMES                  */

DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || SUBSTR(IXNAME, 1, 27)
DDLTEXT = DDLTEXT "U"
DDLTEXT = DDLTEXT "TPY "
DDLTEXT = DDLTEXT || SUBSTR(TBNAME, 1, 27)
DDLTEXT = DDLTEXT || SUBSTR("COLNAME", 1, 11)
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE  = ''
   XTBNAME = STRIP(INDSCHEMA) || '.' || INDNAME
   LZEILE = LZEILE || SUBSTR(XTBNAME, 1, 27)
   LZEILE = LZEILE UNIQUERULE
   LZEILE = LZEILE INDEXTYPE
   XTBNAME = STRIP(TABSCHEMA) || '.' || TABNAME
   LZEILE = LZEILE || SUBSTR(XTBNAME, 1, 27)
   LZEILE = LZEILE || SUBSTR(COLNAMES, 1, 11)
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

LIST_VER:

WHERELIST    = ""

EINGABE.0  = 1
SQLSTMT   =  "SELECT VERSIONNUMBER              " ,
             "    ,  VERSION_TIMESTAMP          " ,
             "    ,  AUTHID                     " ,
             "    ,  VERSIONBUILDLEVEL          " ,
             "FROM "SYSIBMS".SYSVERSIONS VER    " ,
              WHERELIST                           ,
             "ORDER BY VERSIONNUMBER, VERSION_TIMESTAMP " ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || SUBSTR("VNR", 1, 10)
DDLTEXT = DDLTEXT SUBSTR("V_TIMESTAMP", 1, 19)
DDLTEXT = DDLTEXT SUBSTR("AUTHID", 1, 25)
DDLTEXT = DDLTEXT SUBSTR("BUILDLEVEL", 1, 15)
DDLTEXT = DDLTEXT "-NR"

DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE = ''
   LZEILE = LZEILE || LEFT(VERSIONNUMBER, 10, " ")
   LZEILE = LZEILE LEFT(VERSION_TIMESTAMP, 19, " ")
   LZEILE = LZEILE LEFT(AUTHID, 25, " ")
   LZEILE = LZEILE LEFT(VERSIONBUILDLEVEL, 15, " ")
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

LIST_NG:

WHERELIST    = ""
CALL MAKE_WHERELIST "NGNAME", DB2_NAME1

SQLSTMT   =  "SELECT NGNAME                     " ,
             "    ,  OWNER                      " ,
             "    ,  OWNERTYPE                  " ,
             "    ,  PMAP_ID                    " ,
             "    ,  REBALANCE_PMAP_ID          " ,
             "    ,  CREATE_TIME                " ,
             "    ,  DEFINER                    " ,
             "    ,  REMARKS                    " ,
             "FROM "SYSCATS".NODEGROUPS  NG     " ,
              WHERELIST                           ,
             "ORDER BY NGNAME                    " ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 20           /* NGNAME                    */
OUTSQLDA.2.SQLLEN   = 10           /* OWNER                     */
OUTSQLDA.6.SQLLEN   = 15           /* CREATE_TIME               */
OUTSQLDA.7.SQLLEN   = 10           /* DEFINER                   */
OUTSQLDA.8.SQLLEN   = 30           /* REMARKS                   */

DDLTEXT = DDLTEXT "*UZ*"
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"

DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE = ''
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

LIST_DPG:

WHERELIST    = ""
CALL MAKE_WHERELIST "DBPGNAME", DB2_NAME1

SQLSTMT   =  "SELECT DBPGNAME                   " ,
             "    ,  OWNER                      " ,
             "    ,  OWNERTYPE                  " ,
             "    ,  PMAP_ID                    " ,
             "    ,  REDISTRIBUTE_PMAP_ID       " ,
             "    ,  CREATE_TIME                " ,
             "    ,  DEFINER                    " ,
             "    ,  REMARKS                    " ,
             "FROM "SYSCATS".DBPARTITIONGROUPS PG " ,
              WHERELIST                           ,
             "ORDER BY DBPGNAME                  " ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 20           /* DBPGNAME                  */
OUTSQLDA.2.SQLLEN   = 10           /* OWNER                     */
OUTSQLDA.7.SQLLEN   = 10           /* DEFINER                   */
OUTSQLDA.8.SQLLEN   = 30           /* REMARKS                   */

DDLTEXT = DDLTEXT "*UZ*"
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"

DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE = ''
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

LIST_SC:

WHERELIST    = ""
CALL MAKE_WHERELIST "SC.OWNER", DB2_CREATOR1
CALL MAKE_WHERELIST "SC.SCHEMANAME", DB2_NAME1

EINGABE.0  = 1
SQLSTMT    =  "SELECT SCHEMANAME                 " ,
              "    ,  OWNER                      " ,
              "    ,  OWNERTYPE                  " ,
              "    ,  DEFINER                    " ,
              "    ,  DEFINERTYPE                " ,
              "    ,  CREATE_TIME                " ,
              "    ,  AUDITPOLICYID              " ,
              "    ,  AUDITPOLICYNAME            " ,
              "    ,  AUDITEXCEPTIONENABLED      " ,
              "    ,  DATACAPTURE                " ,
              "    ,  REMARKS                    " ,
              "FROM "SYSCATS".SCHEMATA SC        " ,
               WHERELIST                           ,
              "ORDER BY OWNER, SCHEMANAME        " ,
              ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB
OUTSQLDA.1.SQLLEN   = 15           /* SCHEMANAME                */
OUTSQLDA.2.SQLLEN   = 15           /* OWNER                     */
OUTSQLDA.4.SQLLEN   = 15           /* DEFINER                   */
OUTSQLDA.8.SQLLEN   = 15           /* AUDITPOLICYNAME           */
OUTSQLDA.10.SQLLEN  = 11           /* DATACAPTURE               */
OUTSQLDA.11.SQLLEN  = 65           /* REMARKS                   */

DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || SUBSTR("Owner", 1, 20)
DDLTEXT = DDLTEXT SUBSTR("Name", 1, 20)
DDLTEXT = DDLTEXT SUBSTR("Type", 1, 4)
DDLTEXT = DDLTEXT SUBSTR("Definer", 1, 20)
DDLTEXT = DDLTEXT SUBSTR("Type", 1, 4)
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"

DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE = ''
   LZEILE = LZEILE || SUBSTR(OWNER, 1, 20)
   LZEILE = LZEILE SUBSTR(SCHEMANAME,1,20)
   LZEILE = LZEILE SUBSTR(OWNERTYPE, 1, 4)
   LZEILE = LZEILE SUBSTR(DEFINER, 1, 20)
   LZEILE = LZEILE SUBSTR(DEFINERTYPE, 1, 4)
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

LIST_MEM:

WHERELIST    = ""
CALL MAKE_WHERELIST "MEM.MEMBER_NUMBER", DB2_NAME1, "NUM"
WHERELIST    = ""

EINGABE.0  = 1
SQLSTMT   =  "SELECT MEM.MEMBER_NUMBER              " ,
             "    ,  MEM.HOST_NAME                  " ,
             "    ,  MEM.PARTITION_NUMBER           " ,
             "    ,  MEM.MEMBER_TYPE                " ,
             "    ,  MEM.PORT_NUMBER                " ,
             "    ,  MEM.SWITCH_NAME                " ,
             "    ,  MEM.STATUS                     " ,
             "FROM table("SYSPROCA".DB_MEMBERS()) MEM " ,
              WHERELIST                           ,
             "ORDER BY MEM.MEMBER_NUMBER        " ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.2.SQLLEN   = 40           /* HOST_NAME                 */
OUTSQLDA.6.SQLLEN   = 15           /* SWITCH_NAME               */

DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || SUBSTR("NR", 1, 4)
DDLTEXT = DDLTEXT SUBSTR("HOST", 1, 40)
DDLTEXT = DDLTEXT SUBSTR("PORT", 1, 5)
DDLTEXT = DDLTEXT SUBSTR("PART", 1, 4)
DDLTEXT = DDLTEXT SUBSTR("TYPE", 1, 4)
DDLTEXT = DDLTEXT SUBSTR("SWNAME", 1, 7)
DDLTEXT = DDLTEXT SUBSTR("ST", 1, 2)
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"

DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE = ''
   LZEILE = LZEILE || RIGHT(MEMBER_NUMBER, 4, ' ')
   LZEILE = LZEILE LEFT(HOST_NAME, 40, ' ')
   LZEILE = LZEILE RIGHT(PORT_NUMBER, 5, ' ')
   LZEILE = LZEILE RIGHT(PARTITION_NUMBER, 4, ' ')
   LZEILE = LZEILE LEFT(MEMBER_TYPE, 4, ' ')
   LZEILE = LZEILE LEFT(SWITCH_NAME, 7, ' ')
   LZEILE = LZEILE LEFT(STATUS, 2, ' ')
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

LIST_VW:

WHERELIST    = ""
CALL MAKE_WHERELIST "VD.VIEWSCHEMA", DB2_CREATOR1
CALL MAKE_WHERELIST "VD.VIEWNAME", DB2_NAME1
CALL MAKE_WHERELIST "VD.BSCHEMA", DB2_CREATOR2
CALL MAKE_WHERELIST "VD.BNAME", DB2_NAME2
/* CALL MAKE_WHERELIST "", "BTYPE = 'V'" */

EINGABE.0  = 1
SQLSTMT    = "SELECT VW.VIEWSCHEMA   " ,
                  ", VW.VIEWNAME     " ,
                  ", VW.OWNERTYPE    " ,
                  ", VW.VALID        " ,
                  ", VW.READONLY     " ,
                  ", VW.VIEWCHECK    " ,
                  ", TRANSLATE(TB.PROPERTY, 'N', ' ') AS PROPERTY ",
                  ", (SELECT LISTAGG(RTrim(VD1.BSCHEMA) ",
                  "                  Concat '.'        ",
                  "                  CONCAT RTRIM(VD1.BNAME)",
                  "                  CONCAT ' '        ",
                  "                  CONCAT VD1.BTYPE   ",
                  "                  CONCAT ', '       ",
                  "                 ) AS VWDEP_TEXT    ",
                  "        FROM "SYSCATS".VIEWDEP VD1  ",
                  "        WHERE  VW.VIEWSCHEMA = VD1.VIEWSCHEMA ",
                  "          AND  VW.VIEWNAME   = VD1.VIEWNAME   ",
                  "        ORDER BY 1                  ",
                  "   ) AS VWDEP_TEXT                  ",
             "FROM "SYSCATS".VIEWDEP VD " ,
             "INNER JOIN "SYSCATS".VIEWS VW " ,
             "ON    VW.VIEWSCHEMA = VD.VIEWSCHEMA " ,
             "AND   VW.VIEWNAME   = VD.VIEWNAME   " ,
             "INNER JOIN "SYSCATS".TABLES TB" ,
             "ON    VW.VIEWSCHEMA = TB.TABSCHEMA " ,
             "AND   VW.VIEWNAME   = TB.TABNAME   " ,
             WHERELIST ,
             "GROUP BY VW.VIEWSCHEMA   " ,
             "       , VW.VIEWNAME     " ,
             "       , VW.VALID        " ,
             "       , VW.READONLY     " ,
             "       , VW.VIEWCHECK    " ,
             "       , VW.OWNERTYPE    " ,
             "       , TB.PROPERTY     " ,
             "ORDER BY VW.VIEWSCHEMA, VW.VIEWNAME" ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 10           /* VIEWSCHEMA                */
OUTSQLDA.2.SQLLEN   = 25           /* VIEWNAME                  */
OUTSQLDA.7.SQLLEN   = 75           /* VWDEP_TEXT                */

DDLTEXT = DDLTEXT "*UZ*"
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE  = ''
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3

RETURN


LIST_WL:

WHERELIST    = ""
CALL MAKE_WHERELIST "WORKLOADNAME", DB2_NAME1

EINGABE.0  = 1
SQLSTMT   =  "SELECT  WORKLOADID                      " ,
             "     ,  WORKLOADNAME                    " ,
             "     ,  EVALUATIONORDER                 " ,
             "     ,  ENABLED                         " ,
             "     ,  ALLOWACCESS                     " ,
             "     ,  SERVICECLASSNAME                " ,
             "     ,  PARENTSERVICECLASSNAME          " ,
             "     ,  COLLECTAGGACTDATA               " ,
             "     ,  COLLECTACTDATA                  " ,
             "     ,  COLLECTACTPARTITION             " ,
             "     ,  COLLECTDEADLOCK                 " ,
             "     ,  COLLECTLOCKTIMEOUT              " ,
             "     ,  COLLECTLOCKWAIT                 " ,
             "     ,  LOCKWAITVALUE                   " ,
             "     ,  COLLECTACTMETRICS               " ,
             "     ,  COLLECTUOWDATA                  " ,
             "     ,  EXTERNALNAME                    " ,
             "     ,  CREATE_TIME                     " ,
             "     ,  ALTER_TIME                      " ,
             "     ,  REMARKS                         " ,
             "FROM "SYSCATS".WORKLOADS                " ,
             WHERELIST ,
             "ORDER BY WORKLOADNAME, WORKLOADID       " ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.2.SQLLEN   = 34           /* WORKLOADNAME              */
OUTSQLDA.6.SQLLEN   = 25           /* SERVICECLASSNAME          */
OUTSQLDA.7.SQLLEN   = 25           /* PARENTSERVICECLASSNAME    */
OUTSQLDA.17.SQLLEN  = 25           /* EXTERNALNAME              */
OUTSQLDA.20.SQLLEN  = 40           /* REMARKS                   */

DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || SUBSTR("WORKLOADNAME", 1, 34)
DDLTEXT = DDLTEXT RIGHT("ID", 4, ' ')
DDLTEXT = DDLTEXT RIGHT("EVLO", 4, ' ')
DDLTEXT = DDLTEXT SUBSTR("SVCLASS", 1, 20)
DDLTEXT = DDLTEXT SUBSTR("EN", 1, 2)
DDLTEXT = DDLTEXT SUBSTR("AAC", 1, 3)
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE  = ''
   LZEILE = LZEILE || SUBSTR(WORKLOADNAME, 1, 34)
   LZEILE = LZEILE RIGHT(WORKLOADID, 4, '0')
   LZEILE = LZEILE RIGHT(EVALUATIONORDER, 4, '0')
   LZEILE = LZEILE SUBSTR(SERVICECLASSNAME, 1, 20)
   LZEILE = LZEILE SUBSTR(ENABLED, 1, 2)
   LZEILE = LZEILE SUBSTR(ALLOWACCESS, 1, 3)
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

LIST_CK:

WHERELIST    = ""
CALL MAKE_WHERELIST "OWNER", DB2_CREATOR1
CALL MAKE_WHERELIST "CONSTNAME", DB2_NAME1

EINGABE.0  = 1
SQLSTMT   =  "SELECT  CONSTNAME                       " ,
             "     ,  OWNER                           " ,
             "     ,  OWNERTYPE                       " ,
             "     ,  TABSCHEMA                       " ,
             "     ,  TABNAME                         " ,
             "     ,  CREATE_TIME                     " ,
             "     ,  QUALIFIER                       " ,
             "     ,  TYPE                            " ,
             "     ,  VARCHAR(FUNC_PATH) AS FUNC_PATH " ,
             "     ,  VARCHAR(TEXT) AS TEXT           " ,
             "     ,  PERCENTVALID                    " ,
             "     ,  COLLATIONSCHEMA                 " ,
             "     ,  COLLATIONNAME                   " ,
             "     ,  COLLATIONSCHEMA_ORDERBY         " ,
             "     ,  COLLATIONNAME_ORDERBY           " ,
             "     ,  DEFINER                         " ,
             "FROM "SYSCATS".CHECKS                   " ,
             WHERELIST ,
             "ORDER BY OWNER, CONSTNAME               " ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || SUBSTR("Constname", 1, 30)
DDLTEXT = DDLTEXT RIGHT("T", 1, ' ')
DDLTEXT = DDLTEXT LEFT("TABLE", 30, ' ')
DDLTEXT = DDLTEXT RIGHT("PV", 5, ' ')
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE  = ''
   LZEILE = LZEILE || SUBSTR(STRIP(OWNER) || '.' || ,
                             CONSTNAME, 1, 30)
   LZEILE = LZEILE RIGHT(TYPE, 1, ' ')
   LZEILE = LZEILE SUBSTR(STRIP(TABSCHEMA) || '.' || ,
                             TABNAME, 1, 30)
   LZEILE = LZEILE RIGHT(PERCENTVALID, 5, ' ')
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

LIST_VA:

WHERELIST    = ""
CALL MAKE_WHERELIST "VARSCHEMA", DB2_CREATOR1
CALL MAKE_WHERELIST "VARMODULENAME", DB2_NAME1

EINGABE.0  = 1
SQLSTMT   =  "SELECT  VARSCHEMA                       " ,
             "     ,  VARMODULENAME                   " ,
             "     ,  VARNAME                         " ,
             "     ,  VARMODULEID                     " ,
             "     ,  VARID                           " ,
             "     ,  OWNER                           " ,
             "     ,  OWNERTYPE                       " ,
             "     ,  CREATE_TIME                     " ,
             "FROM "SYSCATS".VARIABLES                " ,
             WHERELIST ,
             "ORDER BY VARSCHEMA, VARMODULENAME, VARNAME " ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 10           /* VARSCHEMA                 */
OUTSQLDA.2.SQLLEN   = 20           /* VARMODULENAME             */
OUTSQLDA.3.SQLLEN   = 20           /* VARNAME                   */
OUTSQLDA.4.SQLLEN   = 8            /* VARMODULEID               */
OUTSQLDA.5.SQLLEN   = 8            /* VARID                     */
OUTSQLDA.6.SQLLEN   = 10           /* OWNER                     */
OUTSQLDA.7.SQLLEN   = 8            /* OWNERTYPE                 */
OUTSQLDA.8.SQLLEN   = 8            /* CREATE_TIME               */

DDLTEXT = DDLTEXT "*UZ*"
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE  = ''
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

LIST_VAAUTH:

WHERELIST    = ""
CALL MAKE_WHERELIST "VARSCHEMA", DB2_CREATOR1
CALL MAKE_WHERELIST "VARNAME", DB2_NAME1

EINGABE.0  = 1
SQLSTMT   =  "SELECT   GRANTOR                        " ,
             "     ,   GRANTEE                        " ,
             "     ,   VARSCHEMA                      " ,
             "     ,   VARNAME                        " ,
             "     ,   VARID                          " ,
             "     ,   READAUTH                       " ,
             "     ,   WRITEAUTH                      " ,
             "     ,   GRANTORTYPE                    " ,
             "     ,   GRANTEETYPE                    " ,
             "FROM "SYSCATS".VARIABLEAUTH             " ,
             WHERELIST ,
             "ORDER BY VARSCHEMA, VARNAME " ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB
OUTSQLDA.1.SQLLEN   = 10           /* GRANTOR                   */
OUTSQLDA.2.SQLLEN   = 10           /* GRANTEE                   */
OUTSQLDA.3.SQLLEN   = 10           /* VARSCHEMA                 */
OUTSQLDA.4.SQLLEN   = 20           /* VARNAME                   */
OUTSQLDA.5.SQLLEN   = 8            /* VARID                     */
OUTSQLDA.6.SQLLEN   = 8            /* READAUTH                  */
OUTSQLDA.7.SQLLEN   = 8            /* WRITEAUTH                 */
OUTSQLDA.8.SQLLEN   = 8            /* GRANTORTYPE               */
OUTSQLDA.9.SQLLEN   = 8            /* GRANTEETYPE               */

DDLTEXT = DDLTEXT "*UZ*"
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE  = ''
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

LIST_VADEP:

WHERELIST    = ""
CALL MAKE_WHERELIST "VARSCHEMA", DB2_CREATOR1
CALL MAKE_WHERELIST "VARMODULENAME", DB2_NAME1

EINGABE.0  = 1
SQLSTMT   =  "SELECT  VARSCHEMA                       " ,
             "     ,  VARMODULENAME                   " ,
             "     ,  VARNAME                         " ,
             "     ,  VARMODULEID                     " ,
             "     ,  BTYPE                           " ,
             "     ,  BSCHEMA                         " ,
             "     ,  BNAME                           " ,
             "     ,  BMODULENAME                     " ,
             "     ,  BMODULEID                       " ,
             "     ,  TABAUTH                         " ,
             "FROM "SYSCATS".VARIABLEDEP              " ,
             WHERELIST ,
             "ORDER BY VARSCHEMA, VARMODULENAME, VARNAME " ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 10           /* VARSCHEMA                 */
OUTSQLDA.2.SQLLEN   = 25           /* VARMODULENAME             */
OUTSQLDA.3.SQLLEN   = 20           /* VARNAME                   */
OUTSQLDA.6.SQLLEN   = 10           /* BSCHEMA                   */
OUTSQLDA.7.SQLLEN   = 25           /* BNAME                     */
OUTSQLDA.8.SQLLEN   = 15           /* BMODULENAME               */

DDLTEXT = DDLTEXT "*UZ*"
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE  = ''
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

LIST_TG:

WHERELIST    = ""
CALL MAKE_WHERELIST "TRIGSCHEMA", DB2_CREATOR1
CALL MAKE_WHERELIST "TRIGNAME", DB2_NAME1
CALL MAKE_WHERELIST "TABSCHEMA", DB2_CREATOR2
CALL MAKE_WHERELIST "TABNAME", DB2_NAME2

EINGABE.0  = 1
SQLSTMT    = "SELECT  TRIGSCHEMA      " ,
             "     ,  TRIGNAME        " ,
             "     ,  DEFINER         " ,
             "     ,  TABSCHEMA       " ,
             "     ,  TABNAME         " ,
             "     ,  TRIGTIME        " ,
             "     ,  TRIGEVENT       " ,
             "     ,  GRANULARITY     " ,
             "     ,  VALID           " ,
             "FROM  "SYSCATS".TRIGGERS" ,
             WHERELIST ,
             "ORDER BY TRIGSCHEMA, TRIGNAME" ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || SUBSTR("TRIGGER NAME ", 1, 27)
DDLTEXT = DDLTEXT || SUBSTR("TABLE NAME", 1, 27)
DDLTEXT = DDLTEXT SUBSTR("DEFINER", 1, 8)
DDLTEXT = DDLTEXT SUBSTR("T", 1, 1)
DDLTEXT = DDLTEXT SUBSTR("E", 1, 1)
DDLTEXT = DDLTEXT SUBSTR("G", 1, 1)
DDLTEXT = DDLTEXT SUBSTR("V", 1, 1)
DDLTEXT = DDLTEXT "-NR"

DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE  = ''
   XTBNAME = STRIP(TRIGSCHEMA) || '.' || ,
             TRIGNAME
   LZEILE = LZEILE || SUBSTR(XTBNAME, 1, 27)
   XTBNAME = STRIP(TABSCHEMA) || '.' || ,
             TABNAME
   LZEILE = LZEILE || SUBSTR(XTBNAME, 1, 27)
   LZEILE = LZEILE SUBSTR(DEFINER, 1, 8)
   LZEILE = LZEILE SUBSTR(TRIGTIME, 1, 1)
   LZEILE = LZEILE SUBSTR(TRIGEVENT, 1, 1)
   LZEILE = LZEILE SUBSTR(GRANULARITY, 1, 1)
   LZEILE = LZEILE SUBSTR(VALID, 1, 1)
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

LIST_FK:

WHERELIST    = ""
CALL MAKE_WHERELIST "TABSCHEMA", DB2_CREATOR1
CALL MAKE_WHERELIST "TABNAME", DB2_NAME1
CALL MAKE_WHERELIST "CONSTNAME", DB2_NAME2

EINGABE.0  = 1
SQLSTMT    = "SELECT  TABSCHEMA        " ,
             "      , TABNAME          " ,
             "      , CONSTNAME        " ,
             "      , REFTABSCHEMA     " ,
             "      , REFTABNAME       " ,
             "      , COLCOUNT         " ,
             "      , DELETERULE       " ,
             "      , UPDATERULE       " ,
             "      , FK_COLNAMES      " ,
             "      , PK_COLNAMES      " ,
             "FROM  "SYSCATS".REFERENCES" ,
              WHERELIST ,
             "ORDER BY TABSCHEMA, TABNAME, CONSTNAME" ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 10           /* TABSCHEMA                 */
OUTSQLDA.2.SQLLEN   = 30           /* TABNAME                   */
OUTSQLDA.3.SQLLEN   = 30           /* CONSTNAME                 */
OUTSQLDA.4.SQLLEN   = 10           /* REFTABSCHEMA              */
OUTSQLDA.5.SQLLEN   = 30           /* REFTABNAME                */

DDLTEXT = DDLTEXT "*UZ*"
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE  = ''
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

LIST_DT:

WHERELIST    = ""
CALL MAKE_WHERELIST "TYPESCHEMA", DB2_CREATOR1
CALL MAKE_WHERELIST "TYPENAME", DB2_NAME1

EINGABE.0  = 1
SQLSTMT    = "SELECT  TYPESCHEMA        " ,
             "     ,  TYPENAME          " ,
             "     ,  DEFINER           " ,
             "     ,  SOURCESCHEMA      " ,
             "     ,  SOURCENAME        " ,
             "     ,  METATYPE          " ,
             "     ,  TYPEID            " ,
             "     ,  SOURCETYPEID      " ,
             "     ,  CODEPAGE          " ,
             "     ,  VALID             " ,
             "FROM  "SYSCATS".DATATYPES" ,
             WHERELIST ,
             "ORDER BY TYPESCHEMA, TYPENAME" ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 10           /* TYPESCHEMA                */
OUTSQLDA.2.SQLLEN   = 25           /* TYPENAME                  */
OUTSQLDA.3.SQLLEN   = 10           /* DEFINER                   */
OUTSQLDA.4.SQLLEN   =  9           /* SOURCESCHEMA              */
OUTSQLDA.5.SQLLEN   = 18           /* SOURCENAME                */

DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || SUBSTR("TYPE NAME", 1, 44)
DDLTEXT = DDLTEXT LEFT("DEFINER", 8)
DDLTEXT = DDLTEXT SUBSTR("M", 1, 1)
DDLTEXT = DDLTEXT RIGHT("TYID",4,' ')
DDLTEXT = DDLTEXT RIGHT("STID",4,' ')
DDLTEXT = DDLTEXT RIGHT("CHCP",4,' ')
DDLTEXT = DDLTEXT LEFT("V",1,' ')
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE  = ''
   XTBNAME = STRIP(TYPESCHEMA) || '.' || ,
             TYPENAME
   LZEILE = LZEILE || SUBSTR(XTBNAME, 1, 44)
   LZEILE = LZEILE LEFT(DEFINER, 8)
   LZEILE = LZEILE SUBSTR(METATYPE, 1, 1)
   LZEILE = LZEILE RIGHT(TYPEID,4,'0')
   LZEILE = LZEILE RIGHT(SOURCETYPEID,4,'0')
   LZEILE = LZEILE RIGHT(CODEPAGE,4,'0')
   LZEILE = LZEILE LEFT(VALID, 1, ' ')
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

LIST_BP:

WHERELIST    = ""
CALL MAKE_WHERELIST "BPNAME", DB2_NAME1
CALL MAKE_WHERELIST "BUFFERPOOLID", DB2_NAME2, "NUM"

EINGABE.0  = 1
SQLSTMT    = "SELECT  BPNAME        ",
             "      , BUFFERPOOLID  ",
             "      , NGNAME        ",
             "      , NPAGES        ",
             "      , PAGESIZE      ",
             "      , ESTORE        ",
             "      , NUMBLOCKPAGES ",
             "      , BLOCKSIZE     ",
             "FROM  "SYSCATS".BUFFERPOOLS" ,
             WHERELIST ,
             "ORDER BY BPNAME, BUFFERPOOLID" ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 25           /* BPNAME                    */
OUTSQLDA.3.SQLLEN   = 15           /* NGNAME                    */

DDLTEXT = DDLTEXT "*UZ*"
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE  = ''
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

LIST_SY:

WHERELIST    = ""
CALL MAKE_WHERELIST "TABSCHEMA", DB2_CREATOR1
CALL MAKE_WHERELIST "TABNAME", DB2_NAME1
CALL MAKE_WHERELIST "BASE_TABSCHEMA", DB2_CREATOR2
CALL MAKE_WHERELIST "BASE_TABNAME", DB2_NAME2
CALL MAKE_WHERELIST "", "TYPE = 'A'"

EINGABE.0  = 1
SQLSTMT   =  "SELECT TABSCHEMA          " ,
             "     , TABNAME            " ,
             "     , TYPE               " ,
             "     , BASE_TABSCHEMA     " ,
             "     , BASE_TABNAME       " ,
             "FROM "SYSCATS".TABLES T2 " ,
             WHERELIST ,
             "ORDER BY TABSCHEMA, TABNAME" ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || SUBSTR("SYNONYM ", 1, 27)
DDLTEXT = DDLTEXT SUBSTR("TY", 1, 2)
DDLTEXT = DDLTEXT || SUBSTR("BASIS TABLE", 1, 27)
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE  = ''
   XTBNAME = STRIP(TABSCHEMA) || '.' || ,
             TABNAME
   LZEILE = LZEILE || SUBSTR(XTBNAME, 1, 27)
   LZEILE = LZEILE SUBSTR(TYPE, 1, 2)
   XTBNAME = STRIP(BASE_TABSCHEMA) || '.' || ,
             BASE_TABNAME
   LZEILE = LZEILE || SUBSTR(XTBNAME, 1, 27)
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

LIST_TA:

WHERELIST    = ""
CALL MAKE_WHERELIST "TABSCHEMA", DB2_CREATOR1
CALL MAKE_WHERELIST "TABNAME", DB2_NAME1

EINGABE.0  = 1
SQLSTMT    = "SELECT  GRANTOR           " ,
             "     ,  GRANTEE           " ,
             "     ,  GRANTEETYPE       " ,
             "     ,  TABSCHEMA         " ,
             "     ,  TABNAME           " ,
             "     ,  CONTROLAUTH       " ,
             "     ,  ALTERAUTH         " ,
             "     ,  DELETEAUTH        " ,
             "     ,  INDEXAUTH         " ,
             "     ,  INSERTAUTH        " ,
             "     ,  SELECTAUTH        " ,
             "     ,  REFAUTH           " ,
             "     ,  UPDATEAUTH        " ,
             "FROM  "SYSCATS".TABAUTH" ,
             WHERELIST ,
             "ORDER BY TABSCHEMA, TABNAME" ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 10           /* GRANTOR                   */
OUTSQLDA.2.SQLLEN   = 10           /* GRANTEE                   */
OUTSQLDA.4.SQLLEN   = 10           /* TABSCHEMA                 */
OUTSQLDA.5.SQLLEN   = 20           /* TABNAME                   */

DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || LEFT("NAME ", 36)
DDLTEXT = DDLTEXT LEFT("GRANTOR", 8)
DDLTEXT = DDLTEXT LEFT("GRANTEE", 8)
DDLTEXT = DDLTEXT LEFT("G", 1)
DDLTEXT = DDLTEXT LEFT("S", 1)
DDLTEXT = DDLTEXT LEFT("I", 1)
DDLTEXT = DDLTEXT LEFT("U", 1)
DDLTEXT = DDLTEXT LEFT("D", 1)
DDLTEXT = DDLTEXT LEFT("C", 1)
DDLTEXT = DDLTEXT LEFT("A", 1)
DDLTEXT = DDLTEXT LEFT("I", 1)
DDLTEXT = DDLTEXT LEFT("R", 1)
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE  = ''
   XTBNAME = STRIP(TABSCHEMA) || '.' || ,
             TABNAME
   LZEILE = LZEILE || LEFT(XTBNAME, 36)
   LZEILE = LZEILE LEFT(GRANTOR, 8)
   LZEILE = LZEILE LEFT(GRANTEE, 8)
   LZEILE = LZEILE LEFT(GRANTEETYPE, 1)
   LZEILE = LZEILE LEFT(SELECTAUTH, 1)
   LZEILE = LZEILE LEFT(INSERTAUTH, 1)
   LZEILE = LZEILE LEFT(UPDATEAUTH, 1)
   LZEILE = LZEILE LEFT(DELETEAUTH, 1)
   LZEILE = LZEILE LEFT(CONTROLAUTH, 1)
   LZEILE = LZEILE LEFT(ALTERAUTH, 1)
   LZEILE = LZEILE LEFT(INDEXAUTH, 1)
   LZEILE = LZEILE LEFT(REFAUTH, 1)
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

LIST_PRIV:

WHERELIST    = ""
CALL MAKE_WHERELIST "OBJECTSCHEMA", DB2_CREATOR1
CALL MAKE_WHERELIST "OBJECTNAME", DB2_NAME1
CALL MAKE_WHERELIST "AUTHID", DB2_NAME2

EINGABE.0  = 1
SQLSTMT    = "SELECT  OBJECTSCHEMA       " ,
             "      , OBJECTNAME         " ,
             "      , AUTHID             " ,
             "      , OBJECTTYPE         " ,
             "      , PRIVILEGE          " ,
             "      , GRANTABLE          " ,
             "      , AUTHIDTYPE         " ,
             "FROM  "SYSIBMA".PRIVILEGES " ,
             WHERELIST ,
             "ORDER BY AUTHID, OBJECTSCHEMA, OBJECTNAME ",
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 10           /* OBJECTSCHEMA              */
OUTSQLDA.2.SQLLEN   = 20           /* OBJECTNAME                */
OUTSQLDA.3.SQLLEN   = 8            /* AUTHID                    */
OUTSQLDA.5.SQLLEN   = 8            /* PRIVILEGE                 */
OUTSQLDA.6.SQLLEN   = 8            /* GRANTABLE                 */

DDLTEXT = DDLTEXT "*UZ*"
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE  = ''
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

LIST_DA:

WHERELIST    = ""
CALL MAKE_WHERELIST "GRANTOR", DB2_NAME1
CALL MAKE_WHERELIST "GRANTEE", DB2_NAME2

EINGABE.0  = 1
SQLSTMT    = "SELECT   GRANTOR                   " ,
             "     ,   GRANTORTYPE               " ,
             "     ,   GRANTEE                   " ,
             "     ,   GRANTEETYPE               " ,
             "     ,   BINDADDAUTH               " ,
             "     ,   CONNECTAUTH               " ,
             "     ,   CREATETABAUTH             " ,
             "     ,   DBADMAUTH                 " ,
             "     ,   EXTERNALROUTINEAUTH       " ,
             "     ,   IMPLSCHEMAAUTH            " ,
             "     ,   LOADAUTH                  " ,
             "     ,   NOFENCEAUTH               " ,
             "     ,   QUIESCECONNECTAUTH        " ,
             "     ,   LIBRARYADMAUTH            " ,
             "     ,   SECURITYADMAUTH           " ,
             "     ,   SQLADMAUTH                " ,
             "     ,   WLMADMAUTH                " ,
             "     ,   EXPLAINAUTH               " ,
             "     ,   DATAACCESSAUTH            " ,
             "     ,   ACCESSCTRLAUTH            " ,
             "FROM  "SYSCATS".DBAUTH " ,
             WHERELIST ,
             "ORDER BY GRANTOR, GRANTEE  " ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || LEFT("CRANTOR", 8)
DDLTEXT = DDLTEXT LEFT("GRANTEE", 8)
DDLTEXT = DDLTEXT LEFT("BA", 2)
DDLTEXT = DDLTEXT LEFT("CO", 2)
DDLTEXT = DDLTEXT LEFT("CT", 2)
DDLTEXT = DDLTEXT LEFT("DB", 2)
DDLTEXT = DDLTEXT LEFT("EX", 2)
DDLTEXT = DDLTEXT LEFT("IM", 2)
DDLTEXT = DDLTEXT LEFT("LO", 2)
DDLTEXT = DDLTEXT LEFT("NO", 2)
DDLTEXT = DDLTEXT LEFT("QS", 2)
DDLTEXT = DDLTEXT LEFT("LI", 2)
DDLTEXT = DDLTEXT LEFT("Sec", 3)
DDLTEXT = DDLTEXT LEFT("SQ", 2)
DDLTEXT = DDLTEXT LEFT("WL", 2)
DDLTEXT = DDLTEXT LEFT("EX", 2)
DDLTEXT = DDLTEXT LEFT("DT", 2)
DDLTEXT = DDLTEXT LEFT("AC", 2)
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE  = ''
   LZEILE = LZEILE || LEFT(GRANTOR, 8)
   LZEILE = LZEILE LEFT(GRANTEE, 8)
   LZEILE = LZEILE LEFT(BINDADDAUTH                    , 2, ' ')
   LZEILE = LZEILE LEFT(CONNECTAUTH                    , 2, ' ')
   LZEILE = LZEILE LEFT(CREATETABAUTH                  , 2, ' ')
   LZEILE = LZEILE LEFT(DBADMAUTH                      , 2, ' ')
   LZEILE = LZEILE LEFT(EXTERNALROUTINEAUTH            , 2, ' ')
   LZEILE = LZEILE LEFT(IMPLSCHEMAAUTH                 , 2, ' ')
   LZEILE = LZEILE LEFT(LOADAUTH                       , 2, ' ')
   LZEILE = LZEILE LEFT(NOFENCEAUTH                    , 2, ' ')
   LZEILE = LZEILE LEFT(QUIESCECONNECTAUTH             , 2, ' ')
   LZEILE = LZEILE LEFT(LIBRARYADMAUTH                 , 2, ' ')
   LZEILE = LZEILE LEFT(SECURITYADMAUTH                , 3, ' ')
   LZEILE = LZEILE LEFT(SQLADMAUTH                     , 2, ' ')
   LZEILE = LZEILE LEFT(WLMADMAUTH                     , 2, ' ')
   LZEILE = LZEILE LEFT(EXPLAINAUTH                    , 2, ' ')
   LZEILE = LZEILE LEFT(DATAACCESSAUTH                 , 2, ' ')
   LZEILE = LZEILE LEFT(ACCESSCTRLAUTH                 , 2, ' ')
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

LIST_PG:

WHERELIST = ""
FROMLIST  = ""
CALL MAKE_WHERELIST "T1.PKGSCHEMA", DB2_CREATOR1
CALL MAKE_WHERELIST "T1.PKGNAME", DB2_NAME1
FROMLIST = "FROM  "SYSCATS".PACKAGES T1"
SEL2 = " ,'NA'AS BSCHEMA, 'NA' AS BNAME"
IF LENGTH(DB2_CREATOR2) > 0 ,
 | LENGTH(DB2_NAME2) > 0  THEN DO
   CALL MAKE_WHERELIST "T2.BSCHEMA", DB2_CREATOR2
   CALL MAKE_WHERELIST "T2.BNAME", DB2_NAME2
   CALL MAKE_WHERELIST "", "T1.PKGSCHEMA = T2.PKGSCHEMA"
   CALL MAKE_WHERELIST "", "T1.PKGNAME = T2.PKGNAME"
   FROMLIST = "FROM  "SYSCATS".PACKAGES T1, "SYSCATS".PACKAGEDEP T2 "
   SEL2 = " ,T2.BSCHEMA, T2.BNAME "
 END

EINGABE.0   = 1
SQLSTMT    = "SELECT   DISTINCT        " ,
                   "   T1.PKGSCHEMA    " ,
                   " , T1.PKGNAME      " ,
                   " , T1.PKGVERSION   " ,
                   " , BOUNDBY         " ,
                   " , DEFINER         " ,
                   " , VALID           " ,
                   " , ISOLATION       " ,
                   " , BLOCKING        " ,
              SEL2 ,
              FROMLIST  ,
              WHERELIST ,
             "ORDER BY T1.PKGSCHEMA, T1.PKGNAME" ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 10           /* PKGSCHEMA                 */
OUTSQLDA.2.SQLLEN   = 20           /* PKGNAME                   */
OUTSQLDA.3.SQLLEN   = 25           /* PKGVERSION                */
OUTSQLDA.4.SQLLEN   = 25           /* BOUNDBY                   */
OUTSQLDA.5.SQLLEN   = 25           /* DEFINER                   */
OUTSQLDA.9.SQLLEN   = 30           /* FUNC_PATH                 */

DDLTEXT = " "
DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || SUBSTR("PACKAGE NAME", 1, 20)
DDLTEXT = DDLTEXT SUBSTR("VERSION ", 1, 25)
DDLTEXT = DDLTEXT SUBSTR("BOUNDBY", 1, 8)
DDLTEXT = DDLTEXT SUBSTR("DEFINER", 1, 8)
DDLTEXT = DDLTEXT SUBSTR("V", 1, 1)
DDLTEXT = DDLTEXT SUBSTR("IS", 1, 2)
DDLTEXT = DDLTEXT SUBSTR("BL", 1, 2)
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE  = ''
   TEMP = STRIP(PKGSCHEMA)||'.'||STRIP(PKGNAME)
   LZEILE = LZEILE || SUBSTR(TEMP, 1, 20)
   If PKGVERSION = "" Then PKGVERSION = "-"
   LZEILE = LZEILE SUBSTR(PKGVERSION, 1, 25)
   LZEILE = LZEILE SUBSTR(BOUNDBY, 1, 8)
   LZEILE = LZEILE SUBSTR(DEFINER, 1, 8)
   LZEILE = LZEILE SUBSTR(VALID, 1, 1)
   LZEILE = LZEILE SUBSTR(ISOLATION, 1, 2)
   LZEILE = LZEILE SUBSTR(BLOCKING, 1, 2)
   Call Automatic_Data
   CALL ADD_TABLE

 END /* END DO I = 1 TO DDLTEXT */

CALL CLOSE_CURSOR_AC3
RETURN

LIST_COLS:

WHERELIST = ""
CALL MAKE_WHERELIST "COLNAME", DB2_NAME1
CALL MAKE_WHERELIST "TABSCHEMA", DB2_CREATOR2
CALL MAKE_WHERELIST "TABNAME", DB2_NAME2

EINGABE.0   = 1
SQLSTMT    = "SELECT TABSCHEMA  " ,
             "     , TABNAME    " ,
             "     , COLNO      " ,
             "     , COLNAME    " ,
             "     , TYPENAME   " ,
             "     , LENGTH     " ,
             "     , SCALE      " ,
             ",CASE WHEN NULLS = 'Y' THEN 'Y' ",
                 " WHEN NULLS = 'N' THEN 'N' ",
                 " ELSE 'Y' ",
             " END NULLS  " ,
             ",CASE WHEN """DEFAULT""" IS NOT NULL " ,
                       "THEN 'Y' ELSE 'N' " ,
             " END DEFAULT  ",
             ",CASE WHEN LOGGED = 'Y' THEN 'Y' " ,
                 " WHEN LOGGED = 'N' THEN 'N' " ,
                   " ELSE 'N' " ,
             " END LOGGED  " ,
             ",CASE WHEN COMPACT = 'N' THEN 'N' " ,
                 " WHEN COMPACT = ' ' THEN 'N' " ,
                                    " ELSE 'Y' " ,
             " END COMPACT  " ,
             " , COLCARD                       " ,
             " , HIDDEN                        " ,
             " , GENERATED                     " ,
             " , IDENTITY                      " ,
             " , COMPRESS                      " ,
             " , CODEPAGE                      " ,
             " , LOGGED                        " ,
             " , COMPACT                       " ,
             " , KEYSEQ                        " ,
             " , PARTKEYSEQ                    " ,
             " , NQUANTILES                    " ,
             " , NMOSTFREQ                     " ,
             " , NUMNULLS                      " ,
             " , SPECIAL_PROPS                 " ,
             " , INLINE_LENGTH                 " ,
             " , PCTINLINED                    " ,
             " , AVGCOLLENCHAR                 " ,
             " , SECLABELNAME                  " ,
             " , ROWBEGIN                      " ,
             " , ROWEND                        " ,
             " , REMARKS                       " ,
             "FROM  "SYSCATS".COLUMNS" ,
             WHERELIST ,
             "ORDER BY TABSCHEMA, TABNAME, COLNO" ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 10           /* TABSCHEMA                 */
OUTSQLDA.2.SQLLEN   = 23           /* TABNAME                   */
OUTSQLDA.4.SQLLEN   = 23           /* COLNAME                   */
OUTSQLDA.5.SQLLEN   = 14           /* TYPEENAME                 */
OUTSQLDA.29.SQLLEN  = 14           /* SECLABELNAME              */

DDLTEXT = " "
DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || SUBSTR("NR ", 1, 3)
DDLTEXT = DDLTEXT SUBSTR("COLNAME", 1,22)
DDLTEXT = DDLTEXT SUBSTR("TYPEENAME", 1, 17)
DDLTEXT = DDLTEXT RIGHT("LENG", 10, ' ')
DDLTEXT = DDLTEXT SUBSTR("N", 1, 1)
DDLTEXT = DDLTEXT SUBSTR("D", 1, 1)
DDLTEXT = DDLTEXT SUBSTR("L", 1, 1)
DDLTEXT = DDLTEXT SUBSTR("C", 1, 1)
DDLTEXT = DDLTEXT SUBSTR("H", 1, 1)
DDLTEXT = DDLTEXT SUBSTR("G", 1, 1)
DDLTEXT = DDLTEXT SUBSTR("I", 1, 1)
DDLTEXT = DDLTEXT SUBSTR("CO", 1, 2)
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE  = ''
   LEN = STRIP(LENGTH)
   IF TYPENAME = 'DECIMAL' THEN DO
      LEN = STRIP(LENGTH) || ',' || STRIP(SCALE)
    END
   IF DEFAULT = 'D' THEN NULLS = 'D'

   LZEILE = LZEILE || RIGHT(COLNO, 3, '0')
   LZEILE = LZEILE LEFT(COLNAME, 22)
   LZEILE = LZEILE LEFT(TYPENAME, 17)
   LZEILE = LZEILE RIGHT(LEN, 10)
   LZEILE = LZEILE Left(NULLS, 1, ' ')
   LZEILE = LZEILE Left(DEFAULT, 1, ' ')
   LZEILE = LZEILE Left(LOGGED, 1, ' ')
   LZEILE = LZEILE Left(COMPACT, 1, ' ')
   LZEILE = LZEILE Left(HIDDEN, 1, ' ')
   LZEILE = LZEILE Left(GENERATED, 1, ' ')
   LZEILE = LZEILE Left(IDENTITY, 1, ' ')
   LZEILE = LZEILE Left(COMPRESS, 2, ' ')
   Call Automatic_Data
   CALL ADD_TABLE
 END /* END DO I = 1 TO DDLTEXT */
CALL CLOSE_CURSOR_AC3
RETURN

LIST_COLS_IDENTITY:

WHERELIST = ""
CALL MAKE_WHERELIST "TABSCHEMA", DB2_CREATOR1
CALL MAKE_WHERELIST "TABNAME", DB2_NAME1
CALL MAKE_WHERELIST "COLNAME", DB2_NAME2

EINGABE.0   = 1
SQLSTMT    = "SELECT TABSCHEMA                " ,
             "     , TABNAME                  " ,
             "     , COLNAME                  " ,
             "     , SEQID                    " ,
             "     , BIGINT(START) AS START   " ,
             "     , BIGINT(INCREMENT) AS INCREMENT " ,
             "     , BIGINT(MINVALUE) AS MINVALUE " ,
             "     , BIGINT(MAXVALUE) AS MAXVALUE " ,
             "     , CYCLE                    " ,
             "     , CACHE                    " ,
             "     , ORDER                    " ,
             "     , BIGINT(NEXTCACHEFIRSTVALUE)  " ,
             "       AS NEXTCACHEFIRSTVALUE       " ,
             "FROM  "SYSCATS".COLIDENTATTRIBUTES " ,
             WHERELIST ,
             "ORDER BY TABSCHEMA, TABNAME, COLNAME" ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

DDLTEXT = " "
DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || RIGHT("SEQID", 5, ' ')
DDLTEXT = DDLTEXT RIGHT("INCRE", 12, ' ')
DDLTEXT = DDLTEXT RIGHT("MINV", 12, ' ')
DDLTEXT = DDLTEXT RIGHT("MAXV", 12, ' ')
DDLTEXT = DDLTEXT LEFT("CY", 2, ' ')
DDLTEXT = DDLTEXT RIGHT("CACHE", 5, ' ')
DDLTEXT = DDLTEXT LEFT("OR", 2, ' ')
DDLTEXT = DDLTEXT RIGHT("NXTVAL", 14, ' ')
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE  = ''
   LZEILE = LZEILE || RIGHT(SEQID, 5, '0')
   LZEILE = LZEILE Right(INCREMENT, 12, ' ')
   LZEILE = LZEILE RIGHT(MINVALUE, 12, ' ')
   LZEILE = LZEILE RIGHT(MAXVALUE, 12, ' ')
   LZEILE = LZEILE Left(CYCLE, 2, ' ')
   LZEILE = LZEILE Right(CACHE, 5, ' ')
   LZEILE = LZEILE Left(ORDER, 2, ' ')
   LZEILE = LZEILE RIGHT(NEXTCACHEFIRSTVALUE, 14, ' ')
   CALL ADD_TABLE
 END /* END DO I = 1 TO DDLTEXT */
CALL CLOSE_CURSOR_AC3
RETURN

LIST_CG:

WHERELIST = ""
CALL MAKE_WHERELIST "COLGROUPSCHEMA", DB2_CREATOR1
CALL MAKE_WHERELIST "COLGROUPNAME", DB2_NAME1

EINGABE.0   = 1
SQLSTMT    = "SELECT COLGROUPSCHEMA   " ,
             "     , COLGROUPNAME     " ,
             "     , COLGROUPID       " ,
             "     , COLGROUPCARD     " ,
             "     , NUMFREQ_VALUES   " ,
             "     , NUMQUANTILES     " ,
             "FROM  "SYSCATS".COLGROUPS   " ,
             WHERELIST ,
             "ORDER BY COLGROUPID " ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

DDLTEXT = " "
DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || LEFT("Name", 20, ' ')
DDLTEXT = DDLTEXT SUBSTR("ID ", 1, 5)
DDLTEXT = DDLTEXT RIGHT("CARD", 12, ' ')
DDLTEXT = DDLTEXT RIGHT("Values", 11, ' ')
DDLTEXT = DDLTEXT RIGHT("Quantiles", 11, ' ')
DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE  = ''
   LZEILE = LZEILE || Left(Strip(COLGROUPSCHEMA) || '.' || ,
                           COLGROUPNAME, 20, ' ')
   LZEILE = LZEILE RIGHT(COLGROUPID, 5, '0')
   LZEILE = LZEILE RIGHT(COLGROUPCARD, 12, ' ')
   LZEILE = LZEILE RIGHT(NUMFREQ_VALUES, 11, ' ')
   LZEILE = LZEILE RIGHT(NUMQUANTILES, 11, ' ')
   CALL ADD_TABLE
 END /* END DO I = 1 TO DDLTEXT */
CALL CLOSE_CURSOR_AC3
RETURN

LIST_CGCOLS:

WHERELIST = ""
CALL MAKE_WHERELIST "COLNAME", DB2_CREATOR1
CALL MAKE_WHERELIST "COLGROUPID", DB2_NAME1, "NUM"
CALL MAKE_WHERELIST "TABSCHEMA", DB2_CREATOR2
CALL MAKE_WHERELIST "TABNAME", DB2_NAME2

EINGABE.0   = 1
SQLSTMT    = "SELECT COLGROUPID " ,
             "     , COLNAME    " ,
             "     , TABSCHEMA  " ,
             "     , TABNAME    " ,
             "     , ORDINAL    " ,
             "FROM  "SYSCATS".COLGROUPCOLS " ,
             WHERELIST ,
             "ORDER BY COLGROUPID, TABSCHEMA, TABNAME, COLNAME" ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

DDLTEXT = " "
DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || SUBSTR("ID ", 1, 4)
DDLTEXT = DDLTEXT SUBSTR("COLNAME", 1,17)
DDLTEXT = DDLTEXT SUBSTR("TABLE", 1, 20)
DDLTEXT = DDLTEXT RIGHT("ORD", 3, ' ')
DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE  = ''
   LZEILE = LZEILE || RIGHT(COLGROUPID, 4, '0')
   LZEILE = LZEILE LEFT(COLNAME, 17)
   LZEILE = LZEILE LEFT(Strip(TABSCHEMA) || "." || ,
                        Strip(TABNAME) , 20, ' ')
   LZEILE = LZEILE RIGHT(ORDINAL, 3)
   CALL ADD_TABLE
 END /* END DO I = 1 TO DDLTEXT */
CALL CLOSE_CURSOR_AC3
RETURN

LIST_COPT:

WHERELIST = ""
CALL MAKE_WHERELIST "TABSCHEMA", DB2_CREATOR1
CALL MAKE_WHERELIST "TABNAME", DB2_NAME1
CALL MAKE_WHERELIST "COLNAME", DB2_NAME2

EINGABE.0   = 1
SQLSTMT    = "SELECT TABSCHEMA   " ,
             "     , TABNAME     " ,
             "     , COLNAME     " ,
             "     , OPTION      " ,
             "     , Varchar(SETTING) as SETTING  " ,
             "FROM  "SYSCATS".COLOPTIONS " ,
             WHERELIST ,
             ""
CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 10           /* TABSCHEMA                 */
OUTSQLDA.2.SQLLEN   = 20           /* TABNAME                   */
OUTSQLDA.3.SQLLEN   = 20           /* COLNAME                   */
OUTSQLDA.4.SQLLEN   = 20           /* OPTION                    */
OUTSQLDA.5.SQLLEN   = 20           /* SETTING                   */

DDLTEXT = " "
DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || SUBSTR("NAME ", 1, 20)
DDLTEXT = DDLTEXT SUBSTR("OPTION", 1, 29)
DDLTEXT = DDLTEXT SUBSTR("SETTING", 1, 21)
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"
DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE = ""
   LZEILE = LZEILE || LEFT(COLNAME, 20)
   LZEILE = LZEILE LEFT(OPTION, 29)
   LZEILE = LZEILE LEFT(SETTING, 21)
   Call Automatic_Data
   CALL ADD_TABLE
 END /* END DO I = 1 TO DDLTEXT */
CALL CLOSE_CURSOR_AC3
RETURN

LIST_STMT:

WHERELIST = ""
CALL MAKE_WHERELIST "PKGSCHEMA", DB2_CREATOR1
CALL MAKE_WHERELIST "PKGNAME", DB2_NAME1

EINGABE.0   = 1
SQLSTMT    = "SELECT PKGSCHEMA  " ,
             "     , PKGNAME    " ,
             "     , VERSION    " ,
             "     , STMTNO     " ,
             "     , SECTNO     " ,
             "     , SEQNO      " ,
             "     , VARCHAR(TEXT, 4096) AS TEXT " ,
             "FROM  "SYSCATS".STATEMENTS" ,
             WHERELIST ,
             "ORDER BY PKGSCHEMA, PKGNAME, STMTNO, SECTNO, SEQNO " ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

DDLTEXT = " "
DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || SUBSTR("PKG NAME", 1, 25)
DDLTEXT = DDLTEXT SUBSTR("STMT", 1, 50)
DDLTEXT = DDLTEXT "-NR"

DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE  = ''
   TEMP = STRIP(PKGSCHEMA) || '.' || ,
          STRIP(PKGNAME) || " " || ,
          STRIP(VERSION)
   LZEILE = LZEILE || LEFT(TEMP, 25)
   LZEILE = LZEILE LEFT(TEXT, LENGTH(TEXT))

   CALL ADD_TABLE
 END /* END DO I = 1 TO DDLTEXT */
CALL CLOSE_CURSOR_AC3
RETURN

LIST_USER:
CNR = 2
SNR = CNR
WHERELIST = ""

SQLSTMT   =  "SELECT USERNAME            " ,
             "FROM TABLE(SYSFUN.USERS()) T1 " ,
             "ORDER BY USERNAME          " ,
             WHERELIST                     ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

DDLTEXT = " "
DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || SUBSTR("User Name", 1, 25)
DDLTEXT = DDLTEXT SUBSTR("Group Name", 1, 25)
DDLTEXT = DDLTEXT "-NR"

DO WHILE SQLCODE = 0
   SQLTEXT = " FETCH C"CNR" INTO :USERNAME "
   Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End

   Call LIST_USER_GROUP
   CNR = 2

   If group_liste.0 = 0 Then Do
      group_liste.0 = 1
      group_liste.1 = " "
    End

   Do gri = 1 to group_liste.0
      LZEILE = ""
      LZEILE = LZEILE || SUBSTR(USERNAME, 1, 25)
      LZEILE = LZEILE SUBSTR(group_liste.gri, 1, 25)
      CALL ADD_TABLE
    End
 END

CALL CLOSE_CURSOR_AC3

Return

LIST_PERM:

WHERELIST = ""
CALL MAKE_WHERELIST "CONTROLSCHEMA", DB2_CREATOR1
CALL MAKE_WHERELIST "CONTROLNAME", DB2_NAME1
CALL MAKE_WHERELIST "TABSCHEMA", DB2_CREATOR2
CALL MAKE_WHERELIST "TABNAME", DB2_NAME2

EINGABE.0   = 1
SQLSTMT   =  "SELECT CONTROLSCHEMA                 " ,
             "    ,  CONTROLNAME                   " ,
             "    ,  OWNER                         " ,
             "    ,  OWNERTYPE                     " ,
             "    ,  TABSCHEMA                     " ,
             "    ,  TABNAME                       " ,
             "    ,  COLNAME                       " ,
             "    ,  CONTROLID                     " ,
             "    ,  CONTROLTYPE                   " ,
             "    ,  ENFORCED                      " ,
             "    ,  IMPLICIT                      " ,
             "    ,  ENABLE                        " ,
             "    ,  VALID                         " ,
             "    ,  RULETEXT                      " ,
             "    ,  TABCORRELATION                " ,
             "    ,  QUALIFIER                     " ,
             "    ,  FUNC_PATH                     " ,
             "    ,  COLLATIONSCHEMA               " ,
             "    ,  COLLATIONNAME                 " ,
             "    ,  COLLATIONSCHEMA_ORDERBY       " ,
             "    ,  COLLATIONNAME_ORDERBY         " ,
             "    ,  CREATE_TIME                   " ,
             "    ,  ALTER_TIME                    " ,
             "    ,  REMARKS                       " ,
             "FROM "SYSCATS".CONTROLS              " ,
              WHERELIST                              ,
             "ORDER BY CONTROLSCHEMA, CONTROLNAME  " ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

DDLTEXT = " "
DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || SUBSTR("Schema", 1, 9)
DDLTEXT = DDLTEXT SUBSTR("Name", 1, 15)
DDLTEXT = DDLTEXT SUBSTR("TABSchema", 1, 9)
DDLTEXT = DDLTEXT SUBSTR("TABName", 1, 14)
DDLTEXT = DDLTEXT SUBSTR("ColName", 1, 10)
DDLTEXT = DDLTEXT SUBSTR("T", 1, 1)
DDLTEXT = DDLTEXT SUBSTR("F", 1, 1)
DDLTEXT = DDLTEXT SUBSTR("I", 1, 1)
DDLTEXT = DDLTEXT SUBSTR("E", 1, 1)
DDLTEXT = DDLTEXT SUBSTR("V", 1, 1)
DDLTEXT = DDLTEXT "-NR"

DO WHILE SQLCODE = 0
    SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
    Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
      LZEILE = ""
      LZEILE = LZEILE || LEFT(CONTROLSCHEMA,            9, ' ')
      LZEILE = LZEILE Left(CONTROLNAME, 15, ' ')
      LZEILE = LZEILE Left(TABSCHEMA,            9, ' ')
      LZEILE = LZEILE Left(TABNAME, 14, ' ')
      LZEILE = LZEILE Left(COLNAME, 10, ' ')
      LZEILE = LZEILE Substr(CONTROLTYPE, 1, 1)
      LZEILE = LZEILE Substr(ENFORCED, 1, 1)
      LZEILE = LZEILE Substr(IMPLICIT, 1, 1)
      LZEILE = LZEILE Substr(ENABLE, 1, 1)
      LZEILE = LZEILE SUBSTR(VALID, 1, 1)
      CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

LIST_LG:
CNR = 3
SNR = CNR

WHERELIST    = ""
USERNAME  = DB2_NAME1

SQLSTMT   =  "SELECT GROUP                    " ,
             "FROM TABLE("SYSPROCA".AUTH_LIST_GROUPS_FOR_AUTHID(" ,
             "           '"USERNAME"')) T2                   " ,
             WHERELIST  ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

DDLTEXT = " "
DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || SUBSTR("User Name", 1, 25)
DDLTEXT = DDLTEXT SUBSTR("Group Name", 1, 25)
DDLTEXT = DDLTEXT "-NR"

DO WHILE SQLCODE = 0
   SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
   Call EXECUTE_SQL_TEXT_AC3
    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End

   LZEILE  = ''
   LZEILE = LZEILE || LEFT(USERNAME, 20)
   LZEILE = LZEILE || LEFT(GROUPNAME, 40)

   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
sqlcode = 0

Return

LIST_DB:
CNR = 3
SNR = CNR

WHERELIST    = ""

SQLSTMT   =  "SELECT CURRENT SERVER AS DBNAME   " ,
             "FROM "SYSIBMS".SYSDUMMY1 DY1      " ,
              WHERELIST                           ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

DDLTEXT = " "
DDLTEXT = DDLTEXT "*UZ*"
DDLTEXT = DDLTEXT || SUBSTR("DATABASE", 1, 25)
DDLTEXT = DDLTEXT "-NR"

DO WHILE SQLCODE = 0
   SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
   Call EXECUTE_SQL_TEXT_AC3
    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End

   LZEILE  = ''
   LZEILE = LZEILE || LEFT(DBNAME, 20)

   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
sqlcode = 0

Return

LIST_USER_GROUP:
CNR = 3
SNR = CNR

WHERELIST    = ""

SQLSTMT   =  "SELECT GROUP                    " ,
             "FROM TABLE("SYSPROCA".AUTH_LIST_GROUPS_FOR_AUTHID(" ,
             "           '"USERNAME"')) T2                   " ,
             WHERELIST  ,
             ""

CALL OPEN_CURSOR_AC3

drop group_liste.
group_liste.0 = 0
DO WHILE SQLCODE = 0
   SQLTEXT = " FETCH C"CNR" INTO :GROUP"
   Call EXECUTE_SQL_TEXT_AC3
    Select
        When SQLCODE = 100 THEN DO
             SQLCODE = 0
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
    group_liste.0 = group_liste.0 + 1
    gri           = group_liste.0
    group_liste.gri = GROUPNAME
 END

CALL CLOSE_CURSOR_AC3
sqlcode = 0

Return

LIST_TSA:
CNR   = 1           /*  CURSOR NUMMER FUER TABLESPACE   */
SNR   = CNR

WHERELIST    = ""
CALL MAKE_WHERELIST "TSA.TBSPACE", DB2_NAME1

SQLSTMT    = "SELECT  TSA.GRANTOR           " ,
             "      , TSA.GRANTORTYPE       " ,
             "      , TSA.GRANTEE           " ,
             "      , TSA.GRANTEETYPE       " ,
             "      , TSA.TBSPACE           " ,
             "      , TSA.USEAUTH           " ,
             "FROM  "SYSCATS".TBSPACEAUTH TSA" ,
             WHERELIST ,
             "ORDER BY TSA.TBSPACE, TSA.GRANTOR, TSA.GRANTEE",
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 10           /* GRANTOR                   */
OUTSQLDA.3.SQLLEN   = 13           /* GRANTEE                   */
OUTSQLDA.5.SQLLEN   = 22           /* TBSPACE                   */

Call LIST_AUTOMATIC_TABLE

RETURN

LIST_TBA:
CNR   = 1           /*  CURSOR NUMMER FUER TABLESPACE   */
SNR   = CNR

WHERELIST    = ""
CALL MAKE_WHERELIST "TBA.TABSCHEMA", DB2_CREATOR1
CALL MAKE_WHERELIST "TBA.TABNAME", DB2_NAME1

SQLSTMT    = "SELECT  TBA.TABSCHEMA         " ,
             "      , TBA.TABNAME           " ,
             "      , TBA.GRANTOR           " ,
             "      , TBA.GRANTORTYPE       " ,
             "      , TBA.GRANTEE           " ,
             "      , TBA.GRANTEETYPE       " ,
             "      , TBA.SELECTAUTH        " ,
             "      , TBA.INSERTAUTH        " ,
             "      , TBA.UPDATEAUTH        " ,
             "      , TBA.DELETEAUTH        " ,
             "      , TBA.CONTROLAUTH       " ,
             "      , TBA.ALTERAUTH         " ,
             "      , TBA.INDEXAUTH         " ,
             "      , TBA.REFAUTH           " ,
             "FROM  "SYSCATS".TABAUTH  TBA  " ,
             WHERELIST ,
             "ORDER BY TBA.TABSCHEMA ",
             "       , TBA.TABNAME   ",
             "       , TBA.GRANTOR   ",
             "       , TBA.GRANTEE   ",
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 10           /* TABSCHEMA                 */
OUTSQLDA.2.SQLLEN   = 20           /* TABNAME                   */
OUTSQLDA.3.SQLLEN   = 10           /* GRANTOR                   */
OUTSQLDA.5.SQLLEN   = 10           /* GRANTEE                   */

Call LIST_AUTOMATIC_TABLE

RETURN

LIST_COLA:
CNR   = 1           /*  CURSOR NUMMER FUER TABLESPACE   */
SNR   = CNR

WHERELIST    = ""
CALL MAKE_WHERELIST "COLA.TABSCHEMA", DB2_CREATOR1
CALL MAKE_WHERELIST "COLA.TABNAME", DB2_NAME1
CALL MAKE_WHERELIST "COLA.COLNAME", DB2_CREATOR2

SQLSTMT    = "SELECT  COLA.TABSCHEMA        " ,
             "      , COLA.TABNAME          " ,
             "      , COLA.COLNAME          " ,
             "      , COLA.COLNO            " ,
             "      , COLA.GRANTOR          " ,
             "      , COLA.GRANTORTYPE      " ,
             "      , COLA.GRANTEE          " ,
             "      , COLA.GRANTEETYPE      " ,
             "      , COLA.PRIVTYPE         " ,
             "      , COLA.GRANTABLE        " ,
             "FROM  "SYSCATS".COLAUTH  COLA " ,
             WHERELIST ,
             "ORDER BY COLA.TABSCHEMA ",
             "       , COLA.TABNAME  ",
             "       , COLA.COLNO    ",
             "       , COLA.COLNAME  ",
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 10           /* TABSCHEMA                 */
OUTSQLDA.2.SQLLEN   = 20           /* TABNAME                   */
OUTSQLDA.3.SQLLEN   = 10           /* COLNAME                   */

Call LIST_AUTOMATIC_TABLE

RETURN

LIST_DBA:
CNR   = 1           /*  CURSOR NUMMER FUER TABLESPACE   */
SNR   = CNR

WHERELIST    = ""
CALL MAKE_WHERELIST "DBA.GRANTOR", DB2_CREATOR1
CALL MAKE_WHERELIST "DBA.GRANTEE", DB2_NAME1

SQLSTMT    = "SELECT DBA.GRANTOR                ",
             "    ,  DBA.GRANTORTYPE            ",
             "    ,  DBA.GRANTEE                ",
             "    ,  DBA.GRANTEETYPE            ",
             "    ,  DBA.BINDADDAUTH            ",
             "    ,  DBA.CONNECTAUTH            ",
             "    ,  DBA.CREATETABAUTH          ",
             "    ,  DBA.DBADMAUTH              ",
             "    ,  DBA.EXTERNALROUTINEAUTH    ",
             "    ,  DBA.IMPLSCHEMAAUTH         ",
             "    ,  DBA.LOADAUTH               ",
             "    ,  DBA.NOFENCEAUTH            ",
             "    ,  DBA.QUIESCECONNECTAUTH     ",
             "    ,  DBA.LIBRARYADMAUTH         ",
             "    ,  DBA.SECURITYADMAUTH        ",
             "    ,  DBA.SQLADMAUTH             ",
             "    ,  DBA.WLMADMAUTH             ",
             "    ,  DBA.EXPLAINAUTH            ",
             "    ,  DBA.DATAACCESSAUTH         ",
             "    ,  DBA.ACCESSCTRLAUTH         ",
             "    ,  DBA.CREATESECUREAUTH       ",
             "FROM  "SYSCATS".DBAUTH   DBA " ,
             WHERELIST ,
             "ORDER BY DBA.GRANTOR   ",
             "       , DBA.GRANTEE   ",
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 10           /* TABSCHEMA                 */
OUTSQLDA.2.SQLLEN   = 20           /* TABNAME                   */
OUTSQLDA.3.SQLLEN   = 10           /* COLNAME                   */

Call LIST_AUTOMATIC_TABLE

RETURN

LIST_IXA:
CNR   = 1           /*  CURSOR NUMMER FUER TABLESPACE   */
SNR   = CNR

WHERELIST    = ""
CALL MAKE_WHERELIST "IXA.INDSCHEMA", DB2_CREATOR1
CALL MAKE_WHERELIST "IXA.INDNAME",   DB2_NAME1

SQLSTMT    = "SELECT INDSCHEMA          ",
             "    ,  INDNAME            ",
             "    ,  GRANTOR            ",
             "    ,  GRANTORTYPE        ",
             "    ,  GRANTEE            ",
             "    ,  GRANTEETYPE        ",
             "    ,  CONTROLAUTH        ",
             "FROM  "SYSCATS".INDEXAUTH IXA" ,
             WHERELIST ,
             "ORDER BY IXA.INDSCHEMA ",
             "       , IXA.INDNAME   ",
             "       , IXA.GRANTEE   ",
             "       , IXA.GRANTEE   ",
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 10           /* INDSCHEMA                 */
OUTSQLDA.2.SQLLEN   = 20           /* INDNAME                   */
OUTSQLDA.3.SQLLEN   = 10           /* GRANTOR                   */

Call LIST_AUTOMATIC_TABLE

RETURN

LIST_LIBA:
CNR   = 1           /*  CURSOR NUMMER FUER TABLESPACE   */
SNR   = CNR

WHERELIST    = ""
CALL MAKE_WHERELIST "LIBA.LIBSCHEMA", DB2_CREATOR1
CALL MAKE_WHERELIST "LIBA.LIBNAME ", DB2_NAME1

SQLSTMT    = "SELECT LIBSCHEMA        ",
             "    ,  LIBNAME          ",
             "    ,  GRANTOR          ",
             "    ,  GRANTORTYPE      ",
             "    ,  GRANTEE          ",
             "    ,  GRANTEETYPE      ",
             "    ,  ALTERAUTH        ",
             "    ,  USAGEAUTH        ",
             "FROM  "SYSCATS".LIBRARYAUTH LIBA ",
             WHERELIST ,
             "ORDER BY LIBA.LIBSCHEMA ",
             "       , LIBA.LIBNAME  ",
             "       , LIBA.GRANTEE  ",
             "       , LIBA.GRANTEE  ",
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 10           /* INDSCHEMA                 */
OUTSQLDA.2.SQLLEN   = 20           /* INDNAME                   */
OUTSQLDA.3.SQLLEN   = 10           /* GRANTOR                   */

Call LIST_AUTOMATIC_TABLE

RETURN

LIST_MODA:
CNR   = 1           /*  CURSOR NUMMER FUER TABLESPACE   */
SNR   = CNR

WHERELIST    = ""
CALL MAKE_WHERELIST "MODA.MODULESCHEMA", DB2_CREATOR1
CALL MAKE_WHERELIST "MODA.MODULENAME  ", DB2_NAME1

SQLSTMT    = "SELECT MODULEID        ",
             "    ,  MODULESCHEMA    ",
             "    ,  MODULENAME      ",
             "    ,  GRANTOR         ",
             "    ,  GRANTORTYPE     ",
             "    ,  GRANTEE         ",
             "    ,  GRANTEETYPE     ",
             "    ,  EXECUTEAUTH     ",
             "FROM  "SYSCATS".MODULEAUTH  MODA ",
             WHERELIST ,
             "ORDER BY MODA.MODULEID     ",
             "       , MODA.MODULESCHEMA ",
             "       , MODA.MODULENAME   ",
             "       , MODA.GRANTOR  ",
             "       , MODA.GRANTEE  ",
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 10           /* INDSCHEMA                 */
OUTSQLDA.2.SQLLEN   = 20           /* INDNAME                   */
OUTSQLDA.3.SQLLEN   = 10           /* GRANTOR                   */

Call LIST_AUTOMATIC_TABLE

RETURN

LIST_PGA:
CNR   = 1           /*  CURSOR NUMMER FUER TABLESPACE   */
SNR   = CNR

WHERELIST    = ""
CALL MAKE_WHERELIST "PGA.PKGSCHEMA ", DB2_CREATOR1
CALL MAKE_WHERELIST "PGA.PKGNAME   ", DB2_NAME1

SQLSTMT    = "SELECT PKGSCHEMA       ",
             "    ,  PKGNAME         ",
             "    ,  GRANTOR         ",
             "    ,  GRANTORTYPE     ",
             "    ,  GRANTEE         ",
             "    ,  GRANTEETYPE     ",
             "    ,  CONTROLAUTH     ",
             "    ,  BINDAUTH        ",
             "    ,  EXECUTEAUTH     ",
             "FROM  "SYSCATS".PACKAGEAUTH PGA  ",
             WHERELIST ,
             "ORDER BY PGA.PKGSCHEMA     ",
             "       , PGA.PKGNAME       ",
             "       , PGA.GRANTOR   ",
             "       , PGA.GRANTEE   ",
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 10           /* INDSCHEMA                 */
OUTSQLDA.2.SQLLEN   = 20           /* INDNAME                   */
OUTSQLDA.3.SQLLEN   = 10           /* GRANTOR                   */

Call LIST_AUTOMATIC_TABLE

RETURN

LIST_PTHA:
CNR   = 1           /*  CURSOR NUMMER FUER TABLESPACE   */
SNR   = CNR

WHERELIST    = ""
CALL MAKE_WHERELIST "PTHA.SERVERNAME", DB2_CREATOR1

SQLSTMT    = "SELECT SERVERNAME      ",
             "    ,  GRANTOR         ",
             "    ,  GRANTORTYPE     ",
             "    ,  GRANTEE         ",
             "    ,  GRANTEETYPE     ",
             "FROM  "SYSCATS".PASSTHRUAUTH PTHA",
             WHERELIST ,
             "ORDER BY PTHA.SERVERNAME   ",
             "       , PTHA.GRANTOR  ",
             "       , PTHA.GRANTEE  ",
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 10           /* INDSCHEMA                 */
OUTSQLDA.2.SQLLEN   = 20           /* INDNAME                   */
OUTSQLDA.3.SQLLEN   = 10           /* GRANTOR                   */

Call LIST_AUTOMATIC_TABLE

RETURN

LIST_ROA:
CNR   = 1           /*  CURSOR NUMMER FUER TABLESPACE   */
SNR   = CNR

WHERELIST    = ""
CALL MAKE_WHERELIST "ROLENAME  ", DB2_NAME1

SQLSTMT    = "SELECT ROLENAME        ",
             "    ,  ROLEID          ",
             "    ,  ADMIN           ",
             "    ,  GRANTOR         ",
             "    ,  GRANTORTYPE     ",
             "    ,  GRANTEE         ",
             "    ,  GRANTEETYPE     ",
             "FROM  "SYSCATS".ROLEAUTH ROA",
             WHERELIST ,
             "ORDER BY ROLENAME     ",
             "       , GRANTOR  ",
             "       , GRANTEE  ",
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 10           /* INDSCHEMA                 */
OUTSQLDA.2.SQLLEN   = 20           /* INDNAME                   */
OUTSQLDA.3.SQLLEN   = 10           /* GRANTOR                   */

Call LIST_AUTOMATIC_TABLE

RETURN

LIST_RTA:
CNR   = 1           /*  CURSOR NUMMER FUER TABLESPACE   */
SNR   = CNR

WHERELIST    = ""
CALL MAKE_WHERELIST "SCHEMA    ", DB2_CREATOR1
CALL MAKE_WHERELIST "SPECIFICNAME", DB2_NAME1

SQLSTMT    = "SELECT SCHEMA       ",
             "    ,  SPECIFICNAME ",
             "    ,  TYPESCHEMA   ",
             "    ,  TYPENAME     ",
             "    ,  GRANTOR      ",
             "    ,  GRANTORTYPE  ",
             "    ,  GRANTEE      ",
             "    ,  GRANTEETYPE  ",
             "    ,  ROUTINETYPE  ",
             "    ,  EXECUTEAUTH  ",
             "    ,  GRANT_TIME   ",
             "FROM  "SYSCATS".ROUTINEAUTH RTA",
             WHERELIST ,
             "ORDER BY SCHEMA       ",
             "       , SPECIFICNAME ",
             "       , GRANTOR  ",
             "       , GRANTEE  ",
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 10           /* INDSCHEMA                 */
OUTSQLDA.2.SQLLEN   = 20           /* INDNAME                   */
OUTSQLDA.3.SQLLEN   = 10           /* GRANTOR                   */

Call LIST_AUTOMATIC_TABLE

RETURN

LIST_SCA:
CNR   = 1           /*  CURSOR NUMMER FUER TABLESPACE   */
SNR   = CNR

WHERELIST    = ""
CALL MAKE_WHERELIST "SCHEMANAME",  DB2_NAME1

SQLSTMT    = "SELECT SCHEMANAME   ",
             "    ,  GRANTOR      ",
             "    ,  GRANTORTYPE  ",
             "    ,  GRANTEE      ",
             "    ,  GRANTEETYPE  ",
             "    ,  ALTERINAUTH  ",
             "    ,  CREATEINAUTH ",
             "    ,  DROPINAUTH   ",
             "FROM  "SYSCATS".SCHEMAAUTH  SCA",
             WHERELIST ,
             "ORDER BY SCHEMANAME   ",
             "       , GRANTOR  ",
             "       , GRANTEE  ",
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 10           /* INDSCHEMA                 */
OUTSQLDA.2.SQLLEN   = 20           /* INDNAME                   */
OUTSQLDA.3.SQLLEN   = 10           /* GRANTOR                   */

Call LIST_AUTOMATIC_TABLE

RETURN

LIST_SEA:
CNR   = 1           /*  CURSOR NUMMER FUER TABLESPACE   */
SNR   = CNR

WHERELIST    = ""
CALL MAKE_WHERELIST "SEQSCHEMA ", DB2_CREATOR1
CALL MAKE_WHERELIST "SEQNAME   ", DB2_NAME1

SQLSTMT    = "SELECT SEQSCHEMA    ",
             "    ,  SEQNAME      ",
             "    ,  GRANTOR      ",
             "    ,  GRANTORTYPE  ",
             "    ,  GRANTEE      ",
             "    ,  GRANTEETYPE  ",
             "    ,  ALTERAUTH    ",
             "    ,  USAGEAUTH    ",
             "FROM  "SYSCATS".SEQUENCEAUTH SEA",
             WHERELIST ,
             "ORDER BY SEQSCHEMA    ",
             "       , SEQNAME  ",
             "       , GRANTOR  ",
             "       , GRANTEE  ",
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 10           /* INDSCHEMA                 */
OUTSQLDA.2.SQLLEN   = 20           /* INDNAME                   */
OUTSQLDA.3.SQLLEN   = 10           /* GRANTOR                   */

Call LIST_AUTOMATIC_TABLE

RETURN

LIST_SUGA:
CNR   = 1           /*  CURSOR NUMMER FUER TABLESPACE   */
SNR   = CNR

WHERELIST    = ""
CALL MAKE_WHERELIST "SEQSCHEMA ", DB2_CREATOR1
CALL MAKE_WHERELIST "SEQNAME   ", DB2_NAME1

SQLSTMT    = "SELECT GRANTOR              ",
             "    ,  TRUSTEDID            ",
             "    ,  TRUSTEDIDTYPE        ",
             "    ,  SURROGATEAUTHID      ",
             "    ,  SURROGATEAUTHIDTYPE  ",
             "    ,  AUTHENTICATE         ",
             "    ,  CONTEXTROLE          ",
             "    ,  GRANT_TIME           ",
             "FROM  "SYSCATS".SURROGATEAUTHIDS SUGA ",
             WHERELIST ,
             "ORDER BY GRANTOR   ",
             "       , TRUSTEDID ",
             "       , SURROGATEAUTHID ",
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 10           /* INDSCHEMA                 */
OUTSQLDA.2.SQLLEN   = 20           /* INDNAME                   */
OUTSQLDA.3.SQLLEN   = 10           /* GRANTOR                   */

Call LIST_AUTOMATIC_TABLE

RETURN

LIST_VARA:
CNR   = 1           /*  CURSOR NUMMER FUER TABLESPACE   */
SNR   = CNR

WHERELIST    = ""
CALL MAKE_WHERELIST "VARSCHEMA   ", DB2_CREATOR1
CALL MAKE_WHERELIST "VARNAME     ", DB2_NAME1

SQLSTMT    = "SELECT VARSCHEMA              ",
             "    ,  VARNAME                ",
             "    ,  VARID                  ",
             "    ,  GRANTOR                ",
             "    ,  GRANTORTYPE            ",
             "    ,  GRANTEE                ",
             "    ,  GRANTEETYPE            ",
             "    ,  READAUTH               ",
             "    ,  WRITEAUTH              ",
             "FROM  "SYSCATS".VARIABLEAUTH VARA ",
             WHERELIST ,
             "ORDER BY VARSCHEMA   ",
             "       , VARNAME     ",
             "       , GRANTOR     ",
             "       , GRANTEE     ",
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 10           /* VARSCHEMA                 */
OUTSQLDA.2.SQLLEN   = 20           /* VARNAME                   */
OUTSQLDA.3.SQLLEN   = 10           /* VARID                     */

Call LIST_AUTOMATIC_TABLE

RETURN

LIST_WLA:
CNR   = 1           /*  CURSOR NUMMER FUER TABLESPACE   */
SNR   = CNR

WHERELIST    = ""
CALL MAKE_WHERELIST "WORKLOADNAME", DB2_NAME1

SQLSTMT    = "SELECT WORKLOADID             ",
             "    ,  WORKLOADNAME           ",
             "    ,  GRANTOR                ",
             "    ,  GRANTORTYPE            ",
             "    ,  GRANTEE                ",
             "    ,  GRANTEETYPE            ",
             "    ,  USAGEAUTH              ",
             "FROM  "SYSCATS".WORKLOADAUTH WLA ",
             WHERELIST ,
             "ORDER BY WORKLOADID  ",
             "       , GRANTOR     ",
             "       , GRANTEE     ",
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 10           /* WORKLOADID                */
OUTSQLDA.2.SQLLEN   = 40           /* WORKLOADNAME              */
OUTSQLDA.3.SQLLEN   = 10           /* GRANTOR                   */
OUTSQLDA.4.SQLLEN   = 11           /* GRANTORTYPE               */
OUTSQLDA.5.SQLLEN   = 10           /* GRANTEE                   */
OUTSQLDA.6.SQLLEN   = 11           /* GRANTEETYPE               */

Call LIST_AUTOMATIC_TABLE

RETURN

LIST_XSRA:
CNR   = 1           /*  CURSOR NUMMER FUER TABLESPACE   */
SNR   = CNR

WHERELIST    = ""
If Datatype(DB2_NAME1) <> "NUM" Then DB2_NAME1 = ""
CALL MAKE_WHERELIST "OBJECTID ", DB2_NAME1, "NUM"

SQLSTMT    = "SELECT OBJECTID               ",
             "    ,  USAGEAUTH              ",
             "    ,  GRANTOR                ",
             "    ,  GRANTORTYPE            ",
             "    ,  GRANTEE                ",
             "    ,  GRANTEETYPE            ",
             "    ,  USAGEAUTH              ",
             "FROM  "SYSCATS".XSROBJECTAUTH XSRA",
             WHERELIST ,
             "ORDER BY OBJECTID    ",
             "       , GRANTOR     ",
             "       , GRANTEE     ",
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 10           /* INDSCHEMA                 */

Call LIST_AUTOMATIC_TABLE

RETURN

LIST_AID:
CNR   = 1           /*  CURSOR NUMMER FUER TABLESPACE   */
SNR   = CNR

WHERELIST    = ""
CALL MAKE_WHERELIST "AUTHID   ", DB2_NAME1

SQLSTMT    = "SELECT AUTHID                 ",
             "    ,  AUTHIDTYPE             ",
             "FROM  "SYSIBMA".AUTHORIZATIONIDS AID",
             WHERELIST ,
             "ORDER BY AUTHID      ",
             "       , AUTHIDTYPE  ",
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 40           /* AUTHID                    */

Call LIST_AUTOMATIC_TABLE

RETURN


LIST_XSR:
CNR = 1
SNR = CNR

WHERELIST = ""
CALL MAKE_WHERELIST "XSROBJECTSCHEMA",  DB2_CREATOR1
CALL MAKE_WHERELIST "XSROBJECTNAME",  DB2_NAME1

SQLSTMT   = "SELECT XSROBJECTID                ",
            "    ,  XSROBJECTSCHEMA            ",
            "    ,  XSROBJECTNAME              ",
            "    ,  TARGETNAMESPACEID          ",
            "    ,  SCHEMALOCATIONID           ",
            "    ,  VERSIONID                  ",
            "    ,  OBJECTTYPE                 ",
            "    ,  OWNER                      ",
            "    ,  STATUS                     ",
            "    ,  DECOMPOSITION              ",
            "    ,  DECOMPOSITION_VERSION      ",
            "    ,  OWNERTYPE                  ",
            "    ,  CREATE_TIME                ",
            "    ,  ALTER_TIME                 ",
            "FROM "SYSIBMS".SYSXSROBJECTS XSR  ",
             WHERELIST  ,
            ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 10           /* XSROBJECTSCHEMA           */
OUTSQLDA.2.SQLLEN   = 30           /* XSROBJECTNAME             */
OUTSQLDA.8.SQLLEN   = 10           /* OWNER                     */

Call LIST_AUTOMATIC_TABLE

CALL CLOSE_CURSOR_AC3
sqlcode = 0

Return

LIST_RCK:
CNR = 1
SNR = CNR

RXDB2_PUTSTEM  = 'AUSGABE. AUSGABE2. AUSGABE3. AUSGABE4.'
Anzeige_stem   = 1
AUSGABE.0      = 0
AUSGABE1.0     = 0
AUSGABE2.0     = 0
AUSGABE3.0     = 0
AUSGABE4.0     = 0
DB2_CREATOR1   = Strip(TRANSLATE(DB2_CREATOR1, ' ', '*'))
DB2_NAME1      = Strip(TRANSLATE(DB2_NAME1, ' ', '*'))
Type = 'S'
such = DB2_CREATOR1
If Length(db2_name1) > 0 Then do
   Type = 'T'
   such = space(DB2_CREATOR1 "." db2_name1)
 End
SQLSTMT    = "",
             " CALL "SYSPROCA".REORGCHK_TB_STATS ( " ,
             " '"type"', '"such"'  " ,
             " )                                 " ,
             ""

CALL Stored_Procedure
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 10           /* OBJECT_SCHEMAMA           */
OUTSQLDA.2.SQLLEN   = 40           /* OBJECT_NAMEME             */

DDLTEXT = DDLTEXT || "*UZ*"
DDLTEXT = DDLTEXT || SUBSTR("SCHEMA"               , 1,  9)
DDLTEXT = DDLTEXT SUBSTR("NAME  "               , 1, 30)
DDLTEXT = DDLTEXT SUBSTR("     CARD"            , 1,  9)
DDLTEXT = DDLTEXT SUBSTR(" OVERFLOW"             , 1,  9)
DDLTEXT = DDLTEXT SUBSTR("   NPAGES"               , 1,  9)
DDLTEXT = DDLTEXT SUBSTR("   FPAGES"               , 1,  9)
DDLTEXT = DDLTEXT SUBSTR("  ACT_BLK"              , 1,  9)
DDLTEXT = DDLTEXT SUBSTR("    TSIZE"                , 1,  9)
DDLTEXT = DDLTEXT SUBSTR("       F1"                   , 1,  9)
DDLTEXT = DDLTEXT SUBSTR("       F2"                   , 1,  9)
DDLTEXT = DDLTEXT SUBSTR("       F3"                   , 1,  9)
DDLTEXT = DDLTEXT SUBSTR("REORG"                , 1,  5)
DDLTEXT = DDLTEXT "-NR"

DO I = 1 TO AUSGABE.0
   LZEILE  = ''
   LZEILE = LZEILE || LEFT(AUSGABE.I.TABLE_SCHEMA, 9)
   LZEILE = LZEILE LEFT(AUSGABE.I.TABLE_NAME  ,30)
   LZEILE = LZEILE RIGHT(AUSGABE.I.CARD    , 9 )
   LZEILE = LZEILE RIGHT(AUSGABE.I.OVERFLOW, 9 )
   LZEILE = LZEILE RIGHT(AUSGABE.I.NPAGES  , 9 )
   LZEILE = LZEILE RIGHT(AUSGABE.I.FPAGES  , 9 )
   LZEILE = LZEILE RIGHT(AUSGABE.I.ACTIVE_BLOCKS, 9)
   LZEILE = LZEILE RIGHT(AUSGABE.I.TSIZE   , 9 )
   LZEILE = LZEILE RIGHT(AUSGABE.I.F1      , 9 )
   LZEILE = LZEILE RIGHT(AUSGABE.I.F2      , 9 )
   LZEILE = LZEILE RIGHT(AUSGABE.I.F3      , 9 )
   LZEILE = LZEILE LEFT(AUSGABE.I.REORG    , 5 )
   CALL ADD_TABLE
 END /* END DO I = 1 TO DDLTEXT */

Return


LIST_RTS:
CNR = 1
SNR = CNR

WHERELIST = ""
CALL MAKE_WHERELIST "OBJECT_SCHEMA",  DB2_CREATOR1
CALL MAKE_WHERELIST "OBJECT_NAME",  DB2_NAME1

SQLSTMT   = "SELECT OBJECT_TYPE                ",
            "    ,  OBJECT_SCHEMA              ",
            "    ,  OBJECT_NAME                ",
            "    ,  MEMBER                     ",
            "    ,  REQUEST_TYPE               ",
            "    ,  REQUEST_STATUS             ",
            "    ,  REQUEST_TIME               ",
            "    ,  QUEUE_POSITION             ",
            "    ,  QUEUE_ENTRY_TIME           ",
            "    ,  EXECUTION_START_TIME       ",
            "FROM TABLE(MON_GET_RTS_RQST()) AS T ",
             WHERELIST  ,
            ""


CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.2.SQLLEN   = 10           /* OBJECT_SCHEMAMA           */
OUTSQLDA.3.SQLLEN   = 40           /* OBJECT_NAMEME             */

Call LIST_AUTOMATIC_TABLE

CALL CLOSE_CURSOR_AC3
sqlcode = 0

Return

LIST_BR:    /* SYSDEPENDENCIES     */
CNR = 4
SNR = CNR

save = DB2_EDITSQL
DB2_EDITSQL = 'N'
db2_list_Obj = Space(DB2_CREATOR1 "." DB2_NAME1, 0)
Call Get_TBCols
if tbCols = "" Then TBCols = "*"
WHERELIST    = ""

DB2_EDITSQL = save

SQLSTMT    = "SELECT "TBCols ,
             "FROM "db2_list_Obj ,
             WHERELIST ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB


DDLTEXT = DDLTEXT || "*UZ*"

call Automatic_Header
DDLTEXT = DDLTEXT "-NR"

DO WHILE SQLCODE = 0
   SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
   Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Call SQLERROR_AC3
             Exit 8
          End
        Otherwise NOP
     End

   LZEILE  = ''
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3

Return

LIST_SPACE:
CNR = 4
SNR = CNR

WHERELIST = ""
CALL MAKE_WHERELIST "TABSCHEMA",  DB2_CREATOR1
CALL MAKE_WHERELIST "TABNAME"  ,  DB2_NAME1

SQLSTMT    = "SELECT    T1.TABSCHEMA                    ",
             "        , T1.TABNAME                      ",
             "        , (T1.DATA_OBJECT_P_SIZE          ",
             "         + T1.INDEX_OBJECT_P_SIZE         ",
             "         + T1.LONG_OBJECT_P_SIZE          ",
             "         + T1.LOB_OBJECT_P_SIZE           ",
             "         + T1.XML_OBJECT_P_SIZE) / (1024) ",
             "   AS TOTAL_SIZE_MB                       ",
             "        , T1.DATA_OBJECT_P_SIZE           ",
             "        , T1.INDEX_OBJECT_P_SIZE          ",
             "        , T1.LONG_OBJECT_P_SIZE           ",
             "        , T1.LOB_OBJECT_P_SIZE            ",
             "        , T1.XML_OBJECT_P_SIZE            ",
             "                                          ",
             "FROM "SYSIBMA".ADMINTABINFO      T1       ",
             WHERELIST ,
             ""

CALL OPEN_CURSOR_AC3
Call OPEN_COLTB

OUTSQLDA.1.SQLLEN   = 10           /* TABSCHEMA                 */
OUTSQLDA.2.SQLLEN   = 40           /* TABNAME                   */

DDLTEXT = DDLTEXT || "*UZ*"

call Automatic_Header
DDLTEXT = DDLTEXT "-NR"

DO WHILE SQLCODE = 0
   SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
   Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Call SQLERROR_AC3
             Exit 8
          End
        Otherwise NOP
     End

   LZEILE  = ''
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3

Return

Get_TBCols:

CNR = 1
SNR = CNR
parse value DB2_LIST_OBJ with TB_Creator "." TB_Name .
WHERELIST = ""
CALL MAKE_WHERELIST "TBCREATOR", TB_Creator
CALL MAKE_WHERELIST "TBNAME", TB_Name
CALL MAKE_WHERELIST "", "CO.NAME NOT LIKE 'DB2_GENERATED_ROWID%'"

SQLSTMT    = "SELECT COLNO               " ,
             "     , NAME                " ,
             "     , LENGTH              " ,
             "     , COLTYPE                   " ,
             "FROM  "SYSIBMS".SYSCOLUMNS CO    " ,
             WHERELIST ,
             "ORDER BY COLNO                   " ,
             ""


CALL OPEN_CURSOR_AC3

Komma    = ""
TBCols   = ""
DO WHILE SQLCODE = 0
   CNR = 1
   SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
   Call EXECUTE_SQL_TEXT_AC3

   Select
       When SQLCODE = 100 THEN DO
            CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
            LEAVE
         End
       When SQLCODE <  0  THEN DO
            SAY "ERROR ON FETCH C"CNR", RC="RC ,
                "SQLCODE="SQLCODE         ,
                "SQLERRMC="SQLERRMC       ,
                ""
            Exit 8
         End
       Otherwise NOP
    End

   If COLTYPE = 'BLOB' Then DO
      NAME = "CAST(" || NAME" AS BLOB("MAXBLOBS")) AS "NAME
    End
   If COLTYPE = 'CLOB' Then DO
      NAME = "CAST(" || NAME" AS CLOB("MAXBLOBS")) AS "NAME
    End


   TBCols   = TBCols || Komma || Name
   Komma    = ","
 END   /* END WHILE SQLCODE = 0 */
DROP NAME COLNO LENGTH2 COLTYPE
RETURN



LIST_SQLEX:  /* EXEUTE A SQLSTATEMENT IN WRITE TO A ISPF-TABLE */
   CNR = 1
   SNR = CNR

   Eingabe.0 = 1
   Eingabe.1 = SUCH1

   Fetch_Data = "NO"
   CALL EXECUTE_SQL_DYNAMIC_AC3

   COLUMNS = ""
   KOMMA =   ""
   DO CI = 1 TO OUTSQLDA.SQLD
      COLUMNS = COLUMNS "COL"CI || KOMMA
      DDLTEXT = DDLTEXT OUTSQLDA.CI.SQLNAME
    END

   ADDRESS ISPEXEC  'TBCLOSE 'SELTAB
   ADDRESS ISPEXEC  'TBERASE 'SELTAB
   ADDRESS ISPEXEC  'TBOPEN  'SELTAB

   IF RC <> 0 THEN Do
      ADDRESS ISPEXEC  'TBCLOSE 'SELTAB
      ADDRESS ISPEXEC 'TBCREATE 'SELTAB ,
                      'KEYS(ROWNR) NAMES('COLUMNS')'
      If rc <> 0 Then DO
         say "TBCREATE "SELTAB "RC="RC
         say "ZEDSMSG="ZEDSMSG
         say "ZERRLM="ZERRLM
         say "ZERRMSG="ZERRMSG
         say "ZERRSM="ZERRSM
       End
       ADDRESS ISPEXEC  'TBOPEN  'SELTAB
    End

   ROWNR = 0
   DO WHILE SQLCODE = 0
      ROWNR = ROWNR + 1
      SQLTEXT =  " FETCH C"CNR" USING DESCRIPTOR :OUTSQLDA"
      Call EXECUTE_SQL_TEXT_AC3
      IF SQLCODE =  100 THEN LEAVE      /* UB       13.06.2013 */
      IF SQLCODE <    0 THEN Do         /* UB       13.06.2013 */
         SQLSTMT = SQLTEXT              /* UB       13.06.2013 */
         LEAVE
       End
      If sqlcode > 0 then sqlcode = 0   /* Warnings 13.06.2013 */
      DO CI = 1 TO OUTSQLDA.SQLD
         CO = "COL"CI
         INTERPRET CO "='"OUTSQLDA.CI.SQLDATA"'"
       END
       ANZAHL_ROWS = ANZAHL_ROWS +1
      ADDRESS ISPEXEC 'TBADD 'SELTAB
    END
ADDRESS ISPEXEC  'TBCLOSE 'SELTAB
SQLTEXT = "CLOSE C"CNR
Call EXECUTE_SQL_TEXT_AC3


Return

LIST_AUTOMATIC_TABLE:


DDLTEXT = DDLTEXT "*UZ*"
call Automatic_Header
DDLTEXT = DDLTEXT "-NR"

DO WHILE SQLCODE = 0
   SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
   Call EXECUTE_SQL_TEXT_AC3

    Select
        When SQLCODE = 100 THEN DO
             CALL CLOSE_CURSOR_AC3 /* CLOSE CURSOR */
             LEAVE
          End
        When SQLCODE <> 0  THEN DO
             SAY "ERROR ON FETCH C"CNR", RC="RC ,
                 "SQLCODE="SQLCODE         ,
                 "SQLERRMC="SQLERRMC       ,
                 ""
             Exit 8
          End
        Otherwise NOP
     End
   LZEILE  = ''
   Call Automatic_Data
   CALL ADD_TABLE
 END

CALL CLOSE_CURSOR_AC3
RETURN

EXECUTE_SQL_DYNAMIC_AC3:

If datatype(CNR) <> "NUM" Then CNR = 1
If datatype(SNR) <> "NUM" Then SNR = CNR

DO STI = 1 TO EINGABE.0
   SQLSTMT = EINGABE.STI
   SQLSTMT = SPACE(SQLSTMT, 1)

   IF WORD(SQLSTMT, 1) = "CONNECT" & WORD(SQLSTMT, 2) = "TO" THEN DO
      SQLTEXT =  " "SQLSTMT
      Call EXECUTE_SQL_TEXT_AC3
      IF SQLCODE <> 0 THEN DO
         SAY "Error in "SQLSTMT "SQLCODE: " SQLCODE
       END
      ITERATE
    END

   If DB2_FUNKTION = "SQLEX" Then do
      SQLSTMT = SQLSTMT "FOR FETCH ONLY WITH UR "
    End
   ELSE DO
      SQLSTMT = SQLSTMT maxFetch "FOR FETCH ONLY WITH UR "
    End

   If DB2_EDITSQL = "Y" | DB2_EDITSQL = "J" Then do
      SQLSTMT = Edit_SQL(SQLSTMT)
      DB2_EDITSQL = 'N'
    End

   SQLTEXT =         " CLOSE C"CNR" "
   Call EXECUTE_SQL_TEXT_AC3
   SQLTEXT =  " DECLARE              C"CNR" CURSOR FOR S"SNR
   Call EXECUTE_SQL_TEXT_AC3
   IF SQLCODE <> 0 THEN DO
      SAY "A3 DECLARE     SQLCODE="SQLCODE
      SAY SQLSTMT
    END
   SQLTEXT =  " PREPARE              S"SNR" FROM :SQLSTMT"
   Call EXECUTE_SQL_TEXT_AC3
   IF SQLCODE <> 0 THEN DO
      SAY "A3 PREPARE     SQLCODE="SQLCODE
      SAY SQLSTMT
    END
   SQLTEXT =  " DESCRIBE S"SNR" INTO :OUTSQLDA"
   Call EXECUTE_SQL_TEXT_AC3
   IF SQLCODE <> 0 THEN DO
      SAY "A3 DESCRIBE    SQLCODE="SQLCODE
      SAY SQLSTMT
    END

   COLS      = ""
   RXCOLS    = ""
   SQL_FETCH = ""
   KOMMA     = ""
   if datatype(OUTSQLDA.SQLD) = NUM THEN DO CI = 1 TO OUTSQLDA.SQLD
      cols   = cols OUTSQLDA.CI.SQLNAME
      rxcols = rxcols  SPACE(RXDB2_PUTSTEM, 0) || I || "." ||  ,
                       SPACE(OUTSQLDA.CI.SQLNAME, 0)
      SQL_FETCH = SQL_FETCH || komma || ":" || OUTSQLDA.CI.SQLNAME
      If OUTSQLDA.CI.SQLTYPE // 2 = 1 THEN Do
         SQL_FETCH = SQL_FETCH ":I" || OUTSQLDA.CI.SQLNAME
       END
      KOMMA = ","
    End

   SQLTEXT =  " OPEN C"CNR""
   Call EXECUTE_SQL_TEXT_AC3
   IF SQLCODE <> 0 THEN DO
      SAY "A3 OPEN        SQLCODE="SQLCODE
      SAY SQLSTMT
    END
   IVAL = VALUE(SPACE(RXDB2_PUTSTEM, 0) || 0) "= 0"
   INTERPRET  IVAL

   If Fetch_Data = "NO" Then NOP
   ELSE call Fetch_Dynamic_data_AC3
 END

RETURN

Fetch_Dynamic_data_AC3:

   DO WHILE SQLCODE = 0
      SQLTEXT =  " FETCH C"CNR" USING DESCRIPTOR :OUTSQLDA"
      Call EXECUTE_SQL_TEXT_AC3
      IF SQLCODE  = 100 THEN LEAVE
      IF SQLCODE <>   0 THEN Do
         call SQLERROR_AC3
         LEAVE
       End
      IVAL = "IVAL_I = " VALUE(SPACE(RXDB2_PUTSTEM, 0) || 0) "+ 1"
      INTERPRET  IVAL
      IVAL = SPACE(RXDB2_PUTSTEM, 0) || 0  " = IVAL_I"
      INTERPRET  IVAL
      DO CI = 1 TO OUTSQLDA.SQLD
         /* AUSGABE.1.DBNAME = "DSNDB07"   */
         If Length(OUTSQLDA.CI.SQLDATA) = 1 ,
          & OUTSQLDA.CI.SQLDATA = x'00' Then OUTSQLDA.CI.SQLDATA = ' '
         If Length(OUTSQLDA.CI.SQLDATA) = 0 Then
            OUTSQLDA.CI.SQLDATA = ' '

         IVAL = VALUE(SPACE(RXDB2_PUTSTEM, 0) || IVAL_I) || "." ||  ,
                SPACE(OUTSQLDA.CI.SQLNAME, 0)
         INTERPRET IVAL"=OUTSQLDA.CI.SQLDATA"

         IVAL = value(SPACE(OUTSQLDA.CI.SQLNAME, 0))

       END
    END

RETURN

OPEN_CURSOR_AC3:
   SQLSTMT = SQLSTMT MaxFetch "FOR FETCH ONLY WITH UR "
    If DB2_EDITSQL = "Y" | DB2_EDITSQL = "J" Then do
       SQLSTMT = Edit_SQL(SQLSTMT)
       DB2_EDITSQL  = 'N'
     End

    IF DATATYPE(CNR) <> 'NUM' THEN CNR = 1
    IF DATATYPE(SNR) <> 'NUM' THEN SNR = 1

    SQLTEXT =         " CLOSE C"CNR
    Call EXECUTE_SQL_TEXT_AC3
    SQLTEXT =         " DECLARE C"CNR" CURSOR FOR S"SNR
    Call EXECUTE_SQL_TEXT_AC3
    IF SQLCODE <> 0 THEN DO
       SAY "ERROR ON DECLARE, RC="RC ,
           "SQLCODE="SQLCODE         ,
           "SQLERRMC="SQLERRMC       ,
           ""
    END
    SQLTEXT =         " PREPARE S"SNR" FROM :SQLSTMT"
    Call EXECUTE_SQL_TEXT_AC3
    IF SQLCODE <> 0 THEN DO
       SAY "ERROR ON PREPARE S"SNR"RC="RC ,
           "SQLCODE="SQLCODE         ,
           "SQLERRMC="SQLERRMC       ,
           ""
    END

   SQLTEXT =  " DESCRIBE S"SNR" INTO :OUTSQLDA"
   Call EXECUTE_SQL_TEXT_AC3
   If COLTAB_BUILD <> "N" Then do
      COLS      = ""
      RXCOLS    = ""
      SQL_FETCH = ""
      KOMMA     = ""
      if datatype(OUTSQLDA.SQLD) = NUM THEN DO CI = 1 TO OUTSQLDA.SQLD
         cols   = cols OUTSQLDA.CI.SQLNAME
         rxcols = cols OUTSQLDA.CI.SQLNAME
         SQL_FETCH = SQL_FETCH || komma || ":" || OUTSQLDA.CI.SQLNAME
         If OUTSQLDA.CI.SQLTYPE // 2 = 1 THEN Do
            SQL_FETCH = SQL_FETCH ":I" || OUTSQLDA.CI.SQLNAME
          END
         KOMMA = ","
         CLNAME = Strip(OUTSQLDA.CI.SQLNAME, "T")
         call ADD_TABLE_TBCOL
       End
    End

    SQLTEXT =         " OPEN C"CNR
    Call EXECUTE_SQL_TEXT_AC3
    IF SQLCODE <> 0 THEN DO
       SAY "ERROR ON OPEN C"CNR" , RC="RC ,
           "SQLCODE="SQLCODE         ,
           "SQLERRMC="SQLERRMC       ,
           ""
    END

RETURN

CLOSE_CURSOR_AC3:

    IF DATATYPE(CNR) <> 'NUM' THEN CNR = 1
    SQLTEXT =         " CLOSE C"CNR
    Call EXECUTE_SQL_TEXT_AC3

RETURN

CONNECT_LOCATION_AC3:
   SQLTEXT =  " CONNECT RESET"
   Call EXECUTE_SQL_TEXT_AC3
   If Length(SYSUID) > 0 & Length(SYSPWD) > 0 Then do
       SQLTEXT = " CONNECT TO "ARG(1)  "USER :SYSUID USING :SYSPWD "
    End
   ELSE Do
       SQLTEXT = " CONNECT TO "ARG(1)
    End
   Call EXECUTE_SQL_TEXT_AC3
   IF SQLCODE <> 0 THEN DO
      SAY "LUWA5AC3 Error on Connect "SQLTEXT "SQLCODE: " SQLCODE
      RETURN 8
      END
    parse value sqlerrp with DB_ENV 4 DB_Vers 6 DB_Rel 8 DB_Mod
RETURN 0

DISCONNECT_LOCATION_AC3:
   SQLTEXT =  "RELEASE " ARG(1)
   Call EXECUTE_SQL_TEXT_AC3
   SQLTEXT =  "COMMIT  "
   Call EXECUTE_SQL_TEXT_AC3

   SQLTEXT =  " CONNECT RESET"
   Call EXECUTE_SQL_TEXT_AC3
RETURN 0

EXECUTE_SQL_TEXT_AC3:
 Select
    When ENV = 'TSO' Then Do
         ADDRESS DSNREXX "EXECSQL "SQLTEXT
     End
    When ENV = 'WIN' Then Do
         CALL SQLEXEC SQLTEXT
         SQLCODE    = SQLCA.SQLCODE
         SQLERRMC   = SqlMsg
     End
    Otherwise NOP
  End
Return

Stored_Procedure:

rexx_sqltype.0   = 27
REXX_SQLTYPE.1   = "384 DATE               10 "
REXX_SQLTYPE.2   = "388 TIME                8 "
REXX_SQLTYPE.3   = "392 TIMESTAMP          26 "
REXX_SQLTYPE.4   = "396 DATALINK              "
REXX_SQLTYPE.5   = "404 BLOB                  "
REXX_SQLTYPE.6   = "408 CLOB                  "
REXX_SQLTYPE.7   = "412 DBCLOB                "
REXX_SQLTYPE.8   = "448 VARCHAR               "
REXX_SQLTYPE.9   = "452 CHAR                  "
REXX_SQLTYPE.10  = "456 LONGVARCHAR           "
REXX_SQLTYPE.11  = "464 VARGRAPHIC            "
REXX_SQLTYPE.12  = "468 GRAPHIC               "
REXX_SQLTYPE.13  = "472 LONGVARGRAPHIC        "
REXX_SQLTYPE.14  = "480 FLOAT                 "
REXX_SQLTYPE.15  = "484 DECIMAL               "
REXX_SQLTYPE.16  = "492 BIGINT             19 "
REXX_SQLTYPE.17  = "496 INTEGER            10 "
REXX_SQLTYPE.18  = "500 SMALLINT            5 "
REXX_SQLTYPE.19  = "904 ROWID                 "
REXX_SQLTYPE.20  = "908 VARBINARY             "
REXX_SQLTYPE.21  = "912 BINARY                "
REXX_SQLTYPE.22  = "916 BLOB                  "
REXX_SQLTYPE.23  = "924 DBCLOB                "
REXX_SQLTYPE.24  = "996 DECFLOAD              "
REXX_SQLTYPE.25  = "988 XML                   "
REXX_SQLTYPE.26  = "412 DBCLOB                "
REXX_SQLTYPE.27  = "468 GRAPHIC               "
DROP OU.
OU.0 = 0

maxrc         = 0
COLDEL        = ';'
CHARDEL       = '"'
SQLTERM       = ';'
SPROCPARSER   = ','
END_SQL_TERM  = SPACE(SQLTERM SQLTERM, 0)


    SQLSTMT = STRIP(SQLSTMT)
    If DB2_EDITSQL = "Y" | DB2_EDITSQL = "J" Then do
       SQLSTMT = Edit_SQL(SQLSTMT)
       DB2_EDITSQL = 'N'
     End


     parse value sqlstmt with proc "(" command
     command = reverse(command)
     command = Strip(command, 'L')
     command = Strip(command, 'L', ')' )
     command = reverse(command)

     callstmt  = sqlstmt

     parse value PROC WITH cl PROC_CREATOR '.' PROC_NAME
     PROC_CREATOR  = Strip(Translate(PROC_CREATOR))
     PROC_NAME     = Strip(Translate(PROC_NAME))

     CNR     = 10
     SNR     = 10
     If DB_ENV = "SQL" Then Do  /* DB2 LUW */
        SQLSTMT = "SELECT    DISTINCT                            ",
                  "        P.ROUTINENAME                         ",
                  "     ,  P.ROUTINESCHEMA                       ",
                  "     ,  P.SPECIFICNAME                        ",
                  "     ,  P.ROWTYPE                             ",
                  "     ,  P.PARMNAME                            ",
                  "     ,  P.LOCATOR                             ",
                  "     ,  P.ORDINAL                             ",
                  "     ,  P.TYPENAME                            ",
                  "     ,  P.LENGTH                              ",
                  "     ,  P.SCALE                               ",
                  "     ,  P.ROUTINETYPE                         ",
                  "     ,  R.RESULT_SETS                         ",
                  "FROM "SYSIBMS".SYSROUTINEPARMS P              ",
                  "INNER JOIN "SYSIBMS".SYSROUTINES R            ",
                  "  ON  P.ROUTINESCHEMA = R.ROUTINESCHEMA       ",
                  "  AND P.ROUTINENAME   = R.ROUTINENAME         ",
                  "  AND P.SPECIFICNAME  = R.SPECIFICNAME        ",
                  "WHERE P.ROUTINESCHEMA = '"PROC_CREATOR"'      ",
                  "AND   P.ROUTINENAME   = '"PROC_NAME"'         ",
                  "ORDER BY ORDINAL                              ",
                  ""
      End
     Else Do                    /* DB2 zOS */
        SQLSTMT = "SELECT    DISTINCT                            ",
                  "        P.SCHEMA       AS ROUTINENAME         ",
                  "     ,  P.NAME         AS ROUTINESCHEMA       ",
                  "     ,  P.SPECIFICNAME AS SPECIFICNAME        ",
                  "     ,  P.ROWTYPE      AS ROWTYPE             ",
                  "     ,  P.PARMNAME     AS PARMNAME            ",
                  "     ,  P.LOCATOR      AS LOCATOR             ",
                  "     ,  P.ORDINAL      AS ORDINAL             ",
                  "     ,  P.TYPENAME     AS TYPENAME            ",
                  "     ,  P.LENGTH       AS LENGTH              ",
                  "     ,  P.SCALE        AS SCALE               ",
                  "     ,  P.ROUTINETYPE  AS ROUTINETYPE         ",
                  "     ,  R.RESULT_SETS                         ",
                  "FROM "SYSIBMS".SYSPARMS P                     ",
                  "INNER JOIN "SYSIBMS".SYSROUTINES R            ",
                  "  ON  P.SCHEMA       = R.SCHEMA               ",
                  "  AND P.NAME         = R.NAME                 ",
                  "  AND P.SPECIFICNAME = R.SPECIFICNAME         ",
                  "WHERE P.SCHEMA        = '"PROC_CREATOR"'      ",
                  "AND   P.NAME          = '"PROC_NAME"'         ",
                  "ORDER BY ORDINAL                              ",
                  ""
      End
     SQLSTMT = SPACE(SQLSTMT, 1)
     ADD_TBCOL = "N"  /* Hier keine TBCOL Tab fuellen */
     Call OPEN_CURSOR_AC3
     ADD_TBCOL = "Y"
     OUTSQLDA.SQLD = 0
     cmd          = command
     cmdi         = 0
     cmdstring    = ""
     komma        = ""
     DO WHILE SQLCODE = 0
        SQLTEXT = " FETCH C"CNR" INTO "   SQL_FETCH
        Call EXECUTE_SQL_TEXT_AC3

          IF SQLCODE = 100 THEN LEAVE
          If sqlcode < 0 Then Do
             call SQLERROR_ac3
             return 8
           End

          cmdi         = cmdi + 1
          Do sqlti = 1 to rexx_sqltype.0
             If TYPENAME <>  WORD(rexx_sqltype.sqlti, 2) Then Iterate
             sqltype = WORD(rexx_sqltype.sqlti, 1)
             sqltype = sqltype + 1
             LEAVE
           End

          If Words(rexx_sqltype.sqlti) > 2 Then Do
             Length = Word(rexx_sqltype.sqlti, 3)
           End

          SPROCPARSER = Strip(SPROCPARSER)
          I1    =   "parse value cmd with DATA '"SPROCPARSER"' cmd"
          INTERPRET I1

          Data = Strip(Data)
          If Strip(Data) = "?" Then DATA = ""
          If Strip(Data) = "''"  Then DATA = ""
          Ind = 0
          If Length(data) = 0 Then Do
             Ind = -1
             Select
               When TYPENAME = "BIGINT"   THEN Do
                    DATA = Right(DATA, LENGTH, '0')
                End
               When TYPENAME = "INTEGER"  THEN Do
                    DATA = Right(DATA, LENGTH, '0')
                End
               When TYPENAME = "SMALLINT" THEN Do
                    DATA = Right(DATA, LENGTH, '0')
                End
               When TYPENAME = "DECIMAL"  THEN Do
                    DATA = Right(DATA, LENGTH, '0')
                    DATA = "0.0"
                End
               Otherwise Do
                    If length > 32000 Then Length = 32000
                    DATA = "'" || Left(DATA, LENGTH, ' ') || "'"
                End
              End
           End


/*        INTERPRET "CM"cmdi "= DATA"                              */
/*        cmdstring = cmdstring || komma ":" || "CM" || cmdi       */
          PARMNAME  = Translate(PARMNAME, '_', '-')
          INTERPRET PARMNAME "= DATA"
          cmdstring = cmdstring || komma ":" || PARMNAME

          Interpret PARMNAME || "_I" || CMDI "= "IND
          cmdstring = cmdstring ":" || PARMNAME || "_I" || CMDI

          komma     = ","

          OUTSQLDA.SQLD          = OUTSQLDA.SQLD + 1
          SQLDI                  = OUTSQLDA.SQLD
          OUTSQLDA.SQLDI.SQLTYPE = sqltype
          OUTSQLDA.SQLDI.SQLLEN  = LENGTH
          OUTSQLDA.SQLDI.SQLIND  = 0
          OUTSQLDA.SQLDI.SQLDATA = DATA
      END

     Call CLOSE_CURSOR_AC3
     Proc = Subword(Proc, 2)
     If Length(Strip(cmdstring)) = 0 Then do
        cmdstring = cmd
        cmdstring = ":CM1"
        CM1       = Strip(cmd)
        cm1 = strip(cm1)
      End

     SQLTEXT = " Call " Proc "(" || cmdstring ||")"
     Call EXECUTE_SQL_TEXT_AC3

/*   if sqlcode < 0 Then call SQLERROR_AC3 */

     If SQLCODE = 0   ,
      | SQLCODE = 466 Then do
        Ausgabe = cmdstring
        Do while length(Ausgabe) > 0
           Parse value Ausgabe With parm "," Ausgabe
           ausi = 0
           If Words(Parm) > 1 Then Parm = Word(Parm, 1)
           If Words(Parm) > 1 Then IND  = Word(Parm, 2)
           Parm = Translate(Parm, ' ', ':')
           Interpret "Ausx = "Parm
           Interpret "Ausi = "ind
/*
           If ausi < 0 Then Ausx = ""
*/
           ou.0 = ou.0 + 1 ; oui = ou.0;
           ou.oui = parm "=" Ausx
         End
           ou.0 = ou.0 + 1 ; oui = ou.0;
           ou.oui = "RESULTS =" RESULTS
      End

     If sqlcode = 466 Then do
        Call Lesen_SProc_Data
      End

return

Lesen_SProc_Data:
  SAVE_PUTSTEM  = RXDB2_PUTSTEM
  RXDB2_PUTSTEM = Word(RXDB2_PUTSTEM, 1)
  SQLTEXT = "DESCRIBE PROCEDURE :PROC INTO :OUTSQLDA"
  Call EXECUTE_SQL_TEXT_AC3
  if sqlcode <> 0 Then do
     Say "Warning SQLERROR="sqlerror
     If sqlcode < 0 Then Do
        call sqlerror_ac3
        return 8
      End
   End

  /* Problem war SQLCODE=-423 SQLSTATE=0F001 */
  If OUTSQLDA.SQLD < RESULT_SETS Then RESULT_SETS = OUTSQLDA.SQLD

  /* Allocatte RESULT SET                                         */
  Loc_GES = ":RS_LoC1"
  if RESULT_SETS > 1 Then do
     Loc_GES = ""
     Komma = ''
     do loci = 1 to RESULT_SETS
        Loc_GES = Loc_Ges || Komma || ":" || "RS_Loc" || Loci" "
        Komma = ','
      End
   End
  Else Do
   End

  SQLTEXT = "ASSOCIATE LOCATORS ("Loc_Ges") WITH PROCEDURE "Proc
  Call EXECUTE_SQL_TEXT_AC3
  if sqlcode <> 0 Then do
     Say "Warning SQLERROR="SQLERROR
     SQLSTMT = SQLTEXT
     If sqlcode < 0 Then Do
        call sqlerror_ac3
        return 8
      End
   End

  CNR    = 100
  Do RESI = 1 to RESULT_SETS  /* Anzahl Resut_Sets (Anzahl Tables) */
     Loc     = ":" || "RS_Loc" || RESI
     CNR     = CNR + 1
     cursor  = "C"CNR
     SQLTEXT = "ALLOCATE C"CNR" CURSOR FOR RESULT SET "Loc
     Call EXECUTE_SQL_TEXT_AC3
     if sqlcode <> 0 Then do
        say SQLCODE  sqltext
        SQLSTMT = SQLTEXT
        If sqlcode < 0 Then Do
           call sqlerror_ac3
           return 8
         End
      End

     /* Describe the Cursor                                          */
     SQLTEXT = "DESCRIBE CURSOR :CURSOR INTO :OUTSQLDA"
     Call EXECUTE_SQL_TEXT_AC3
     If sqlcode <> 0 Then do
        Say "Warning SQLERROR="SQLERROR
       If sqlcode < 0 Then Do
          SQLSTMT = SQLTEXT
          call sqlerror_ac3
          return 8
        End
      End

   RXDB2_PUTSTEM = Word(SAVE_PUTSTEM, resi)
   If datatype(Anzeige_stem) = "NUM" ,
    & Anzeige_stem = resi Then Do
        COLS      = ""
        RXCOLS    = ""
        SQL_FETCH = ""
        KOMMA     = ""
        if datatype(OUTSQLDA.SQLD) = NUM THEN DO CI = 1 TO OUTSQLDA.SQLD
           cols   = cols OUTSQLDA.CI.SQLNAME
           rxcols = rxcols  SPACE(RXDB2_PUTSTEM, 0) || I || "." ||  ,
                            SPACE(OUTSQLDA.CI.SQLNAME, 0)
           SQL_FETCH = SQL_FETCH || komma || ":" || OUTSQLDA.CI.SQLNAME
           If OUTSQLDA.CI.SQLTYPE // 2 = 1 THEN Do
              SQL_FETCH = SQL_FETCH ":I" || ci
            END
           KOMMA = ","
           If ADD_TBCOL <> "N" & RXDB2_PUTSTEM = "AUSGABE."   Then Do
              CLNAME = Strip(OUTSQLDA.CI.SQLNAME, "T")
              Call ADD_TABLE_TBCOL
            End
         End
    End

      /* Fetch Data                                                   */
     call Fetch_Dynamic_data_ac3
  End /* END DO */

Return 0

SQLERROR_AC3:
/* process SQLERROR_AC3  */

  SAY 'SQLCODE        ='SQLCODE
  SAY 'SQLERRM        ='SQLERRMC
  SAY 'SQLCAID  ='SQLCAID
  SAY 'SQLCABC  ='SQLCABC
  SAY 'SQLCODE  ='SQLCODE
  SAY 'SQLERRM  ='SQLERRMC
  SAY 'SQLERRP  ='SQLERRP
  SAY 'SQLERRD.1='SQLERRD.1
  SAY 'SQLERRD.2='SQLERRD.2
  SAY 'SQLERRD.3='SQLERRD.3
  SAY 'SQLERRD.4='SQLERRD.4
  SAY 'SQLERRD.5='SQLERRD.5
  SAY 'SQLERRD.6='SQLERRD.6
  SAY 'SQLWARN  ='SQLWARN
  SAY 'SQLWARN0 ='SQLWARN0
  SAY 'SQLWARN1 ='SQLWARN.1
  SAY 'SQLWARN2 ='SQLWARN.2
  SAY 'SQLWARN3 ='SQLWARN.3
  SAY 'SQLWARN4 ='SQLWARN.4
  SAY 'SQLWARN5 ='SQLWARN.5
  SAY 'SQLWARN6 ='SQLWARN.6
  SAY 'SQLWARN7 ='SQLWARN.7
  SAY 'SQLWARN8 ='SQLWARN.8
  SAY 'SQLWARN9 ='SQLWARN.9
  SAY 'SQLWARNA ='SQLWARNA
  SAY 'SQLSTATE ='SQLSTATE

RETURN


MAKE_WHERELIST: PROCEDURE EXPOSE WHERELIST

COLUMNNAME = ARG(1)
ARGUMENT   = ARG(2)
ARGTYPE    = ARG(3)
ARGUMENT   = TRANSLATE(ARGUMENT, '%', '*')
IF LENGTH(STRIP(ARGUMENT)) = 0 ,
 & LENGTH(STRIP(COLUMNNAME)) = 0 THEN RETURN

IF TRANSLATE(WORD(WHERELIST, 1) ) = "WHERE" THEN ANDKZ = "AND"
 ELSE ANDKZ = "WHERE"

IF LENGTH(STRIP(COLUMNNAME)) = 0 ,
 & LENGTH(STRIP(ARGUMENT)) > 0 THEN DO
   WHERELIST = WHERELIST ANDKZ ARGUMENT
   RETURN
 END

IF LENGTH(STRIP(ARGUMENT)) = 0 THEN RETURN

If ARGTYPE = "NUM" Then do
   IF POS('%', ARGUMENT) > 0 THEN DO
      WHERELIST = WHERELIST ANDKZ COLUMNNAME "LIKE "ARGUMENT
    END
   Else Do
      WHERELIST = WHERELIST ANDKZ COLUMNNAME "= "ARGUMENT
    END
 End
Else Do
   IF POS('%', ARGUMENT) > 0 ,
    | POS('_', ARGUMENT) > 0 THEN DO
      WHERELIST = WHERELIST ANDKZ COLUMNNAME "LIKE '"ARGUMENT"'"
    END
   Else Do
      WHERELIST = WHERELIST ANDKZ COLUMNNAME "= '"ARGUMENT"'"
    END
 End

RETURN

OPEN_TABLE:

ADDRESS ISPEXEC  'TBCLOSE 'LUWTABLE
ADDRESS ISPEXEC  'TBERASE 'LUWTABLE
ADDRESS ISPEXEC  'TBOPEN  'LUWTABLE
IF RC <> 0 THEN Do
   ADDRESS ISPEXEC 'TBCREATE 'LUWTABLE  ,
                   'KEYS(ROWNR) NAMES(LCMD, LZEILE)'
   If rc <> 0 Then say "TBCREATE RC="RC
 End

RETURN

OPEN_COLTB:

ADDRESS ISPEXEC  'TBCLOSE 'COLTAB
ADDRESS ISPEXEC  'TBERASE 'COLTAB
ADDRESS ISPEXEC  'TBOPEN  'COLTAB
IF RC <> 0 THEN Do
   ADDRESS ISPEXEC 'TBCREATE 'COLTAB,
                   'KEYS(ROWNR) NAMES(CZEILE)'
   If rc <> 0 Then say "TBCREATE COLTAB RC="RC
 End

ADDRESS ISPEXEC  'TBCLOSE 'BRTAB
ADDRESS ISPEXEC  'TBERASE 'BRTAB
ADDRESS ISPEXEC  'TBOPEN  'BRTAB

IF RC <> 0 THEN Do
   ADDRESS ISPEXEC  'TBCLOSE 'BRTAB
   ADDRESS ISPEXEC 'TBCREATE 'BRTAB ,
                   'KEYS(ROWNR) NAMES(BZEILE)'
   If rc <> 0 Then DO
      say "TBCREATE "BRTAB "RC="RC
      say "ZEDSMSG="ZEDSMSG
      say "ZERRLM="ZERRLM
      say "ZERRMSG="ZERRMSG
      say "ZERRSM="ZERRSM
    End
    ADDRESS ISPEXEC  'TBOPEN  'BRTAB
 End
RETURN

OPEN_TBCOL:

ADDRESS ISPEXEC  'TBCLOSE 'TBCOL
ADDRESS ISPEXEC  'TBERASE 'TBCOL
ADDRESS ISPEXEC  'TBOPEN  'TBCOL
IF RC <> 0 THEN Do
   ADDRESS ISPEXEC 'TBCREATE 'TBCOL 'NAMES(CLNAME) '
   If rc <> 0 Then DO
      say "TBCREATE "TBCOL "RC="RC
      say "ZEDSMSG="ZEDSMSG
      say "ZERRLM="ZERRLM
      say "ZERRMSG="ZERRMSG
      say "ZERRSM="ZERRSM
    End
 End


RETURN

ADD_TABLE_TBCOL:

ADDRESS ISPEXEC 'TBADD 'TBCOL

RETURN


ADD_TABLE:

ROWNR  = ROWNR + 1
LZEILE = "       " || LZEILE
BZEILE = LZEILE
ADDRESS ISPEXEC 'TBADD 'LUWTABLE
ADDRESS ISPEXEC 'TBADD 'BRTAB
ANZAHL_ROWS = ANZAHL_ROWS + 1

CZeile = ""
Do czi = 1 to words(cols)
   ColValue = word(RXCols, czi)
   CZeile = CZeile || value(ColValue) || "0a0d"x
 End

ADDRESS ISPEXEC 'TBADD 'COLTAB

RETURN

ADD_TABLE_LUWTABLE:

ROWNR  = ROWNR + 1
LZEILE = "       " || LZEILE
BZEILE = LZEILE
ADDRESS ISPEXEC 'TBADD 'LUWTABLE
ADDRESS ISPEXEC 'TBADD 'BRTAB
ANZAHL_ROWS = ANZAHL_ROWS + 1

RETURN

CLOSE_TABLE:

ADDRESS ISPEXEC 'TBCLOSE 'LUWTABLE
ADDRESS ISPEXEC 'TBCLOSE 'COLTAB
ADDRESS ISPEXEC 'TBCLOSE 'BRTAB
ADDRESS ISPEXEC 'TBCLOSE 'TBCOL

RETURN

Edit_SQL:

EDIT_STMT = LUWEDSQL(ARG(1), LNR)

RETURN EDIT_STMT

Load_DSNREXX_AC3:
ADDRESS TSO "SUBCOM DSNREXX"
IF RC THEN   S_RC = RXSUBCOM('ADD','DSNREXX','DSNREXX')

ADDRESS DSNREXX "CONNECT "DB2_SSID
IF SQLCODE <  0 THEN SAY "CONNECT     SQLCODE="SQLCODE "<"DB2_SSID">"

Return

UNLoad_DSNREXX_AC3:

ADDRESS DSNREXX "DISCONNECT"
S_RC = RXSUBCOM('DELETE','DSNREXX','DSNREXX')

Return

Automatic_Header:

LOBVAL        = "404 405 408 409 412 413 988 989"
FNumeric      = "480 481 484 485 492 493 496 497 500 501 "

ADDRESS ISPEXEC  "VGET (ZSCREENW,ZSCREEND)"
/* LAENGENFELD AN HEADER ANPASSEN */
if datatype(OUTSQLDA.SQLD) = "NUM" THEN DO CI = 1 TO OUTSQLDA.SQLD
   IF Datatype(OUTSQLDA.ci.SQLLEN) = "NUM"  ,
    & OUTSQLDA.ci.SQLLEN < 0 THEN ITERATE  /* KEINE ANZEIGE */

   IF OUTSQLDA.CI.SQLTYPE = 492 | OUTSQLDA.CI.SQLTYPE = 493 Then do
      OUTSQLDA.ci.SQLLEN = 19   /* BIGINT   */
    End
   IF OUTSQLDA.CI.SQLTYPE = 496 | OUTSQLDA.CI.SQLTYPE = 497 Then do
      OUTSQLDA.ci.SQLLEN = 10   /* INTEGER  */
    End
   IF OUTSQLDA.CI.SQLTYPE = 500 | OUTSQLDA.CI.SQLTYPE = 501 Then do
      OUTSQLDA.ci.SQLLEN =  5   /* SAMLLINT */
    End
   IF OUTSQLDA.CI.SQLTYPE = 384 | OUTSQLDA.CI.SQLTYPE = 385 Then do
      OUTSQLDA.ci.SQLLEN = 10   /* DATE     */
    End
   IF OUTSQLDA.CI.SQLTYPE = 388 | OUTSQLDA.CI.SQLTYPE = 389 Then do
      OUTSQLDA.ci.SQLLEN =  8   /* TIME     */
    End
   IF OUTSQLDA.CI.SQLTYPE = 392 | OUTSQLDA.CI.SQLTYPE = 393 Then do
      OUTSQLDA.ci.SQLLEN =  26  /* TIMESTAMP  */
    End
   IF OUTSQLDA.CI.SQLTYPE = 484 | OUTSQLDA.CI.SQLTYPE = 485 Then do
      /*  DECIMAL  */
      OUTSQLDA.ci.SQLLEN = OUTSQLDA.ci.SQLLEN.SQLPRECISION + 1
    End
   IF Length(Strip(OUTSQLDA.CI.SQLNAME)) > OUTSQLDA.ci.SQLLEN Then Do
      OUTSQLDA.ci.SQLLEN = Length(Strip(OUTSQLDA.CI.SQLNAME))
    End
 END

If length(ddltext) < 6 Then Col_Start = 8
else Col_Start = 2

if datatype(OUTSQLDA.SQLD) = NUM THEN DO CI = 1 TO OUTSQLDA.SQLD
   IF Datatype(OUTSQLDA.ci.SQLLEN) = "NUM"  ,
    & OUTSQLDA.ci.SQLLEN < 0 THEN ITERATE  /* KEINE ANZEIGE */
   NI = CI + 1
   IF NI > OUTSQLDA.SQLD THEN NI = CI

   Test = Col_Start + OUTSQLDA.CI.SQLLEN + OUTSQLDA.NI.SQLLEN

   If Test >= ZSCREENW Then Do
      STest = ZSCREENW - Col_Start
      OUTSQLDA.CI.SQLLEN = OUTSQLDA.CI.SQLLEN + STest
      OUTSQLDA.CI.SQLLEN = STest
      Col_Start = 2 + OUTSQLDA.ci.SQLLEN
      Col_Start = 2
    End
   Else Do
      Col_Start = Col_Start + OUTSQLDA.ci.SQLLEN + 1
    End

 END

if datatype(OUTSQLDA.SQLD) = NUM THEN DO CI = 1 TO OUTSQLDA.SQLD
   IF Datatype(OUTSQLDA.ci.SQLLEN) = "NUM"  ,
    & OUTSQLDA.ci.SQLLEN < 0 THEN ITERATE  /* KEINE ANZEIGE */
   If pos(OUTSQLDA.CI.SQLTYPE, LOBVAL) > 0 ,
    & (OUTSQLDA.CI.SQLLEN = 0 | OUTSQLDA.CI.SQLLEN > 75 ) Then do
      OUTSQLDA.CI.SQLLEN = 75
    End
   coln = Strip(OUTSQLDA.CI.SQLNAME)
   If OUTSQLDA.ci.SQLLEN < length(coln) Then cl =  length(coln)
   Else                                      cl =  OUTSQLDA.ci.SQLLEN

   Schift = 'L'
   Fill   = ' '
   if Wordpos(OUTSQLDA.CI.SQLTYPE, FNumeric, 1) > 0 Then  Do
      Schift = 'R'
      Fill   = ' '
    End

   If CI = 1 Then
      DDLTEXT = DDLTEXT || ANZ_Daten(coln , '', Schift, cl, Fill)
   Else
      DDLTEXT = DDLTEXT ANZ_Daten(coln, '', Schift, cl, Fill)
 End
Return


Automatic_Data:
LOBVAL        = "404 405 408 409 412 413 988 989"
FNumeric      = "480 481 484 485 492 493 496 497 500 501 "
if datatype(OUTSQLDA.SQLD) = NUM THEN DO CI = 1 TO OUTSQLDA.SQLD
   IF OUTSQLDA.ci.SQLLEN < 0 THEN ITERATE /* KEINE ANZEIGE */
   If pos(OUTSQLDA.CI.SQLTYPE, LOBVAL) > 0 ,
    & (OUTSQLDA.CI.SQLLEN = 0 | OUTSQLDA.CI.SQLLEN > 75 ) Then do
      OUTSQLDA.CI.SQLLEN = 75
    End

   Schift = 'L'
   Fill   = ' '
   if Wordpos(OUTSQLDA.CI.SQLTYPE, FNumeric, 1) > 0 Then  Do
      Schift = 'R'
      Fill   = ' '
    End

   coln  = Strip(OUTSQLDA.CI.SQLNAME)
   If Datatype(Ausgabe.0) = "NUM" & Ausgabe.0 > 0 Then Do
      IVAL = "SData = AUSGABE.i." ||  COLN
      INTERPRET IVAL
    end
   else do
      SData = Value(OUTSQLDA.CI.SQLNAME)
    End
   If OUTSQLDA.ci.SQLLEN < length(coln)  Then cl =  length(coln)
   Else                                       cl =  OUTSQLDA.ci.SQLLEN

   If CI = 1 Then
      LZEILE  = LZEILE || ANZ_Daten('', SData, Schift, cl, Fill)
   Else
      LZEILE  = LZEILE ANZ_Daten(   '', SData, Schift, cl, Fill)
 End

Return

ANZ_Daten:

AUZeile = Arg(1)
ADaten  = Arg(2)
ASchift = Arg(3)
ALen    = Arg(4)
AFiller = Arg(5)

Select
  When Datatype(ALen) = "NUM" THEN NOP
  When Length(AUZeile) > Length(ADaten)  Then Alen = Length(AUZeile)
  When Length(ADaten)  > Length(AUZeile) Then Alen = Length(ADaten)
  Otherwise                                   Alen = Length(ADaten)
 End

If Length(Strip(Arg(1) )) > 0 Then do
   Select
     when ASchift = 'L'  Then RText = Left(AUZeile, ALen, AFiller)
     when ASchift = 'R'  Then RText = Right(AUZeile, ALen, AFiller )
     Otherwise                RText = Substr(Auzeile, 1, ALen)
    End
 End
Else Do
   Select
     when ASchift = 'L'  Then RText = Left(ADaten   , ALen, AFiller)
     when ASchift = 'R'  Then RText = Right(ADaten  , ALen, AFiller)
     Otherwise                RText = Substr(ADaten , 1, ALen)
    End
 End

Return RText
